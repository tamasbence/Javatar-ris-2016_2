
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

  public static boolean debug = false;

  @Test
  public void test001() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test001"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.Direction direction1 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo2 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper3 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl4 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction1, sidetriple_neighborTSMInfo2, loggerWrapper3);
    hu.bme.mit.swsv.ris.tsm.SignalMapper signalMapper5 = null;
    safetyLogicImpl4.setSignalMapper(signalMapper5);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus9 = null;
    hu.bme.mit.swsv.ris.common.Side side10 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal11 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)0, (int)(byte)100, neighborTSMStatus9, side10);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy12 = null;
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl4.sectionOccupancyChanged(side10, sectionOccupancy12);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction1 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction1.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side10 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side10.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));

  }

  @Test
  public void test002() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test002"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.Direction direction1 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo2 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper3 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl4 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction1, sidetriple_neighborTSMInfo2, loggerWrapper3);
    hu.bme.mit.swsv.ris.tsm.SignalMapper signalMapper5 = null;
    safetyLogicImpl4.setSignalMapper(signalMapper5);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus9 = null;
    hu.bme.mit.swsv.ris.common.Side side10 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal11 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus9, side10);
    hu.bme.mit.swsv.ris.common.Side side12 = heartBeatSignal11.getSenderSide();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus15 = null;
    hu.bme.mit.swsv.ris.common.Side side16 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal17 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus15, side16);
    hu.bme.mit.swsv.ris.common.Side side18 = heartBeatSignal17.getSenderSide();
    java.util.Date date19 = heartBeatSignal17.getTimestamp();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus20 = null;
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl4.neighborStatusChanged(side12, date19, neighborTSMStatus20);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction1 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction1.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side10 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side10.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side12 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side12.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side16 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side16.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side18 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side18.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date19);

  }

  @Test
  public void test003() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test003"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy7 = null;
    hu.bme.mit.swsv.ris.common.Direction direction8 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy7, direction8, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction8, sidetriple_neighborTSMInfo12, loggerWrapper13);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl14);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMStatus> sidetriple_neighborTSMStatus16 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl5.sendStatus(sidetriple_neighborTSMStatus16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction8 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction8.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test004() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test004"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i9 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i9, sidetriple_i10, sidetriple_side11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.Direction direction16 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo17 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper18 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl19 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction16, sidetriple_neighborTSMInfo17, loggerWrapper18);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy14, direction16, sidetriple_neighborTSMInfo20, loggerWrapper21);
    signalMapperImpl13.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy26 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy27 = null;
    hu.bme.mit.swsv.ris.common.Direction direction28 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo29 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper30 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl31 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy27, direction28, sidetriple_neighborTSMInfo29, loggerWrapper30);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo32 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper33 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl34 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy26, direction28, sidetriple_neighborTSMInfo32, loggerWrapper33);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal35 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction28);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl22.turnoutDirectionChanged(direction28);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction16 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction16.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction28 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction28.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test005() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test005"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy7 = null;
    hu.bme.mit.swsv.ris.common.Direction direction8 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy7, direction8, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction8, sidetriple_neighborTSMInfo12, loggerWrapper13);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl14);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionControl> sidetriple_sectionControl16 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl5.sendControl(sidetriple_sectionControl16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction8 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction8.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test006() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test006"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i9 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i9, sidetriple_i10, sidetriple_side11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.Direction direction16 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo17 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper18 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl19 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction16, sidetriple_neighborTSMInfo17, loggerWrapper18);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy14, direction16, sidetriple_neighborTSMInfo20, loggerWrapper21);
    signalMapperImpl13.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy25 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy26 = null;
    hu.bme.mit.swsv.ris.common.Direction direction27 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo28 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper29 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl30 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy26, direction27, sidetriple_neighborTSMInfo28, loggerWrapper29);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo31 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper32 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl33 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy25, direction27, sidetriple_neighborTSMInfo31, loggerWrapper32);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i35 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i36 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side37 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper38 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl39 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i35, sidetriple_i36, sidetriple_side37, loggerWrapper38);
    safetyLogicImpl33.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl39);
    safetyLogicImpl22.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl39);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus44 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.Side side45 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal46 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(10, (int)(short)1, neighborTSMStatus44, side45);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy47 = hu.bme.mit.swsv.ris.common.SectionOccupancy.OCCUPIED;
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl22.sectionOccupancyChanged(side45, sectionOccupancy47);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction16 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction16.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction27 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction27.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus44 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus44.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side45 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side45.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy47 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.OCCUPIED + "'", sectionOccupancy47.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.OCCUPIED));

  }

  @Test
  public void test007() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test007"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.Direction direction1 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo2 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper3 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl4 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction1, sidetriple_neighborTSMInfo2, loggerWrapper3);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy7 = null;
    hu.bme.mit.swsv.ris.common.Direction direction8 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy7, direction8, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction8, sidetriple_neighborTSMInfo12, loggerWrapper13);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal15 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction8);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl4.turnoutDirectionChanged(direction8);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction1 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction1.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction8 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction8.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test008() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test008"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.Direction direction7 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction7, sidetriple_neighborTSMInfo8, loggerWrapper9);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl10);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i13 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i13, sidetriple_i14, sidetriple_side15, loggerWrapper16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy19 = null;
    hu.bme.mit.swsv.ris.common.Direction direction20 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy19, direction20, sidetriple_neighborTSMInfo21, loggerWrapper22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo24 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper25 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl26 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy18, direction20, sidetriple_neighborTSMInfo24, loggerWrapper25);
    signalMapperImpl17.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMStatus> sidetriple_neighborTSMStatus29 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl5.sendStatus(sidetriple_neighborTSMStatus29);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction20 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction20.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test009() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test009"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.Direction direction7 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction7, sidetriple_neighborTSMInfo8, loggerWrapper9);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl10);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i13 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i13, sidetriple_i14, sidetriple_side15, loggerWrapper16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy19 = null;
    hu.bme.mit.swsv.ris.common.Direction direction20 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy19, direction20, sidetriple_neighborTSMInfo21, loggerWrapper22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo24 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper25 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl26 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy18, direction20, sidetriple_neighborTSMInfo24, loggerWrapper25);
    signalMapperImpl17.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionControl> sidetriple_sectionControl29 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl5.sendControl(sidetriple_sectionControl29);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction20 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction20.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test010() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test010"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.Direction direction4 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo5 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper6 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl7 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction4, sidetriple_neighborTSMInfo5, loggerWrapper6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction4, sidetriple_neighborTSMInfo8, loggerWrapper9);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal11 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction4, sidetriple_neighborTSMInfo12, loggerWrapper13);
    hu.bme.mit.swsv.ris.common.Side side15 = hu.bme.mit.swsv.ris.common.Side.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy16 = hu.bme.mit.swsv.ris.common.SectionOccupancy.OCCUPIED;
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl14.sectionOccupancyChanged(side15, sectionOccupancy16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction4 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction4.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side15 + "' != '" + hu.bme.mit.swsv.ris.common.Side.DIVERGENT + "'", side15.equals(hu.bme.mit.swsv.ris.common.Side.DIVERGENT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy16 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.OCCUPIED + "'", sectionOccupancy16.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.OCCUPIED));

  }

  @Test
  public void test011() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test011"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.Direction direction2 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction2, sidetriple_neighborTSMInfo3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction2, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i11 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i10, sidetriple_i11, sidetriple_side12, loggerWrapper13);
    safetyLogicImpl8.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl14);
    hu.bme.mit.swsv.ris.common.Side side16 = hu.bme.mit.swsv.ris.common.Side.FACING;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus19 = null;
    hu.bme.mit.swsv.ris.common.Side side20 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal21 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus19, side20);
    hu.bme.mit.swsv.ris.common.Side side22 = heartBeatSignal21.getSenderSide();
    java.util.Date date23 = heartBeatSignal21.getTimestamp();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus26 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus29 = null;
    hu.bme.mit.swsv.ris.common.Side side30 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal31 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus29, side30);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal32 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, (int)(short)100, neighborTSMStatus26, side30);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl8.neighborStatusChanged(side16, date23, neighborTSMStatus26);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction2 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction2.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side16 + "' != '" + hu.bme.mit.swsv.ris.common.Side.FACING + "'", side16.equals(hu.bme.mit.swsv.ris.common.Side.FACING));
    org.junit.Assert.assertTrue("'" + side20 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side20.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side22 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side22.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date23);
    org.junit.Assert.assertTrue("'" + neighborTSMStatus26 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus26.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side30 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side30.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));

  }

  @Test
  public void test012() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test012"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy4 = null;
    hu.bme.mit.swsv.ris.common.Direction direction5 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy4, direction5, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction5, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal12 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction5);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo13 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper14 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl15 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction5, sidetriple_neighborTSMInfo13, loggerWrapper14);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo16 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper17 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl18 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction5, sidetriple_neighborTSMInfo16, loggerWrapper17);
    hu.bme.mit.swsv.ris.common.Side side19 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy20 = hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE;
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl18.sectionOccupancyChanged(side19, sectionOccupancy20);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction5 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction5.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side19 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side19.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy20 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy20.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));

  }

  @Test
  public void test013() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test013"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.Direction direction7 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction7, sidetriple_neighborTSMInfo8, loggerWrapper9);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl10);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i13 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i13, sidetriple_i14, sidetriple_side15, loggerWrapper16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy19 = null;
    hu.bme.mit.swsv.ris.common.Direction direction20 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy19, direction20, sidetriple_neighborTSMInfo21, loggerWrapper22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo24 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper25 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl26 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy18, direction20, sidetriple_neighborTSMInfo24, loggerWrapper25);
    signalMapperImpl17.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    hu.bme.mit.swsv.ris.common.Direction direction30 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal31 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)10, direction30);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl26.turnoutDirectionChanged(direction30);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction20 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction20.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction30 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction30.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test014() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test014"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.Direction direction4 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo5 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper6 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl7 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction4, sidetriple_neighborTSMInfo5, loggerWrapper6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction4, sidetriple_neighborTSMInfo8, loggerWrapper9);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal11 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction4, sidetriple_neighborTSMInfo12, loggerWrapper13);
    hu.bme.mit.swsv.ris.common.Side side15 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus18 = null;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus21 = null;
    hu.bme.mit.swsv.ris.common.Side side22 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal23 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus21, side22);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal24 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(byte)100, (int)(byte)-1, neighborTSMStatus18, side22);
    java.util.Date date25 = heartBeatSignal24.getTimestamp();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus28 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.Side side29 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal30 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(10, (int)(short)1, neighborTSMStatus28, side29);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl14.neighborStatusChanged(side15, date25, neighborTSMStatus28);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction4 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction4.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side15 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side15.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side22 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side22.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date25);
    org.junit.Assert.assertTrue("'" + neighborTSMStatus28 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus28.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side29 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side29.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));

  }

  @Test
  public void test015() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test015"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy7 = null;
    hu.bme.mit.swsv.ris.common.Direction direction8 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy7, direction8, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction8, sidetriple_neighborTSMInfo12, loggerWrapper13);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl14);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus18 = null;
    hu.bme.mit.swsv.ris.common.Side side19 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal20 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)0, (int)(byte)100, neighborTSMStatus18, side19);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus23 = null;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus26 = null;
    hu.bme.mit.swsv.ris.common.Side side27 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal28 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus26, side27);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal29 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(byte)100, (int)(byte)-1, neighborTSMStatus23, side27);
    java.lang.String str30 = heartBeatSignal29.toString();
    java.util.Date date31 = heartBeatSignal29.getTimestamp();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus32 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED;
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl14.neighborStatusChanged(side19, date31, neighborTSMStatus32);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction8 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction8.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side19 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side19.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side27 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side27.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "HeartBeatSignal(sender: 100 (STRAIGHT), target: -1, status: null, timestamp: Thu Dec 01 10:44:25 CET 2016)"+ "'", str30.equals("HeartBeatSignal(sender: 100 (STRAIGHT), target: -1, status: null, timestamp: Thu Dec 01 10:44:25 CET 2016)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date31);
    org.junit.Assert.assertTrue("'" + neighborTSMStatus32 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED + "'", neighborTSMStatus32.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED));

  }

  @Test
  public void test016() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test016"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy7 = null;
    hu.bme.mit.swsv.ris.common.Direction direction8 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy7, direction8, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction8, sidetriple_neighborTSMInfo12, loggerWrapper13);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl14);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus18 = null;
    hu.bme.mit.swsv.ris.common.Side side19 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal20 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus18, side19);
    hu.bme.mit.swsv.ris.common.Side side21 = heartBeatSignal20.getSenderSide();
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy23 = hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal24 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy23);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl14.sectionOccupancyChanged(side21, sectionOccupancy23);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction8 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction8.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side19 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side19.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side21 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side21.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy23 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy23.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));

  }

  @Test
  public void test017() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test017"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.Direction direction2 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction2, sidetriple_neighborTSMInfo3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction2, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i11 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i10, sidetriple_i11, sidetriple_side12, loggerWrapper13);
    safetyLogicImpl8.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl14);
    safetyLogicImpl8.disconnect();
    safetyLogicImpl8.disconnect();
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy20 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy21 = null;
    hu.bme.mit.swsv.ris.common.Direction direction22 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo23 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper24 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl25 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy21, direction22, sidetriple_neighborTSMInfo23, loggerWrapper24);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo26 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper27 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl28 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy20, direction22, sidetriple_neighborTSMInfo26, loggerWrapper27);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal29 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo30 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper31 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl32 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy18, direction22, sidetriple_neighborTSMInfo30, loggerWrapper31);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl8.turnoutDirectionChanged(direction22);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction2 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction2.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction22 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction22.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test018() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test018"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.Direction direction2 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction2, sidetriple_neighborTSMInfo3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction2, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus11 = null;
    hu.bme.mit.swsv.ris.common.Side side12 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal13 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus11, side12);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy14 = hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE;
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl8.sectionOccupancyChanged(side12, sectionOccupancy14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction2 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction2.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side12 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side12.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy14 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy14.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));

  }

  @Test
  public void test019() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test019"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.Direction direction2 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction2, sidetriple_neighborTSMInfo3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction2, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i11 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i10, sidetriple_i11, sidetriple_side12, loggerWrapper13);
    safetyLogicImpl8.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl14);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy16 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy17 = null;
    hu.bme.mit.swsv.ris.common.Direction direction18 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo19 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper20 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl21 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy17, direction18, sidetriple_neighborTSMInfo19, loggerWrapper20);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo22 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper23 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl24 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy16, direction18, sidetriple_neighborTSMInfo22, loggerWrapper23);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl8.turnoutDirectionChanged(direction18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction2 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction2.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction18 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction18.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test020() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test020"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.Direction direction7 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction7, sidetriple_neighborTSMInfo8, loggerWrapper9);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl10);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i13 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i13, sidetriple_i14, sidetriple_side15, loggerWrapper16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy19 = null;
    hu.bme.mit.swsv.ris.common.Direction direction20 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy19, direction20, sidetriple_neighborTSMInfo21, loggerWrapper22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo24 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper25 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl26 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy18, direction20, sidetriple_neighborTSMInfo24, loggerWrapper25);
    signalMapperImpl17.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy30 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy31 = null;
    hu.bme.mit.swsv.ris.common.Direction direction32 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo33 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper34 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl35 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy31, direction32, sidetriple_neighborTSMInfo33, loggerWrapper34);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo36 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper37 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl38 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy30, direction32, sidetriple_neighborTSMInfo36, loggerWrapper37);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal39 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction32);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl26.turnoutDirectionChanged(direction32);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction20 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction20.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction32 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction32.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test021() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test021"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy4 = null;
    hu.bme.mit.swsv.ris.common.Direction direction5 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy4, direction5, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction5, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal12 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction5);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal13 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)100, direction5);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction5, sidetriple_neighborTSMInfo14, loggerWrapper15);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus19 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus22 = null;
    hu.bme.mit.swsv.ris.common.Side side23 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal24 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus22, side23);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal25 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, (int)(short)100, neighborTSMStatus19, side23);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus28 = null;
    hu.bme.mit.swsv.ris.common.Side side29 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal30 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)0, (int)(byte)100, neighborTSMStatus28, side29);
    java.util.Date date31 = heartBeatSignal30.getTimestamp();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus34 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus37 = null;
    hu.bme.mit.swsv.ris.common.Side side38 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal39 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus37, side38);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal40 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, (int)(short)100, neighborTSMStatus34, side38);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl16.neighborStatusChanged(side23, date31, neighborTSMStatus34);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction5 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction5.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus19 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus19.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side23 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side23.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side29 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side29.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date31);
    org.junit.Assert.assertTrue("'" + neighborTSMStatus34 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus34.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side38 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side38.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));

  }

  @Test
  public void test022() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test022"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy7 = null;
    hu.bme.mit.swsv.ris.common.Direction direction8 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy7, direction8, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction8, sidetriple_neighborTSMInfo12, loggerWrapper13);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl14);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy16 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy19 = null;
    hu.bme.mit.swsv.ris.common.Direction direction20 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy19, direction20, sidetriple_neighborTSMInfo21, loggerWrapper22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo24 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper25 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl26 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy18, direction20, sidetriple_neighborTSMInfo24, loggerWrapper25);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal27 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction20);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo28 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper29 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl30 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy16, direction20, sidetriple_neighborTSMInfo28, loggerWrapper29);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl14.turnoutDirectionChanged(direction20);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction8 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction8.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction20 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction20.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test023() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test023"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i9 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i9, sidetriple_i10, sidetriple_side11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.Direction direction16 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo17 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper18 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl19 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction16, sidetriple_neighborTSMInfo17, loggerWrapper18);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy14, direction16, sidetriple_neighborTSMInfo20, loggerWrapper21);
    signalMapperImpl13.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy25 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy26 = null;
    hu.bme.mit.swsv.ris.common.Direction direction27 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo28 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper29 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl30 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy26, direction27, sidetriple_neighborTSMInfo28, loggerWrapper29);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo31 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper32 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl33 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy25, direction27, sidetriple_neighborTSMInfo31, loggerWrapper32);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i35 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i36 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side37 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper38 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl39 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i35, sidetriple_i36, sidetriple_side37, loggerWrapper38);
    safetyLogicImpl33.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl39);
    safetyLogicImpl22.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl39);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus44 = null;
    hu.bme.mit.swsv.ris.common.Side side45 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal46 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus44, side45);
    hu.bme.mit.swsv.ris.common.Side side47 = heartBeatSignal46.getSenderSide();
    java.lang.Integer i48 = heartBeatSignal46.getTargetId();
    java.lang.Integer i49 = heartBeatSignal46.getSenderId();
    java.lang.String str50 = heartBeatSignal46.toString();
    hu.bme.mit.swsv.ris.common.Side side51 = heartBeatSignal46.getSenderSide();
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy53 = hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal54 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy53);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl22.sectionOccupancyChanged(side51, sectionOccupancy53);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction16 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction16.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction27 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction27.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side45 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side45.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side47 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side47.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i48 + "' != '" + 100+ "'", i48.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i49 + "' != '" + (-1)+ "'", i49.equals((-1)));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:25 CET 2016)"+ "'", str50.equals("HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:25 CET 2016)"));
    org.junit.Assert.assertTrue("'" + side51 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side51.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy53 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy53.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));

  }

  @Test
  public void test024() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test024"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i9 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i9, sidetriple_i10, sidetriple_side11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.Direction direction16 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo17 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper18 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl19 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction16, sidetriple_neighborTSMInfo17, loggerWrapper18);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy14, direction16, sidetriple_neighborTSMInfo20, loggerWrapper21);
    signalMapperImpl13.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy25 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy26 = null;
    hu.bme.mit.swsv.ris.common.Direction direction27 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo28 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper29 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl30 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy26, direction27, sidetriple_neighborTSMInfo28, loggerWrapper29);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo31 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper32 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl33 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy25, direction27, sidetriple_neighborTSMInfo31, loggerWrapper32);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i35 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i36 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side37 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper38 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl39 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i35, sidetriple_i36, sidetriple_side37, loggerWrapper38);
    safetyLogicImpl33.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl39);
    safetyLogicImpl22.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl39);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionControl> sidetriple_sectionControl42 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl39.sendControl(sidetriple_sectionControl42);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction16 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction16.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction27 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction27.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test025() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test025"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.Direction direction2 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction2, sidetriple_neighborTSMInfo3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction2, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus11 = null;
    hu.bme.mit.swsv.ris.common.Side side12 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal13 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)0, (int)(byte)100, neighborTSMStatus11, side12);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy14 = hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE;
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl8.sectionOccupancyChanged(side12, sectionOccupancy14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction2 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction2.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side12 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side12.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy14 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy14.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));

  }

  @Test
  public void test026() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test026"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.Direction direction1 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo2 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper3 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl4 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction1, sidetriple_neighborTSMInfo2, loggerWrapper3);
    hu.bme.mit.swsv.ris.tsm.SignalMapper signalMapper5 = null;
    safetyLogicImpl4.setSignalMapper(signalMapper5);
    hu.bme.mit.swsv.ris.common.Side side7 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus10 = null;
    hu.bme.mit.swsv.ris.common.Side side11 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal12 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)0, (int)(byte)100, neighborTSMStatus10, side11);
    java.util.Date date13 = heartBeatSignal12.getTimestamp();
    hu.bme.mit.swsv.ris.common.Side side14 = heartBeatSignal12.getSenderSide();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus15 = heartBeatSignal12.getStatus();
    java.util.Date date16 = heartBeatSignal12.getTimestamp();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus17 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl4.neighborStatusChanged(side7, date16, neighborTSMStatus17);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction1 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction1.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side7 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side7.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side11 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side11.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertTrue("'" + side14 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side14.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(neighborTSMStatus15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date16);
    org.junit.Assert.assertTrue("'" + neighborTSMStatus17 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus17.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));

  }

  @Test
  public void test027() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test027"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.Direction direction2 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction2, sidetriple_neighborTSMInfo3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction2, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.Direction direction9 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl8.turnoutDirectionChanged(direction9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction2 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction2.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction9 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction9.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test028() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test028"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i9 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i9, sidetriple_i10, sidetriple_side11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.Direction direction16 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo17 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper18 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl19 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction16, sidetriple_neighborTSMInfo17, loggerWrapper18);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy14, direction16, sidetriple_neighborTSMInfo20, loggerWrapper21);
    signalMapperImpl13.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy25 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy26 = null;
    hu.bme.mit.swsv.ris.common.Direction direction27 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo28 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper29 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl30 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy26, direction27, sidetriple_neighborTSMInfo28, loggerWrapper29);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo31 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper32 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl33 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy25, direction27, sidetriple_neighborTSMInfo31, loggerWrapper32);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i35 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i36 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side37 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper38 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl39 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i35, sidetriple_i36, sidetriple_side37, loggerWrapper38);
    safetyLogicImpl33.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl39);
    safetyLogicImpl22.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl39);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMStatus> sidetriple_neighborTSMStatus42 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl39.sendStatus(sidetriple_neighborTSMStatus42);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction16 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction16.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction27 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction27.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test029() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test029"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy7 = null;
    hu.bme.mit.swsv.ris.common.Direction direction8 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy7, direction8, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction8, sidetriple_neighborTSMInfo12, loggerWrapper13);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl14);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy16 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy17 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy19 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy20 = null;
    hu.bme.mit.swsv.ris.common.Direction direction21 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo22 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper23 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl24 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy20, direction21, sidetriple_neighborTSMInfo22, loggerWrapper23);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo25 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper26 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl27 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy19, direction21, sidetriple_neighborTSMInfo25, loggerWrapper26);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal28 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction21);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo29 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper30 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl31 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy17, direction21, sidetriple_neighborTSMInfo29, loggerWrapper30);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo32 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper33 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl34 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy16, direction21, sidetriple_neighborTSMInfo32, loggerWrapper33);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl14.turnoutDirectionChanged(direction21);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction8 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction8.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction21 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction21.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test030() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test030"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy4 = null;
    hu.bme.mit.swsv.ris.common.Direction direction5 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy4, direction5, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction5, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal12 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction5);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo13 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper14 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl15 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction5, sidetriple_neighborTSMInfo13, loggerWrapper14);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo16 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper17 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl18 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction5, sidetriple_neighborTSMInfo16, loggerWrapper17);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus21 = null;
    hu.bme.mit.swsv.ris.common.Side side22 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal23 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus21, side22);
    hu.bme.mit.swsv.ris.common.Side side24 = heartBeatSignal23.getSenderSide();
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy28 = hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal29 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy28);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal30 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(short)100, sectionOccupancy28);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal31 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy28);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl18.sectionOccupancyChanged(side24, sectionOccupancy28);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction5 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction5.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side22 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side22.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side24 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side24.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy28 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy28.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));

  }

  @Test
  public void test031() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test031"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy4 = null;
    hu.bme.mit.swsv.ris.common.Direction direction5 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy4, direction5, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction5, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal12 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction5);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo13 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper14 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl15 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction5, sidetriple_neighborTSMInfo13, loggerWrapper14);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo16 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper17 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl18 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction5, sidetriple_neighborTSMInfo16, loggerWrapper17);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy19 = null;
    hu.bme.mit.swsv.ris.common.Direction direction20 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy19, direction20, sidetriple_neighborTSMInfo21, loggerWrapper22);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl18.turnoutDirectionChanged(direction20);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction5 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction5.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction20 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction20.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test032() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test032"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.Direction direction3 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo4 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper5 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl6 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction3, sidetriple_neighborTSMInfo4, loggerWrapper5);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo7 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper8 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl9 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction3, sidetriple_neighborTSMInfo7, loggerWrapper8);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal10 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction3);
    java.lang.String str11 = turnoutDirectionSignal10.toString();
    org.junit.Assert.assertTrue("'" + direction3 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction3.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "TurnoutDirectionSignal(sender: 0, direction: DIVERGENT)"+ "'", str11.equals("TurnoutDirectionSignal(sender: 0, direction: DIVERGENT)"));

  }

  @Test
  public void test033() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test033"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i9 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i9, sidetriple_i10, sidetriple_side11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.Direction direction16 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo17 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper18 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl19 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction16, sidetriple_neighborTSMInfo17, loggerWrapper18);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy14, direction16, sidetriple_neighborTSMInfo20, loggerWrapper21);
    signalMapperImpl13.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy25 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy26 = null;
    hu.bme.mit.swsv.ris.common.Direction direction27 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo28 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper29 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl30 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy26, direction27, sidetriple_neighborTSMInfo28, loggerWrapper29);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo31 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper32 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl33 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy25, direction27, sidetriple_neighborTSMInfo31, loggerWrapper32);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i35 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i36 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side37 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper38 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl39 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i35, sidetriple_i36, sidetriple_side37, loggerWrapper38);
    safetyLogicImpl33.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl39);
    safetyLogicImpl22.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl39);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy42 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy43 = null;
    hu.bme.mit.swsv.ris.common.Direction direction44 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo45 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper46 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl47 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy43, direction44, sidetriple_neighborTSMInfo45, loggerWrapper46);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo48 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper49 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl50 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy42, direction44, sidetriple_neighborTSMInfo48, loggerWrapper49);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl22.turnoutDirectionChanged(direction44);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction16 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction16.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction27 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction27.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction44 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction44.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test034() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test034"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.Direction direction2 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction2, sidetriple_neighborTSMInfo3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction2, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus11 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus14 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus17 = null;
    hu.bme.mit.swsv.ris.common.Side side18 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal19 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus17, side18);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal20 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, (int)(short)100, neighborTSMStatus14, side18);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal21 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)'#', 10, neighborTSMStatus11, side18);
    java.util.Date date22 = null;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus25 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.Side side26 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal27 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(10, (int)(short)1, neighborTSMStatus25, side26);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl8.neighborStatusChanged(side18, date22, neighborTSMStatus25);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction2 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction2.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus11 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED + "'", neighborTSMStatus11.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus14 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus14.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side18 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side18.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus25 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus25.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side26 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side26.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));

  }

  @Test
  public void test035() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test035"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.Direction direction4 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo5 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper6 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl7 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction4, sidetriple_neighborTSMInfo5, loggerWrapper6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction4, sidetriple_neighborTSMInfo8, loggerWrapper9);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal11 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(97, direction4);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal12 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(1, direction4);
    org.junit.Assert.assertTrue("'" + direction4 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction4.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test036() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test036"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy9 = null;
    hu.bme.mit.swsv.ris.common.Direction direction10 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy9, direction10, sidetriple_neighborTSMInfo11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy8, direction10, sidetriple_neighborTSMInfo14, loggerWrapper15);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl16);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient18 = null;
    signalMapperImpl5.setMqClient(mQClient18);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMStatus> sidetriple_neighborTSMStatus20 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl5.sendStatus(sidetriple_neighborTSMStatus20);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction10 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction10.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test037() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test037"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.Direction direction2 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction2, sidetriple_neighborTSMInfo3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction2, sidetriple_neighborTSMInfo6, loggerWrapper7);
    safetyLogicImpl8.disconnect();
    hu.bme.mit.swsv.ris.common.Side side10 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy11 = hu.bme.mit.swsv.ris.common.SectionOccupancy.OCCUPIED;
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl8.sectionOccupancyChanged(side10, sectionOccupancy11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction2 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction2.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side10 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side10.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy11 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.OCCUPIED + "'", sectionOccupancy11.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.OCCUPIED));

  }

  @Test
  public void test038() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test038"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy7 = null;
    hu.bme.mit.swsv.ris.common.Direction direction8 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy7, direction8, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction8, sidetriple_neighborTSMInfo12, loggerWrapper13);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl14);
    hu.bme.mit.swsv.ris.common.Side side16 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy17 = hu.bme.mit.swsv.ris.common.SectionOccupancy.OCCUPIED;
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl14.sectionOccupancyChanged(side16, sectionOccupancy17);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction8 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction8.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side16 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side16.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy17 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.OCCUPIED + "'", sectionOccupancy17.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.OCCUPIED));

  }

  @Test
  public void test039() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test039"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)1, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy7 = null;
    hu.bme.mit.swsv.ris.common.Direction direction8 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy7, direction8, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction8, sidetriple_neighborTSMInfo12, loggerWrapper13);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i16 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i17 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side18 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper19 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl20 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i16, sidetriple_i17, sidetriple_side18, loggerWrapper19);
    safetyLogicImpl14.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl20);
    safetyLogicImpl14.disconnect();
    safetyLogicImpl14.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl14);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus27 = null;
    hu.bme.mit.swsv.ris.common.Side side28 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal29 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus27, side28);
    hu.bme.mit.swsv.ris.common.Side side30 = heartBeatSignal29.getSenderSide();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus33 = null;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus36 = null;
    hu.bme.mit.swsv.ris.common.Side side37 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal38 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus36, side37);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal39 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(byte)100, (int)(byte)-1, neighborTSMStatus33, side37);
    java.util.Date date40 = heartBeatSignal39.getTimestamp();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus43 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus46 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus49 = null;
    hu.bme.mit.swsv.ris.common.Side side50 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal51 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus49, side50);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal52 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, (int)(short)100, neighborTSMStatus46, side50);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal53 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)'#', 10, neighborTSMStatus43, side50);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl14.neighborStatusChanged(side30, date40, neighborTSMStatus43);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction8 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction8.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side28 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side28.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side30 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side30.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side37 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side37.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date40);
    org.junit.Assert.assertTrue("'" + neighborTSMStatus43 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED + "'", neighborTSMStatus43.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus46 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus46.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side50 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side50.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));

  }

  @Test
  public void test040() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test040"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy9 = null;
    hu.bme.mit.swsv.ris.common.Direction direction10 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy9, direction10, sidetriple_neighborTSMInfo11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy8, direction10, sidetriple_neighborTSMInfo14, loggerWrapper15);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl16);
    hu.bme.mit.swsv.ris.common.Direction direction18 = null;
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl16.turnoutDirectionChanged(direction18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction10 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction10.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test041() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test041"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)1, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy7 = null;
    hu.bme.mit.swsv.ris.common.Direction direction8 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy7, direction8, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction8, sidetriple_neighborTSMInfo12, loggerWrapper13);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i16 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i17 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side18 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper19 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl20 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i16, sidetriple_i17, sidetriple_side18, loggerWrapper19);
    safetyLogicImpl14.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl20);
    safetyLogicImpl14.disconnect();
    safetyLogicImpl14.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl14);
    safetyLogicImpl14.disconnect();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus28 = null;
    hu.bme.mit.swsv.ris.common.Side side29 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal30 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)0, (int)(byte)100, neighborTSMStatus28, side29);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy33 = hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal34 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy33);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal35 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(short)100, sectionOccupancy33);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl14.sectionOccupancyChanged(side29, sectionOccupancy33);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction8 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction8.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side29 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side29.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy33 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy33.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));

  }

  @Test
  public void test042() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test042"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.Direction direction2 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction2, sidetriple_neighborTSMInfo3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction2, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i11 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i10, sidetriple_i11, sidetriple_side12, loggerWrapper13);
    safetyLogicImpl8.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl14);
    safetyLogicImpl8.disconnect();
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy17 = null;
    hu.bme.mit.swsv.ris.common.Direction direction18 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo19 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper20 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl21 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy17, direction18, sidetriple_neighborTSMInfo19, loggerWrapper20);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl8.turnoutDirectionChanged(direction18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction2 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction2.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction18 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction18.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test043() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test043"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)97, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy9 = null;
    hu.bme.mit.swsv.ris.common.Direction direction10 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy9, direction10, sidetriple_neighborTSMInfo11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy8, direction10, sidetriple_neighborTSMInfo14, loggerWrapper15);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal17 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo18 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper19 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl20 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction10, sidetriple_neighborTSMInfo18, loggerWrapper19);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl20);
    hu.bme.mit.swsv.ris.common.Side side22 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus25 = null;
    hu.bme.mit.swsv.ris.common.Side side26 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal27 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)0, (int)(byte)100, neighborTSMStatus25, side26);
    java.util.Date date28 = heartBeatSignal27.getTimestamp();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus31 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.Side side32 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal33 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(10, (int)(short)1, neighborTSMStatus31, side32);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl20.neighborStatusChanged(side22, date28, neighborTSMStatus31);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction10 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction10.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side22 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side22.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side26 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side26.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date28);
    org.junit.Assert.assertTrue("'" + neighborTSMStatus31 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus31.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side32 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side32.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));

  }

  @Test
  public void test044() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test044"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.Direction direction4 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo5 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper6 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl7 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction4, sidetriple_neighborTSMInfo5, loggerWrapper6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction4, sidetriple_neighborTSMInfo8, loggerWrapper9);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal11 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction4);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal12 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)100, direction4);
    java.lang.String str13 = turnoutDirectionSignal12.toString();
    org.junit.Assert.assertTrue("'" + direction4 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction4.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "TurnoutDirectionSignal(sender: 100, direction: DIVERGENT)"+ "'", str13.equals("TurnoutDirectionSignal(sender: 100, direction: DIVERGENT)"));

  }

  @Test
  public void test045() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test045"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.Direction direction7 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction7, sidetriple_neighborTSMInfo8, loggerWrapper9);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl10);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i13 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i13, sidetriple_i14, sidetriple_side15, loggerWrapper16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy19 = null;
    hu.bme.mit.swsv.ris.common.Direction direction20 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy19, direction20, sidetriple_neighborTSMInfo21, loggerWrapper22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo24 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper25 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl26 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy18, direction20, sidetriple_neighborTSMInfo24, loggerWrapper25);
    signalMapperImpl17.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus31 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus34 = null;
    hu.bme.mit.swsv.ris.common.Side side35 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal36 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus34, side35);
    hu.bme.mit.swsv.ris.common.Side side37 = heartBeatSignal36.getSenderSide();
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal38 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)' ', (int)(byte)0, neighborTSMStatus31, side37);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy41 = hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal42 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy41);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal43 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(short)100, sectionOccupancy41);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl26.sectionOccupancyChanged(side37, sectionOccupancy41);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction20 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction20.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus31 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED + "'", neighborTSMStatus31.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED));
    org.junit.Assert.assertTrue("'" + side35 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side35.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side37 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side37.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy41 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy41.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));

  }

  @Test
  public void test046() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test046"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy4 = null;
    hu.bme.mit.swsv.ris.common.Direction direction5 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy4, direction5, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction5, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal12 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction5);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal13 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)100, direction5);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction5, sidetriple_neighborTSMInfo14, loggerWrapper15);
    hu.bme.mit.swsv.ris.common.Side side17 = hu.bme.mit.swsv.ris.common.Side.FACING;
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy18 = hu.bme.mit.swsv.ris.common.SectionOccupancy.OCCUPIED;
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl16.sectionOccupancyChanged(side17, sectionOccupancy18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction5 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction5.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side17 + "' != '" + hu.bme.mit.swsv.ris.common.Side.FACING + "'", side17.equals(hu.bme.mit.swsv.ris.common.Side.FACING));
    org.junit.Assert.assertTrue("'" + sectionOccupancy18 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.OCCUPIED + "'", sectionOccupancy18.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.OCCUPIED));

  }

  @Test
  public void test047() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test047"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.Direction direction4 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo5 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper6 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl7 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction4, sidetriple_neighborTSMInfo5, loggerWrapper6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction4, sidetriple_neighborTSMInfo8, loggerWrapper9);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal11 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction4, sidetriple_neighborTSMInfo12, loggerWrapper13);
    safetyLogicImpl14.disconnect();
    hu.bme.mit.swsv.ris.common.Side side16 = null;
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy18 = hu.bme.mit.swsv.ris.common.SectionOccupancy.OCCUPIED;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal19 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal(10, sectionOccupancy18);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl14.sectionOccupancyChanged(side16, sectionOccupancy18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction4 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction4.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy18 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.OCCUPIED + "'", sectionOccupancy18.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.OCCUPIED));

  }

  @Test
  public void test048() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test048"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy9 = null;
    hu.bme.mit.swsv.ris.common.Direction direction10 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy9, direction10, sidetriple_neighborTSMInfo11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy8, direction10, sidetriple_neighborTSMInfo14, loggerWrapper15);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl16);
    hu.bme.mit.swsv.ris.common.Side side18 = null;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus21 = null;
    hu.bme.mit.swsv.ris.common.Side side22 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal23 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus21, side22);
    hu.bme.mit.swsv.ris.common.Side side24 = heartBeatSignal23.getSenderSide();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus25 = heartBeatSignal23.getStatus();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus26 = heartBeatSignal23.getStatus();
    java.util.Date date27 = heartBeatSignal23.getTimestamp();
    java.util.Date date28 = heartBeatSignal23.getTimestamp();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus31 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus34 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus37 = null;
    hu.bme.mit.swsv.ris.common.Side side38 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal39 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus37, side38);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal40 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, (int)(short)100, neighborTSMStatus34, side38);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal41 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)'#', 10, neighborTSMStatus31, side38);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl16.neighborStatusChanged(side18, date28, neighborTSMStatus31);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction10 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction10.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side22 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side22.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side24 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side24.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(neighborTSMStatus25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(neighborTSMStatus26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date28);
    org.junit.Assert.assertTrue("'" + neighborTSMStatus31 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED + "'", neighborTSMStatus31.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus34 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus34.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side38 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side38.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));

  }

  @Test
  public void test049() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test049"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i9 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i9, sidetriple_i10, sidetriple_side11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.Direction direction16 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo17 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper18 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl19 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction16, sidetriple_neighborTSMInfo17, loggerWrapper18);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy14, direction16, sidetriple_neighborTSMInfo20, loggerWrapper21);
    signalMapperImpl13.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy25 = null;
    hu.bme.mit.swsv.ris.common.Direction direction26 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo27 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper28 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl29 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy25, direction26, sidetriple_neighborTSMInfo27, loggerWrapper28);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl29);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy31 = null;
    hu.bme.mit.swsv.ris.common.Direction direction32 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo33 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper34 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl35 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy31, direction32, sidetriple_neighborTSMInfo33, loggerWrapper34);
    hu.bme.mit.swsv.ris.tsm.SignalMapper signalMapper36 = null;
    safetyLogicImpl35.setSignalMapper(signalMapper36);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl35);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy41 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy42 = null;
    hu.bme.mit.swsv.ris.common.Direction direction43 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo44 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper45 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl46 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy42, direction43, sidetriple_neighborTSMInfo44, loggerWrapper45);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo47 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper48 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl49 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy41, direction43, sidetriple_neighborTSMInfo47, loggerWrapper48);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal50 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction43);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal51 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)100, direction43);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl35.turnoutDirectionChanged(direction43);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction16 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction16.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction26 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction26.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction32 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction32.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction43 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction43.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test050() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test050"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy7 = null;
    hu.bme.mit.swsv.ris.common.Direction direction8 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy7, direction8, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction8, sidetriple_neighborTSMInfo12, loggerWrapper13);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl14);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy16 = null;
    hu.bme.mit.swsv.ris.common.Direction direction17 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo18 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper19 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl20 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy16, direction17, sidetriple_neighborTSMInfo18, loggerWrapper19);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl14.turnoutDirectionChanged(direction17);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction8 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction8.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction17 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction17.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test051() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test051"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i9 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i9, sidetriple_i10, sidetriple_side11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.Direction direction16 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo17 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper18 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl19 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction16, sidetriple_neighborTSMInfo17, loggerWrapper18);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy14, direction16, sidetriple_neighborTSMInfo20, loggerWrapper21);
    signalMapperImpl13.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy25 = null;
    hu.bme.mit.swsv.ris.common.Direction direction26 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo27 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper28 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl29 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy25, direction26, sidetriple_neighborTSMInfo27, loggerWrapper28);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl29);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMStatus> sidetriple_neighborTSMStatus31 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl5.sendStatus(sidetriple_neighborTSMStatus31);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction16 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction16.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction26 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction26.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test052() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test052"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.Direction direction2 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction2, sidetriple_neighborTSMInfo3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction2, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i11 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i10, sidetriple_i11, sidetriple_side12, loggerWrapper13);
    safetyLogicImpl8.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl14);
    hu.bme.mit.swsv.ris.common.Side side16 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy20 = hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal21 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy20);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal22 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(short)100, sectionOccupancy20);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal23 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy20);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl8.sectionOccupancyChanged(side16, sectionOccupancy20);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction2 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction2.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side16 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side16.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy20 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy20.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));

  }

  @Test
  public void test053() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test053"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)1, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy7 = null;
    hu.bme.mit.swsv.ris.common.Direction direction8 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy7, direction8, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction8, sidetriple_neighborTSMInfo12, loggerWrapper13);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i16 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i17 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side18 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper19 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl20 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i16, sidetriple_i17, sidetriple_side18, loggerWrapper19);
    safetyLogicImpl14.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl20);
    safetyLogicImpl14.disconnect();
    safetyLogicImpl14.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl14);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus29 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus32 = null;
    hu.bme.mit.swsv.ris.common.Side side33 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal34 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus32, side33);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal35 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, (int)(short)100, neighborTSMStatus29, side33);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus38 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.Side side39 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal40 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(10, (int)(short)1, neighborTSMStatus38, side39);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal41 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)100, 10, neighborTSMStatus29, side39);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus44 = null;
    hu.bme.mit.swsv.ris.common.Side side45 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal46 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus44, side45);
    hu.bme.mit.swsv.ris.common.Side side47 = heartBeatSignal46.getSenderSide();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus48 = heartBeatSignal46.getStatus();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus49 = heartBeatSignal46.getStatus();
    java.util.Date date50 = heartBeatSignal46.getTimestamp();
    java.util.Date date51 = heartBeatSignal46.getTimestamp();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus58 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus61 = null;
    hu.bme.mit.swsv.ris.common.Side side62 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal63 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus61, side62);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal64 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, (int)(short)100, neighborTSMStatus58, side62);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus67 = null;
    hu.bme.mit.swsv.ris.common.Side side68 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal69 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus67, side68);
    hu.bme.mit.swsv.ris.common.Side side70 = heartBeatSignal69.getSenderSide();
    java.lang.Integer i71 = heartBeatSignal69.getTargetId();
    java.lang.Integer i72 = heartBeatSignal69.getSenderId();
    java.lang.String str73 = heartBeatSignal69.toString();
    hu.bme.mit.swsv.ris.common.Side side74 = heartBeatSignal69.getSenderSide();
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal75 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)0, (int)(short)0, neighborTSMStatus58, side74);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus76 = heartBeatSignal75.getStatus();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus79 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus82 = null;
    hu.bme.mit.swsv.ris.common.Side side83 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal84 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus82, side83);
    hu.bme.mit.swsv.ris.common.Side side85 = heartBeatSignal84.getSenderSide();
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal86 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)' ', (int)(byte)0, neighborTSMStatus79, side85);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal87 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(0, (int)(byte)1, neighborTSMStatus76, side85);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl14.neighborStatusChanged(side39, date51, neighborTSMStatus76);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction8 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction8.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus29 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus29.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side33 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side33.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus38 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus38.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side39 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side39.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side45 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side45.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side47 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side47.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(neighborTSMStatus48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(neighborTSMStatus49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date51);
    org.junit.Assert.assertTrue("'" + neighborTSMStatus58 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus58.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side62 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side62.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side68 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side68.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side70 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side70.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i71 + "' != '" + 100+ "'", i71.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i72 + "' != '" + (-1)+ "'", i72.equals((-1)));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str73 + "' != '" + "HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:27 CET 2016)"+ "'", str73.equals("HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:27 CET 2016)"));
    org.junit.Assert.assertTrue("'" + side74 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side74.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus76 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus76.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus79 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED + "'", neighborTSMStatus79.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED));
    org.junit.Assert.assertTrue("'" + side83 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side83.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side85 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side85.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));

  }

  @Test
  public void test054() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test054"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy4 = null;
    hu.bme.mit.swsv.ris.common.Direction direction5 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy4, direction5, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction5, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal12 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction5);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal13 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)100, direction5);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction5, sidetriple_neighborTSMInfo14, loggerWrapper15);
    safetyLogicImpl16.disconnect();
    hu.bme.mit.swsv.ris.common.Side side18 = hu.bme.mit.swsv.ris.common.Side.FACING;
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy21 = hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal22 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy21);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal23 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(short)0, sectionOccupancy21);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl16.sectionOccupancyChanged(side18, sectionOccupancy21);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction5 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction5.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side18 + "' != '" + hu.bme.mit.swsv.ris.common.Side.FACING + "'", side18.equals(hu.bme.mit.swsv.ris.common.Side.FACING));
    org.junit.Assert.assertTrue("'" + sectionOccupancy21 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy21.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));

  }

  @Test
  public void test055() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test055"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i9 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i9, sidetriple_i10, sidetriple_side11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.Direction direction16 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo17 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper18 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl19 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction16, sidetriple_neighborTSMInfo17, loggerWrapper18);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy14, direction16, sidetriple_neighborTSMInfo20, loggerWrapper21);
    signalMapperImpl13.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy25 = null;
    hu.bme.mit.swsv.ris.common.Direction direction26 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo27 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper28 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl29 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy25, direction26, sidetriple_neighborTSMInfo27, loggerWrapper28);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl29);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionControl> sidetriple_sectionControl31 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl5.sendControl(sidetriple_sectionControl31);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction16 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction16.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction26 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction26.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test056() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test056"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.Direction direction4 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo5 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper6 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl7 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction4, sidetriple_neighborTSMInfo5, loggerWrapper6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction4, sidetriple_neighborTSMInfo8, loggerWrapper9);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal11 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction4, sidetriple_neighborTSMInfo12, loggerWrapper13);
    hu.bme.mit.swsv.ris.common.Side side15 = hu.bme.mit.swsv.ris.common.Side.FACING;
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy19 = hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal20 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy19);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal21 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(short)100, sectionOccupancy19);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal22 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy19);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy23 = sectionOccupancySignal22.getSectionOccupancy();
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl14.sectionOccupancyChanged(side15, sectionOccupancy23);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction4 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction4.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side15 + "' != '" + hu.bme.mit.swsv.ris.common.Side.FACING + "'", side15.equals(hu.bme.mit.swsv.ris.common.Side.FACING));
    org.junit.Assert.assertTrue("'" + sectionOccupancy19 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy19.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));
    org.junit.Assert.assertTrue("'" + sectionOccupancy23 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy23.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));

  }

  @Test
  public void test057() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test057"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.Direction direction2 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction2, sidetriple_neighborTSMInfo3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction2, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i11 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i10, sidetriple_i11, sidetriple_side12, loggerWrapper13);
    safetyLogicImpl8.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl14);
    safetyLogicImpl8.disconnect();
    safetyLogicImpl8.disconnect();
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy20 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy21 = null;
    hu.bme.mit.swsv.ris.common.Direction direction22 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo23 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper24 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl25 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy21, direction22, sidetriple_neighborTSMInfo23, loggerWrapper24);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo26 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper27 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl28 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy20, direction22, sidetriple_neighborTSMInfo26, loggerWrapper27);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal29 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction22);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal30 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)-1, direction22);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl8.turnoutDirectionChanged(direction22);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction2 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction2.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction22 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction22.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test058() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test058"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy11 = null;
    hu.bme.mit.swsv.ris.common.Direction direction12 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo13 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper14 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl15 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy11, direction12, sidetriple_neighborTSMInfo13, loggerWrapper14);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo16 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper17 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl18 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy10, direction12, sidetriple_neighborTSMInfo16, loggerWrapper17);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal19 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy8, direction12, sidetriple_neighborTSMInfo20, loggerWrapper21);
    safetyLogicImpl22.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.Direction direction27 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal28 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)10, direction27);
    java.lang.String str29 = turnoutDirectionSignal28.toString();
    java.lang.String str30 = turnoutDirectionSignal28.toString();
    java.lang.Integer i31 = turnoutDirectionSignal28.getSenderId();
    hu.bme.mit.swsv.ris.common.Direction direction32 = turnoutDirectionSignal28.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.Direction direction33 = turnoutDirectionSignal28.getTurnoutDirection();
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal34 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)0, direction33);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl22.turnoutDirectionChanged(direction33);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction12 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction12.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction27 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction27.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"+ "'", str29.equals("TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"+ "'", str30.equals("TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i31 + "' != '" + 10+ "'", i31.equals(10));
    org.junit.Assert.assertTrue("'" + direction32 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction32.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction33 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction33.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test059() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test059"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy11 = null;
    hu.bme.mit.swsv.ris.common.Direction direction12 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo13 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper14 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl15 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy11, direction12, sidetriple_neighborTSMInfo13, loggerWrapper14);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo16 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper17 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl18 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy10, direction12, sidetriple_neighborTSMInfo16, loggerWrapper17);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal19 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy8, direction12, sidetriple_neighborTSMInfo20, loggerWrapper21);
    safetyLogicImpl22.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMStatus> sidetriple_neighborTSMStatus25 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl5.sendStatus(sidetriple_neighborTSMStatus25);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction12 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction12.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test060() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test060"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy7 = null;
    hu.bme.mit.swsv.ris.common.Direction direction8 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy7, direction8, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction8, sidetriple_neighborTSMInfo12, loggerWrapper13);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl14);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i17 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side19 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper20 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl21 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)1, sidetriple_i17, sidetriple_i18, sidetriple_side19, loggerWrapper20);
    safetyLogicImpl14.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl21);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionControl> sidetriple_sectionControl23 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl21.sendControl(sidetriple_sectionControl23);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction8 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction8.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test061() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test061"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy9 = null;
    hu.bme.mit.swsv.ris.common.Direction direction10 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy9, direction10, sidetriple_neighborTSMInfo11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy8, direction10, sidetriple_neighborTSMInfo14, loggerWrapper15);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl16);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus24 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus27 = null;
    hu.bme.mit.swsv.ris.common.Side side28 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal29 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus27, side28);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal30 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, (int)(short)100, neighborTSMStatus24, side28);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus33 = null;
    hu.bme.mit.swsv.ris.common.Side side34 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal35 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus33, side34);
    hu.bme.mit.swsv.ris.common.Side side36 = heartBeatSignal35.getSenderSide();
    java.lang.Integer i37 = heartBeatSignal35.getTargetId();
    java.lang.Integer i38 = heartBeatSignal35.getSenderId();
    java.lang.String str39 = heartBeatSignal35.toString();
    hu.bme.mit.swsv.ris.common.Side side40 = heartBeatSignal35.getSenderSide();
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal41 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)0, (int)(short)0, neighborTSMStatus24, side40);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus42 = heartBeatSignal41.getStatus();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus45 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus48 = null;
    hu.bme.mit.swsv.ris.common.Side side49 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal50 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus48, side49);
    hu.bme.mit.swsv.ris.common.Side side51 = heartBeatSignal50.getSenderSide();
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal52 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)' ', (int)(byte)0, neighborTSMStatus45, side51);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal53 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(0, (int)(byte)1, neighborTSMStatus42, side51);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy58 = hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal59 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy58);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal60 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(short)100, sectionOccupancy58);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal61 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy58);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy62 = sectionOccupancySignal61.getSectionOccupancy();
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal63 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal(100, sectionOccupancy62);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl16.sectionOccupancyChanged(side51, sectionOccupancy62);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction10 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction10.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus24 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus24.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side28 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side28.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side34 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side34.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side36 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side36.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i37 + "' != '" + 100+ "'", i37.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i38 + "' != '" + (-1)+ "'", i38.equals((-1)));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:28 CET 2016)"+ "'", str39.equals("HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:28 CET 2016)"));
    org.junit.Assert.assertTrue("'" + side40 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side40.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus42 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus42.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus45 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED + "'", neighborTSMStatus45.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED));
    org.junit.Assert.assertTrue("'" + side49 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side49.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side51 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side51.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy58 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy58.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));
    org.junit.Assert.assertTrue("'" + sectionOccupancy62 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy62.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));

  }

  @Test
  public void test062() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test062"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)1, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy7 = null;
    hu.bme.mit.swsv.ris.common.Direction direction8 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy7, direction8, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction8, sidetriple_neighborTSMInfo12, loggerWrapper13);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i16 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i17 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side18 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper19 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl20 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i16, sidetriple_i17, sidetriple_side18, loggerWrapper19);
    safetyLogicImpl14.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl20);
    safetyLogicImpl14.disconnect();
    safetyLogicImpl14.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl14);
    safetyLogicImpl14.disconnect();
    hu.bme.mit.swsv.ris.common.Side side26 = hu.bme.mit.swsv.ris.common.Side.FACING;
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy28 = hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal29 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)'a', sectionOccupancy28);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl14.sectionOccupancyChanged(side26, sectionOccupancy28);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction8 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction8.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side26 + "' != '" + hu.bme.mit.swsv.ris.common.Side.FACING + "'", side26.equals(hu.bme.mit.swsv.ris.common.Side.FACING));
    org.junit.Assert.assertTrue("'" + sectionOccupancy28 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy28.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));

  }

  @Test
  public void test063() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test063"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i9 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i9, sidetriple_i10, sidetriple_side11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.Direction direction16 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo17 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper18 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl19 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction16, sidetriple_neighborTSMInfo17, loggerWrapper18);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy14, direction16, sidetriple_neighborTSMInfo20, loggerWrapper21);
    signalMapperImpl13.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy25 = null;
    hu.bme.mit.swsv.ris.common.Direction direction26 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo27 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper28 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl29 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy25, direction26, sidetriple_neighborTSMInfo27, loggerWrapper28);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl29);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i32 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i33 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side34 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper35 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl36 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i32, sidetriple_i33, sidetriple_side34, loggerWrapper35);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient37 = null;
    signalMapperImpl36.setMqClient(mQClient37);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i40 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i41 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side42 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper43 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl44 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i40, sidetriple_i41, sidetriple_side42, loggerWrapper43);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy45 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy46 = null;
    hu.bme.mit.swsv.ris.common.Direction direction47 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo48 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper49 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl50 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy46, direction47, sidetriple_neighborTSMInfo48, loggerWrapper49);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo51 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper52 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl53 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy45, direction47, sidetriple_neighborTSMInfo51, loggerWrapper52);
    signalMapperImpl44.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl53);
    signalMapperImpl36.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl53);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy56 = null;
    hu.bme.mit.swsv.ris.common.Direction direction57 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo58 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper59 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl60 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy56, direction57, sidetriple_neighborTSMInfo58, loggerWrapper59);
    signalMapperImpl36.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl60);
    safetyLogicImpl29.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl36);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionControl> sidetriple_sectionControl63 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl36.sendControl(sidetriple_sectionControl63);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction16 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction16.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction26 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction26.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction47 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction47.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction57 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction57.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test064() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test064"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy11 = null;
    hu.bme.mit.swsv.ris.common.Direction direction12 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo13 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper14 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl15 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy11, direction12, sidetriple_neighborTSMInfo13, loggerWrapper14);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo16 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper17 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl18 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy10, direction12, sidetriple_neighborTSMInfo16, loggerWrapper17);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal19 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy8, direction12, sidetriple_neighborTSMInfo20, loggerWrapper21);
    safetyLogicImpl22.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    safetyLogicImpl22.disconnect();
    org.junit.Assert.assertTrue("'" + direction12 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction12.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test065() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test065"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.Direction direction7 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction7, sidetriple_neighborTSMInfo8, loggerWrapper9);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl10);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i13 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i13, sidetriple_i14, sidetriple_side15, loggerWrapper16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy19 = null;
    hu.bme.mit.swsv.ris.common.Direction direction20 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy19, direction20, sidetriple_neighborTSMInfo21, loggerWrapper22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo24 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper25 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl26 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy18, direction20, sidetriple_neighborTSMInfo24, loggerWrapper25);
    signalMapperImpl17.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    safetyLogicImpl26.disconnect();
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i31 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i32 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side33 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper34 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl35 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)97, sidetriple_i31, sidetriple_i32, sidetriple_side33, loggerWrapper34);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient36 = null;
    signalMapperImpl35.setMqClient(mQClient36);
    safetyLogicImpl26.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl35);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMStatus> sidetriple_neighborTSMStatus39 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl35.sendStatus(sidetriple_neighborTSMStatus39);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction20 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction20.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test066() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test066"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)1, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy7 = null;
    hu.bme.mit.swsv.ris.common.Direction direction8 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy7, direction8, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction8, sidetriple_neighborTSMInfo12, loggerWrapper13);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i16 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i17 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side18 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper19 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl20 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i16, sidetriple_i17, sidetriple_side18, loggerWrapper19);
    safetyLogicImpl14.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl20);
    safetyLogicImpl14.disconnect();
    safetyLogicImpl14.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl14);
    hu.bme.mit.swsv.ris.tsm.SignalMapper signalMapper25 = null;
    safetyLogicImpl14.setSignalMapper(signalMapper25);
    hu.bme.mit.swsv.ris.common.Direction direction28 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal29 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)10, direction28);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl14.turnoutDirectionChanged(direction28);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction8 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction8.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction28 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction28.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test067() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test067"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)97, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy9 = null;
    hu.bme.mit.swsv.ris.common.Direction direction10 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy9, direction10, sidetriple_neighborTSMInfo11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy8, direction10, sidetriple_neighborTSMInfo14, loggerWrapper15);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal17 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo18 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper19 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl20 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction10, sidetriple_neighborTSMInfo18, loggerWrapper19);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl20);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMStatus> sidetriple_neighborTSMStatus22 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl5.sendStatus(sidetriple_neighborTSMStatus22);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction10 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction10.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test068() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test068"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy9 = null;
    hu.bme.mit.swsv.ris.common.Direction direction10 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy9, direction10, sidetriple_neighborTSMInfo11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy8, direction10, sidetriple_neighborTSMInfo14, loggerWrapper15);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionControl> sidetriple_sectionControl18 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl5.sendControl(sidetriple_sectionControl18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction10 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction10.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test069() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test069"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy9 = null;
    hu.bme.mit.swsv.ris.common.Direction direction10 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy9, direction10, sidetriple_neighborTSMInfo11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy8, direction10, sidetriple_neighborTSMInfo14, loggerWrapper15);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl16);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient18 = null;
    signalMapperImpl5.setMqClient(mQClient18);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy20 = null;
    hu.bme.mit.swsv.ris.common.Direction direction21 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo22 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper23 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl24 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy20, direction21, sidetriple_neighborTSMInfo22, loggerWrapper23);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl24);
    safetyLogicImpl24.disconnect();
    hu.bme.mit.swsv.ris.common.Side side27 = hu.bme.mit.swsv.ris.common.Side.DIVERGENT;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus30 = null;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus33 = null;
    hu.bme.mit.swsv.ris.common.Side side34 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal35 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus33, side34);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal36 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(byte)100, (int)(byte)-1, neighborTSMStatus30, side34);
    java.util.Date date37 = heartBeatSignal36.getTimestamp();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus44 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus47 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus50 = null;
    hu.bme.mit.swsv.ris.common.Side side51 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal52 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus50, side51);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal53 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, (int)(short)100, neighborTSMStatus47, side51);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal54 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)'#', 10, neighborTSMStatus44, side51);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus57 = null;
    hu.bme.mit.swsv.ris.common.Side side58 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal59 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus57, side58);
    hu.bme.mit.swsv.ris.common.Side side60 = heartBeatSignal59.getSenderSide();
    java.lang.Integer i61 = heartBeatSignal59.getTargetId();
    java.lang.Integer i62 = heartBeatSignal59.getSenderId();
    java.lang.String str63 = heartBeatSignal59.toString();
    hu.bme.mit.swsv.ris.common.Side side64 = heartBeatSignal59.getSenderSide();
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal65 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(byte)1, 0, neighborTSMStatus44, side64);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus68 = null;
    hu.bme.mit.swsv.ris.common.Side side69 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal70 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)' ', (int)(short)100, neighborTSMStatus68, side69);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal71 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(0, (int)'#', neighborTSMStatus44, side69);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl24.neighborStatusChanged(side27, date37, neighborTSMStatus44);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction10 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction10.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction21 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction21.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side27 + "' != '" + hu.bme.mit.swsv.ris.common.Side.DIVERGENT + "'", side27.equals(hu.bme.mit.swsv.ris.common.Side.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side34 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side34.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date37);
    org.junit.Assert.assertTrue("'" + neighborTSMStatus44 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED + "'", neighborTSMStatus44.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus47 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus47.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side51 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side51.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side58 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side58.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side60 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side60.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i61 + "' != '" + 100+ "'", i61.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i62 + "' != '" + (-1)+ "'", i62.equals((-1)));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str63 + "' != '" + "HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:29 CET 2016)"+ "'", str63.equals("HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:29 CET 2016)"));
    org.junit.Assert.assertTrue("'" + side64 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side64.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side69 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side69.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));

  }

  @Test
  public void test070() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test070"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.Direction direction7 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction7, sidetriple_neighborTSMInfo8, loggerWrapper9);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl10);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i13 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i13, sidetriple_i14, sidetriple_side15, loggerWrapper16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy19 = null;
    hu.bme.mit.swsv.ris.common.Direction direction20 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy19, direction20, sidetriple_neighborTSMInfo21, loggerWrapper22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo24 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper25 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl26 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy18, direction20, sidetriple_neighborTSMInfo24, loggerWrapper25);
    signalMapperImpl17.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    hu.bme.mit.swsv.ris.common.Direction direction31 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal32 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)10, direction31);
    java.lang.String str33 = turnoutDirectionSignal32.toString();
    java.lang.String str34 = turnoutDirectionSignal32.toString();
    java.lang.Integer i35 = turnoutDirectionSignal32.getSenderId();
    hu.bme.mit.swsv.ris.common.Direction direction36 = turnoutDirectionSignal32.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.Direction direction37 = turnoutDirectionSignal32.getTurnoutDirection();
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal38 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)0, direction37);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl26.turnoutDirectionChanged(direction37);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction20 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction20.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction31 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction31.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"+ "'", str33.equals("TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"+ "'", str34.equals("TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i35 + "' != '" + 10+ "'", i35.equals(10));
    org.junit.Assert.assertTrue("'" + direction36 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction36.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction37 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction37.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test071() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test071"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy11 = null;
    hu.bme.mit.swsv.ris.common.Direction direction12 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo13 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper14 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl15 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy11, direction12, sidetriple_neighborTSMInfo13, loggerWrapper14);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo16 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper17 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl18 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy10, direction12, sidetriple_neighborTSMInfo16, loggerWrapper17);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal19 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy8, direction12, sidetriple_neighborTSMInfo20, loggerWrapper21);
    safetyLogicImpl22.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus27 = null;
    hu.bme.mit.swsv.ris.common.Side side28 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal29 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus27, side28);
    hu.bme.mit.swsv.ris.common.Side side30 = heartBeatSignal29.getSenderSide();
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy35 = hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal36 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy35);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal37 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(short)100, sectionOccupancy35);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal38 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy35);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy39 = sectionOccupancySignal38.getSectionOccupancy();
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal40 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal(100, sectionOccupancy39);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy41 = sectionOccupancySignal40.getSectionOccupancy();
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl22.sectionOccupancyChanged(side30, sectionOccupancy41);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction12 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction12.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side28 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side28.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side30 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side30.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy35 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy35.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));
    org.junit.Assert.assertTrue("'" + sectionOccupancy39 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy39.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));
    org.junit.Assert.assertTrue("'" + sectionOccupancy41 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy41.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));

  }

  @Test
  public void test072() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test072"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy4 = null;
    hu.bme.mit.swsv.ris.common.Direction direction5 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy4, direction5, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction5, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal12 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction5);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal13 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)100, direction5);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction5, sidetriple_neighborTSMInfo14, loggerWrapper15);
    safetyLogicImpl16.disconnect();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus20 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus23 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus26 = null;
    hu.bme.mit.swsv.ris.common.Side side27 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal28 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus26, side27);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal29 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, (int)(short)100, neighborTSMStatus23, side27);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal30 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)'#', 10, neighborTSMStatus20, side27);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy33 = hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal34 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(short)-1, sectionOccupancy33);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal35 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal(1, sectionOccupancy33);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl16.sectionOccupancyChanged(side27, sectionOccupancy33);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction5 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction5.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus20 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED + "'", neighborTSMStatus20.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus23 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus23.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side27 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side27.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy33 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy33.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));

  }

  @Test
  public void test073() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test073"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.Direction direction4 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo5 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper6 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl7 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction4, sidetriple_neighborTSMInfo5, loggerWrapper6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction4, sidetriple_neighborTSMInfo8, loggerWrapper9);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal11 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(97, direction4);
    hu.bme.mit.swsv.ris.common.Direction direction12 = turnoutDirectionSignal11.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo13 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper14 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl15 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction12, sidetriple_neighborTSMInfo13, loggerWrapper14);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus18 = null;
    hu.bme.mit.swsv.ris.common.Side side19 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal20 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)0, (int)(byte)100, neighborTSMStatus18, side19);
    java.util.Date date21 = heartBeatSignal20.getTimestamp();
    hu.bme.mit.swsv.ris.common.Side side22 = heartBeatSignal20.getSenderSide();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus25 = null;
    hu.bme.mit.swsv.ris.common.Side side26 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal27 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)0, (int)(byte)100, neighborTSMStatus25, side26);
    java.util.Date date28 = heartBeatSignal27.getTimestamp();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus33 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus36 = null;
    hu.bme.mit.swsv.ris.common.Side side37 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal38 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus36, side37);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal39 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, (int)(short)100, neighborTSMStatus33, side37);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus42 = null;
    hu.bme.mit.swsv.ris.common.Side side43 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal44 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus42, side43);
    hu.bme.mit.swsv.ris.common.Side side45 = heartBeatSignal44.getSenderSide();
    java.lang.Integer i46 = heartBeatSignal44.getTargetId();
    java.lang.Integer i47 = heartBeatSignal44.getSenderId();
    java.lang.String str48 = heartBeatSignal44.toString();
    hu.bme.mit.swsv.ris.common.Side side49 = heartBeatSignal44.getSenderSide();
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal50 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)0, (int)(short)0, neighborTSMStatus33, side49);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus51 = heartBeatSignal50.getStatus();
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl15.neighborStatusChanged(side22, date28, neighborTSMStatus51);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction4 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction4.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction12 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction12.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side19 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side19.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date21);
    org.junit.Assert.assertTrue("'" + side22 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side22.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side26 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side26.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date28);
    org.junit.Assert.assertTrue("'" + neighborTSMStatus33 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus33.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side37 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side37.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side43 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side43.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side45 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side45.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i46 + "' != '" + 100+ "'", i46.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i47 + "' != '" + (-1)+ "'", i47.equals((-1)));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str48 + "' != '" + "HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:30 CET 2016)"+ "'", str48.equals("HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:30 CET 2016)"));
    org.junit.Assert.assertTrue("'" + side49 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side49.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus51 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus51.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));

  }

  @Test
  public void test074() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test074"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.Direction direction4 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo5 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper6 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl7 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction4, sidetriple_neighborTSMInfo5, loggerWrapper6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction4, sidetriple_neighborTSMInfo8, loggerWrapper9);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal11 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction4, sidetriple_neighborTSMInfo12, loggerWrapper13);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy16 = null;
    hu.bme.mit.swsv.ris.common.Direction direction17 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo18 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper19 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl20 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy16, direction17, sidetriple_neighborTSMInfo18, loggerWrapper19);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction17, sidetriple_neighborTSMInfo21, loggerWrapper22);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i25 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i26 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side27 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper28 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl29 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i25, sidetriple_i26, sidetriple_side27, loggerWrapper28);
    safetyLogicImpl23.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl29);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy31 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy33 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy34 = null;
    hu.bme.mit.swsv.ris.common.Direction direction35 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo36 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper37 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl38 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy34, direction35, sidetriple_neighborTSMInfo36, loggerWrapper37);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo39 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper40 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl41 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy33, direction35, sidetriple_neighborTSMInfo39, loggerWrapper40);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal42 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction35);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo43 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper44 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl45 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy31, direction35, sidetriple_neighborTSMInfo43, loggerWrapper44);
    safetyLogicImpl45.disconnect();
    signalMapperImpl29.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl45);
    safetyLogicImpl14.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl29);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient49 = null;
    signalMapperImpl29.setMqClient(mQClient49);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMStatus> sidetriple_neighborTSMStatus51 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl29.sendStatus(sidetriple_neighborTSMStatus51);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction4 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction4.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction17 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction17.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction35 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction35.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test075() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test075"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy4 = null;
    hu.bme.mit.swsv.ris.common.Direction direction5 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy4, direction5, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction5, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal12 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction5);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal13 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)100, direction5);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction5, sidetriple_neighborTSMInfo14, loggerWrapper15);
    safetyLogicImpl16.disconnect();
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy18 = null;
    hu.bme.mit.swsv.ris.common.Direction direction19 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy18, direction19, sidetriple_neighborTSMInfo20, loggerWrapper21);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl16.turnoutDirectionChanged(direction19);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction5 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction5.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction19 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction19.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test076() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test076"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.Direction direction2 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction2, sidetriple_neighborTSMInfo3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction2, sidetriple_neighborTSMInfo6, loggerWrapper7);
    safetyLogicImpl8.disconnect();
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy11 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.Direction direction16 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo17 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper18 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl19 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction16, sidetriple_neighborTSMInfo17, loggerWrapper18);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy14, direction16, sidetriple_neighborTSMInfo20, loggerWrapper21);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal23 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction16);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal24 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)100, direction16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo25 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper26 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl27 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy11, direction16, sidetriple_neighborTSMInfo25, loggerWrapper26);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal28 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(short)0, direction16);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl8.turnoutDirectionChanged(direction16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction2 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction2.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction16 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction16.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test077() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test077"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.Direction direction2 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction2, sidetriple_neighborTSMInfo3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction2, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i11 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)(-1), sidetriple_i10, sidetriple_i11, sidetriple_side12, loggerWrapper13);
    safetyLogicImpl8.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl14);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMStatus> sidetriple_neighborTSMStatus16 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl14.sendStatus(sidetriple_neighborTSMStatus16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction2 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction2.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test078() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test078"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.Direction direction2 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction2, sidetriple_neighborTSMInfo3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction2, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i11 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)(-1), sidetriple_i10, sidetriple_i11, sidetriple_side12, loggerWrapper13);
    safetyLogicImpl8.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl14);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus18 = null;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus21 = null;
    hu.bme.mit.swsv.ris.common.Side side22 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal23 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus21, side22);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal24 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(byte)100, (int)(byte)-1, neighborTSMStatus18, side22);
    java.lang.String str25 = heartBeatSignal24.toString();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus26 = heartBeatSignal24.getStatus();
    java.lang.String str27 = heartBeatSignal24.toString();
    hu.bme.mit.swsv.ris.common.Side side28 = heartBeatSignal24.getSenderSide();
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy30 = hu.bme.mit.swsv.ris.common.SectionOccupancy.OCCUPIED;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal31 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal(10, sectionOccupancy30);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl8.sectionOccupancyChanged(side28, sectionOccupancy30);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction2 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction2.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side22 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side22.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "HeartBeatSignal(sender: 100 (STRAIGHT), target: -1, status: null, timestamp: Thu Dec 01 10:44:31 CET 2016)"+ "'", str25.equals("HeartBeatSignal(sender: 100 (STRAIGHT), target: -1, status: null, timestamp: Thu Dec 01 10:44:31 CET 2016)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(neighborTSMStatus26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "HeartBeatSignal(sender: 100 (STRAIGHT), target: -1, status: null, timestamp: Thu Dec 01 10:44:31 CET 2016)"+ "'", str27.equals("HeartBeatSignal(sender: 100 (STRAIGHT), target: -1, status: null, timestamp: Thu Dec 01 10:44:31 CET 2016)"));
    org.junit.Assert.assertTrue("'" + side28 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side28.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy30 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.OCCUPIED + "'", sectionOccupancy30.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.OCCUPIED));

  }

  @Test
  public void test079() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test079"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)97, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy9 = null;
    hu.bme.mit.swsv.ris.common.Direction direction10 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy9, direction10, sidetriple_neighborTSMInfo11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy8, direction10, sidetriple_neighborTSMInfo14, loggerWrapper15);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal17 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo18 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper19 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl20 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction10, sidetriple_neighborTSMInfo18, loggerWrapper19);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl20);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient22 = null;
    signalMapperImpl5.setMqClient(mQClient22);
    org.junit.Assert.assertTrue("'" + direction10 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction10.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test080() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test080"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy7 = null;
    hu.bme.mit.swsv.ris.common.Direction direction8 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy7, direction8, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction8, sidetriple_neighborTSMInfo12, loggerWrapper13);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl14);
    safetyLogicImpl14.disconnect();
    org.junit.Assert.assertTrue("'" + direction8 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction8.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test081() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test081"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy4 = null;
    hu.bme.mit.swsv.ris.common.Direction direction5 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy4, direction5, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction5, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal12 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction5);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal13 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)-1, direction5);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal14 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((-1), direction5);
    org.junit.Assert.assertTrue("'" + direction5 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction5.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test082() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test082"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.Direction direction2 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction2, sidetriple_neighborTSMInfo3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction2, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i11 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)(-1), sidetriple_i10, sidetriple_i11, sidetriple_side12, loggerWrapper13);
    safetyLogicImpl8.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl14);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus22 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.Side side23 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal24 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(10, (int)(short)1, neighborTSMStatus22, side23);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus31 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus34 = null;
    hu.bme.mit.swsv.ris.common.Side side35 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal36 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus34, side35);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal37 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, (int)(short)100, neighborTSMStatus31, side35);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus40 = null;
    hu.bme.mit.swsv.ris.common.Side side41 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal42 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus40, side41);
    hu.bme.mit.swsv.ris.common.Side side43 = heartBeatSignal42.getSenderSide();
    java.lang.Integer i44 = heartBeatSignal42.getTargetId();
    java.lang.Integer i45 = heartBeatSignal42.getSenderId();
    java.lang.String str46 = heartBeatSignal42.toString();
    hu.bme.mit.swsv.ris.common.Side side47 = heartBeatSignal42.getSenderSide();
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal48 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)0, (int)(short)0, neighborTSMStatus31, side47);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus49 = heartBeatSignal48.getStatus();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus52 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus55 = null;
    hu.bme.mit.swsv.ris.common.Side side56 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal57 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus55, side56);
    hu.bme.mit.swsv.ris.common.Side side58 = heartBeatSignal57.getSenderSide();
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal59 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)' ', (int)(byte)0, neighborTSMStatus52, side58);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal60 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(0, (int)(byte)1, neighborTSMStatus49, side58);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal61 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)100, 0, neighborTSMStatus22, side58);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus64 = null;
    hu.bme.mit.swsv.ris.common.Side side65 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal66 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus64, side65);
    hu.bme.mit.swsv.ris.common.Side side67 = heartBeatSignal66.getSenderSide();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus68 = heartBeatSignal66.getStatus();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus69 = heartBeatSignal66.getStatus();
    java.util.Date date70 = heartBeatSignal66.getTimestamp();
    java.util.Date date71 = heartBeatSignal66.getTimestamp();
    hu.bme.mit.swsv.ris.common.Side side72 = heartBeatSignal66.getSenderSide();
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal73 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)'4', (int)(byte)-1, neighborTSMStatus22, side72);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus76 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus79 = null;
    hu.bme.mit.swsv.ris.common.Side side80 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal81 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus79, side80);
    hu.bme.mit.swsv.ris.common.Side side82 = heartBeatSignal81.getSenderSide();
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal83 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)' ', (int)(byte)0, neighborTSMStatus76, side82);
    hu.bme.mit.swsv.ris.common.Side side84 = heartBeatSignal83.getSenderSide();
    java.util.Date date85 = heartBeatSignal83.getTimestamp();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus86 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED;
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl8.neighborStatusChanged(side72, date85, neighborTSMStatus86);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction2 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction2.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus22 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus22.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side23 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side23.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus31 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus31.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side35 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side35.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side41 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side41.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side43 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side43.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i44 + "' != '" + 100+ "'", i44.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i45 + "' != '" + (-1)+ "'", i45.equals((-1)));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:33 CET 2016)"+ "'", str46.equals("HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:33 CET 2016)"));
    org.junit.Assert.assertTrue("'" + side47 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side47.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus49 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus49.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus52 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED + "'", neighborTSMStatus52.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED));
    org.junit.Assert.assertTrue("'" + side56 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side56.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side58 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side58.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side65 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side65.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side67 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side67.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(neighborTSMStatus68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(neighborTSMStatus69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date71);
    org.junit.Assert.assertTrue("'" + side72 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side72.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus76 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED + "'", neighborTSMStatus76.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED));
    org.junit.Assert.assertTrue("'" + side80 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side80.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side82 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side82.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side84 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side84.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date85);
    org.junit.Assert.assertTrue("'" + neighborTSMStatus86 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED + "'", neighborTSMStatus86.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED));

  }

  @Test
  public void test083() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test083"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.Direction direction4 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal5 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)10, direction4);
    java.lang.String str6 = turnoutDirectionSignal5.toString();
    hu.bme.mit.swsv.ris.common.Direction direction7 = turnoutDirectionSignal5.getTurnoutDirection();
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal8 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(short)-1, direction7);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal9 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(97, direction7);
    hu.bme.mit.swsv.ris.common.Direction direction10 = turnoutDirectionSignal9.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction10, sidetriple_neighborTSMInfo11, loggerWrapper12);
    org.junit.Assert.assertTrue("'" + direction4 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction4.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"+ "'", str6.equals("TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"));
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction10 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction10.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test084() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test084"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.Direction direction1 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo2 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper3 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl4 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction1, sidetriple_neighborTSMInfo2, loggerWrapper3);
    hu.bme.mit.swsv.ris.tsm.SignalMapper signalMapper5 = null;
    safetyLogicImpl4.setSignalMapper(signalMapper5);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus11 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.Side side12 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal13 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(10, (int)(short)1, neighborTSMStatus11, side12);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus16 = null;
    hu.bme.mit.swsv.ris.common.Side side17 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal18 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus16, side17);
    hu.bme.mit.swsv.ris.common.Side side19 = heartBeatSignal18.getSenderSide();
    java.lang.Integer i20 = heartBeatSignal18.getTargetId();
    java.lang.Integer i21 = heartBeatSignal18.getSenderId();
    java.lang.String str22 = heartBeatSignal18.toString();
    hu.bme.mit.swsv.ris.common.Side side23 = heartBeatSignal18.getSenderSide();
    java.lang.String str24 = heartBeatSignal18.toString();
    hu.bme.mit.swsv.ris.common.Side side25 = heartBeatSignal18.getSenderSide();
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal26 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)-1, (int)(byte)10, neighborTSMStatus11, side25);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus29 = null;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus32 = null;
    hu.bme.mit.swsv.ris.common.Side side33 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal34 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus32, side33);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal35 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(byte)100, (int)(byte)-1, neighborTSMStatus29, side33);
    java.util.Date date36 = heartBeatSignal35.getTimestamp();
    java.util.Date date37 = heartBeatSignal35.getTimestamp();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus38 = null;
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl4.neighborStatusChanged(side25, date37, neighborTSMStatus38);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction1 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction1.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus11 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus11.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side12 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side12.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side17 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side17.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side19 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side19.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i20 + "' != '" + 100+ "'", i20.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i21 + "' != '" + (-1)+ "'", i21.equals((-1)));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:34 CET 2016)"+ "'", str22.equals("HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:34 CET 2016)"));
    org.junit.Assert.assertTrue("'" + side23 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side23.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:34 CET 2016)"+ "'", str24.equals("HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:34 CET 2016)"));
    org.junit.Assert.assertTrue("'" + side25 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side25.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side33 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side33.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date37);

  }

  @Test
  public void test085() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test085"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)100, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i7 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i7, sidetriple_i8, sidetriple_side9, loggerWrapper10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy12 = null;
    hu.bme.mit.swsv.ris.common.Direction direction13 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy12, direction13, sidetriple_neighborTSMInfo14, loggerWrapper15);
    signalMapperImpl11.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl16);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i19 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i20 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i19, sidetriple_i20, sidetriple_side21, loggerWrapper22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy24 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy25 = null;
    hu.bme.mit.swsv.ris.common.Direction direction26 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo27 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper28 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl29 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy25, direction26, sidetriple_neighborTSMInfo27, loggerWrapper28);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo30 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper31 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl32 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy24, direction26, sidetriple_neighborTSMInfo30, loggerWrapper31);
    signalMapperImpl23.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl32);
    signalMapperImpl11.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl32);
    safetyLogicImpl32.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl32);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus41 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus44 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus47 = null;
    hu.bme.mit.swsv.ris.common.Side side48 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal49 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus47, side48);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal50 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, (int)(short)100, neighborTSMStatus44, side48);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal51 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)'#', 10, neighborTSMStatus41, side48);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus54 = null;
    hu.bme.mit.swsv.ris.common.Side side55 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal56 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus54, side55);
    hu.bme.mit.swsv.ris.common.Side side57 = heartBeatSignal56.getSenderSide();
    java.lang.Integer i58 = heartBeatSignal56.getTargetId();
    java.lang.Integer i59 = heartBeatSignal56.getSenderId();
    java.lang.String str60 = heartBeatSignal56.toString();
    hu.bme.mit.swsv.ris.common.Side side61 = heartBeatSignal56.getSenderSide();
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal62 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(byte)1, 0, neighborTSMStatus41, side61);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy67 = hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal68 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy67);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal69 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(short)100, sectionOccupancy67);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal70 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy67);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy71 = sectionOccupancySignal70.getSectionOccupancy();
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal72 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal(100, sectionOccupancy71);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy73 = sectionOccupancySignal72.getSectionOccupancy();
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl32.sectionOccupancyChanged(side61, sectionOccupancy73);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction13 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction13.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction26 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction26.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus41 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED + "'", neighborTSMStatus41.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus44 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus44.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side48 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side48.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side55 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side55.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side57 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side57.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i58 + "' != '" + 100+ "'", i58.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i59 + "' != '" + (-1)+ "'", i59.equals((-1)));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str60 + "' != '" + "HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:34 CET 2016)"+ "'", str60.equals("HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:34 CET 2016)"));
    org.junit.Assert.assertTrue("'" + side61 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side61.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy67 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy67.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));
    org.junit.Assert.assertTrue("'" + sectionOccupancy71 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy71.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));
    org.junit.Assert.assertTrue("'" + sectionOccupancy73 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy73.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));

  }

  @Test
  public void test086() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test086"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy11 = null;
    hu.bme.mit.swsv.ris.common.Direction direction12 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo13 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper14 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl15 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy11, direction12, sidetriple_neighborTSMInfo13, loggerWrapper14);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo16 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper17 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl18 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy10, direction12, sidetriple_neighborTSMInfo16, loggerWrapper17);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal19 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy8, direction12, sidetriple_neighborTSMInfo20, loggerWrapper21);
    safetyLogicImpl22.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.Direction direction27 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal28 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(short)100, direction27);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal29 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(1, direction27);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl22.turnoutDirectionChanged(direction27);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction12 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction12.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction27 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction27.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test087() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test087"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.Direction direction7 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction7, sidetriple_neighborTSMInfo8, loggerWrapper9);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy12 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy13 = null;
    hu.bme.mit.swsv.ris.common.Direction direction14 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy13, direction14, sidetriple_neighborTSMInfo15, loggerWrapper16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo18 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper19 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl20 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy12, direction14, sidetriple_neighborTSMInfo18, loggerWrapper19);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i22 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i23 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side24 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper25 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl26 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i22, sidetriple_i23, sidetriple_side24, loggerWrapper25);
    safetyLogicImpl20.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl26);
    safetyLogicImpl20.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl20);
    safetyLogicImpl20.disconnect();
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction14 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction14.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test088() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test088"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.Direction direction7 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction7, sidetriple_neighborTSMInfo8, loggerWrapper9);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy12 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy13 = null;
    hu.bme.mit.swsv.ris.common.Direction direction14 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy13, direction14, sidetriple_neighborTSMInfo15, loggerWrapper16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo18 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper19 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl20 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy12, direction14, sidetriple_neighborTSMInfo18, loggerWrapper19);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i22 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i23 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side24 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper25 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl26 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i22, sidetriple_i23, sidetriple_side24, loggerWrapper25);
    safetyLogicImpl20.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl26);
    safetyLogicImpl20.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl20);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus32 = null;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus35 = null;
    hu.bme.mit.swsv.ris.common.Side side36 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal37 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus35, side36);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal38 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(byte)100, (int)(byte)-1, neighborTSMStatus32, side36);
    java.lang.String str39 = heartBeatSignal38.toString();
    hu.bme.mit.swsv.ris.common.Side side40 = heartBeatSignal38.getSenderSide();
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy44 = hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal45 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy44);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal46 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(short)100, sectionOccupancy44);
    java.lang.String str47 = sectionOccupancySignal46.toString();
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy48 = sectionOccupancySignal46.getSectionOccupancy();
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal49 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal(100, sectionOccupancy48);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl20.sectionOccupancyChanged(side40, sectionOccupancy48);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction14 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction14.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side36 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side36.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "HeartBeatSignal(sender: 100 (STRAIGHT), target: -1, status: null, timestamp: Thu Dec 01 10:44:34 CET 2016)"+ "'", str39.equals("HeartBeatSignal(sender: 100 (STRAIGHT), target: -1, status: null, timestamp: Thu Dec 01 10:44:34 CET 2016)"));
    org.junit.Assert.assertTrue("'" + side40 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side40.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy44 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy44.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str47 + "' != '" + "SectionOccupancySignal(sender: 100, occupancy: FREE)"+ "'", str47.equals("SectionOccupancySignal(sender: 100, occupancy: FREE)"));
    org.junit.Assert.assertTrue("'" + sectionOccupancy48 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy48.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));

  }

  @Test
  public void test089() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test089"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy9 = null;
    hu.bme.mit.swsv.ris.common.Direction direction10 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy9, direction10, sidetriple_neighborTSMInfo11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy8, direction10, sidetriple_neighborTSMInfo14, loggerWrapper15);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl16);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient18 = null;
    signalMapperImpl5.setMqClient(mQClient18);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient20 = null;
    signalMapperImpl5.setMqClient(mQClient20);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i23 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i24 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side25 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper26 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl27 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i23, sidetriple_i24, sidetriple_side25, loggerWrapper26);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient28 = null;
    signalMapperImpl27.setMqClient(mQClient28);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i31 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i32 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side33 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper34 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl35 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i31, sidetriple_i32, sidetriple_side33, loggerWrapper34);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy36 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy37 = null;
    hu.bme.mit.swsv.ris.common.Direction direction38 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo39 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper40 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl41 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy37, direction38, sidetriple_neighborTSMInfo39, loggerWrapper40);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo42 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper43 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl44 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy36, direction38, sidetriple_neighborTSMInfo42, loggerWrapper43);
    signalMapperImpl35.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl44);
    signalMapperImpl27.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl44);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy47 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy48 = null;
    hu.bme.mit.swsv.ris.common.Direction direction49 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo50 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper51 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl52 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy48, direction49, sidetriple_neighborTSMInfo50, loggerWrapper51);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo53 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper54 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl55 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy47, direction49, sidetriple_neighborTSMInfo53, loggerWrapper54);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i57 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i58 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side59 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper60 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl61 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i57, sidetriple_i58, sidetriple_side59, loggerWrapper60);
    safetyLogicImpl55.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl61);
    safetyLogicImpl44.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl61);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl44);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient65 = null;
    signalMapperImpl5.setMqClient(mQClient65);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionControl> sidetriple_sectionControl67 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl5.sendControl(sidetriple_sectionControl67);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction10 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction10.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction38 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction38.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction49 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction49.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test090() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test090"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy4 = null;
    hu.bme.mit.swsv.ris.common.Direction direction5 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy4, direction5, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction5, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal12 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction5);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal13 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)100, direction5);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction5, sidetriple_neighborTSMInfo14, loggerWrapper15);
    safetyLogicImpl16.disconnect();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus24 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus27 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus30 = null;
    hu.bme.mit.swsv.ris.common.Side side31 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal32 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus30, side31);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal33 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, (int)(short)100, neighborTSMStatus27, side31);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal34 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)'#', 10, neighborTSMStatus24, side31);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus37 = null;
    hu.bme.mit.swsv.ris.common.Side side38 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal39 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus37, side38);
    hu.bme.mit.swsv.ris.common.Side side40 = heartBeatSignal39.getSenderSide();
    java.lang.Integer i41 = heartBeatSignal39.getTargetId();
    java.lang.Integer i42 = heartBeatSignal39.getSenderId();
    java.lang.String str43 = heartBeatSignal39.toString();
    hu.bme.mit.swsv.ris.common.Side side44 = heartBeatSignal39.getSenderSide();
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal45 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(byte)1, 0, neighborTSMStatus24, side44);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus48 = null;
    hu.bme.mit.swsv.ris.common.Side side49 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal50 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)' ', (int)(short)100, neighborTSMStatus48, side49);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal51 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(0, (int)'#', neighborTSMStatus24, side49);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus54 = null;
    hu.bme.mit.swsv.ris.common.Side side55 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal56 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus54, side55);
    hu.bme.mit.swsv.ris.common.Side side57 = heartBeatSignal56.getSenderSide();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus58 = heartBeatSignal56.getStatus();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus59 = heartBeatSignal56.getStatus();
    java.util.Date date60 = heartBeatSignal56.getTimestamp();
    java.util.Date date61 = heartBeatSignal56.getTimestamp();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus62 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED;
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl16.neighborStatusChanged(side49, date61, neighborTSMStatus62);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction5 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction5.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus24 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED + "'", neighborTSMStatus24.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus27 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus27.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side31 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side31.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side38 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side38.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side40 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side40.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i41 + "' != '" + 100+ "'", i41.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i42 + "' != '" + (-1)+ "'", i42.equals((-1)));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str43 + "' != '" + "HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:34 CET 2016)"+ "'", str43.equals("HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:34 CET 2016)"));
    org.junit.Assert.assertTrue("'" + side44 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side44.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side49 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side49.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side55 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side55.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side57 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side57.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(neighborTSMStatus58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(neighborTSMStatus59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date61);
    org.junit.Assert.assertTrue("'" + neighborTSMStatus62 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED + "'", neighborTSMStatus62.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED));

  }

  @Test
  public void test091() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test091"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)10, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy9 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy10 = null;
    hu.bme.mit.swsv.ris.common.Direction direction11 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy10, direction11, sidetriple_neighborTSMInfo12, loggerWrapper13);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy9, direction11, sidetriple_neighborTSMInfo15, loggerWrapper16);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal18 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction11);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal19 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)100, direction11);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction11, sidetriple_neighborTSMInfo20, loggerWrapper21);
    safetyLogicImpl22.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i26 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i27 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side28 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper29 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl30 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)97, sidetriple_i26, sidetriple_i27, sidetriple_side28, loggerWrapper29);
    hu.bme.mit.swsv.ris.tsm.SafetyLogic safetyLogic31 = null;
    signalMapperImpl30.setSafetyLogic(safetyLogic31);
    safetyLogicImpl22.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl30);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy34 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy35 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy37 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy38 = null;
    hu.bme.mit.swsv.ris.common.Direction direction39 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo40 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper41 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl42 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy38, direction39, sidetriple_neighborTSMInfo40, loggerWrapper41);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo43 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper44 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl45 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy37, direction39, sidetriple_neighborTSMInfo43, loggerWrapper44);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal46 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction39);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo47 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper48 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl49 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy35, direction39, sidetriple_neighborTSMInfo47, loggerWrapper48);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo50 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper51 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl52 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy34, direction39, sidetriple_neighborTSMInfo50, loggerWrapper51);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl22.turnoutDirectionChanged(direction39);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction11 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction11.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction39 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction39.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test092() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test092"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)10, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy9 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy10 = null;
    hu.bme.mit.swsv.ris.common.Direction direction11 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy10, direction11, sidetriple_neighborTSMInfo12, loggerWrapper13);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy9, direction11, sidetriple_neighborTSMInfo15, loggerWrapper16);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal18 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction11);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal19 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)100, direction11);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction11, sidetriple_neighborTSMInfo20, loggerWrapper21);
    safetyLogicImpl22.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i26 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i27 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side28 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper29 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl30 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)97, sidetriple_i26, sidetriple_i27, sidetriple_side28, loggerWrapper29);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy31 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy33 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy34 = null;
    hu.bme.mit.swsv.ris.common.Direction direction35 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo36 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper37 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl38 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy34, direction35, sidetriple_neighborTSMInfo36, loggerWrapper37);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo39 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper40 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl41 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy33, direction35, sidetriple_neighborTSMInfo39, loggerWrapper40);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal42 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction35);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo43 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper44 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl45 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy31, direction35, sidetriple_neighborTSMInfo43, loggerWrapper44);
    signalMapperImpl30.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl45);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i48 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i49 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side50 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper51 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl52 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)(-1), sidetriple_i48, sidetriple_i49, sidetriple_side50, loggerWrapper51);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient53 = null;
    signalMapperImpl52.setMqClient(mQClient53);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient55 = null;
    signalMapperImpl52.setMqClient(mQClient55);
    safetyLogicImpl45.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl52);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl45);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus61 = null;
    hu.bme.mit.swsv.ris.common.Side side62 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal63 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus61, side62);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus66 = null;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus69 = null;
    hu.bme.mit.swsv.ris.common.Side side70 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal71 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus69, side70);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal72 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(byte)100, (int)(byte)-1, neighborTSMStatus66, side70);
    java.util.Date date73 = heartBeatSignal72.getTimestamp();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus78 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.Side side79 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal80 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(10, (int)(short)1, neighborTSMStatus78, side79);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus81 = heartBeatSignal80.getStatus();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus86 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.Side side87 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal88 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(10, (int)(short)1, neighborTSMStatus86, side87);
    hu.bme.mit.swsv.ris.common.Side side89 = hu.bme.mit.swsv.ris.common.Side.FACING;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal90 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)100, 97, neighborTSMStatus86, side89);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal91 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(byte)10, 97, neighborTSMStatus81, side89);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl45.neighborStatusChanged(side62, date73, neighborTSMStatus81);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction11 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction11.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction35 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction35.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side62 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side62.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side70 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side70.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date73);
    org.junit.Assert.assertTrue("'" + neighborTSMStatus78 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus78.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side79 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side79.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus81 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus81.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus86 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus86.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side87 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side87.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side89 + "' != '" + hu.bme.mit.swsv.ris.common.Side.FACING + "'", side89.equals(hu.bme.mit.swsv.ris.common.Side.FACING));

  }

  @Test
  public void test093() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test093"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.Direction direction7 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction7, sidetriple_neighborTSMInfo8, loggerWrapper9);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl10);
    hu.bme.mit.swsv.ris.common.Direction direction13 = hu.bme.mit.swsv.ris.common.Direction.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal14 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(short)-1, direction13);
    hu.bme.mit.swsv.ris.common.Direction direction15 = turnoutDirectionSignal14.getTurnoutDirection();
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl10.turnoutDirectionChanged(direction15);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction13 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.STRAIGHT + "'", direction13.equals(hu.bme.mit.swsv.ris.common.Direction.STRAIGHT));
    org.junit.Assert.assertTrue("'" + direction15 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.STRAIGHT + "'", direction15.equals(hu.bme.mit.swsv.ris.common.Direction.STRAIGHT));

  }

  @Test
  public void test094() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test094"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.Direction direction3 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo4 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper5 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl6 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction3, sidetriple_neighborTSMInfo4, loggerWrapper5);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo7 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper8 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl9 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction3, sidetriple_neighborTSMInfo7, loggerWrapper8);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal10 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction3);
    hu.bme.mit.swsv.ris.common.Direction direction11 = turnoutDirectionSignal10.getTurnoutDirection();
    org.junit.Assert.assertTrue("'" + direction3 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction3.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction11 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction11.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test095() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test095"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.Direction direction4 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo5 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper6 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl7 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction4, sidetriple_neighborTSMInfo5, loggerWrapper6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction4, sidetriple_neighborTSMInfo8, loggerWrapper9);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal11 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction4, sidetriple_neighborTSMInfo12, loggerWrapper13);
    safetyLogicImpl14.disconnect();
    hu.bme.mit.swsv.ris.common.Side side16 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy20 = hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal21 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy20);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal22 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(short)100, sectionOccupancy20);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal23 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy20);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy24 = sectionOccupancySignal23.getSectionOccupancy();
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl14.sectionOccupancyChanged(side16, sectionOccupancy24);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction4 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction4.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side16 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side16.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy20 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy20.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));
    org.junit.Assert.assertTrue("'" + sectionOccupancy24 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy24.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));

  }

  @Test
  public void test096() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test096"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.Direction direction3 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo4 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper5 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl6 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction3, sidetriple_neighborTSMInfo4, loggerWrapper5);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo7 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper8 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl9 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction3, sidetriple_neighborTSMInfo7, loggerWrapper8);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo10 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper11 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl12 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction3, sidetriple_neighborTSMInfo10, loggerWrapper11);
    safetyLogicImpl12.disconnect();
    hu.bme.mit.swsv.ris.common.Side side14 = hu.bme.mit.swsv.ris.common.Side.FACING;
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy16 = hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal17 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(short)-1, sectionOccupancy16);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl12.sectionOccupancyChanged(side14, sectionOccupancy16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction3 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction3.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side14 + "' != '" + hu.bme.mit.swsv.ris.common.Side.FACING + "'", side14.equals(hu.bme.mit.swsv.ris.common.Side.FACING));
    org.junit.Assert.assertTrue("'" + sectionOccupancy16 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy16.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));

  }

  @Test
  public void test097() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test097"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy11 = null;
    hu.bme.mit.swsv.ris.common.Direction direction12 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo13 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper14 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl15 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy11, direction12, sidetriple_neighborTSMInfo13, loggerWrapper14);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo16 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper17 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl18 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy10, direction12, sidetriple_neighborTSMInfo16, loggerWrapper17);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal19 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy8, direction12, sidetriple_neighborTSMInfo20, loggerWrapper21);
    safetyLogicImpl22.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionControl> sidetriple_sectionControl25 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl5.sendControl(sidetriple_sectionControl25);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction12 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction12.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test098() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test098"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.Direction direction7 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction7, sidetriple_neighborTSMInfo8, loggerWrapper9);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl10);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i13 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i13, sidetriple_i14, sidetriple_side15, loggerWrapper16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy19 = null;
    hu.bme.mit.swsv.ris.common.Direction direction20 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy19, direction20, sidetriple_neighborTSMInfo21, loggerWrapper22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo24 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper25 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl26 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy18, direction20, sidetriple_neighborTSMInfo24, loggerWrapper25);
    signalMapperImpl17.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus31 = null;
    hu.bme.mit.swsv.ris.common.Side side32 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal33 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus31, side32);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy39 = hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal40 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy39);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal41 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(short)100, sectionOccupancy39);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal42 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy39);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy43 = sectionOccupancySignal42.getSectionOccupancy();
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal44 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy43);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal45 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(short)-1, sectionOccupancy43);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl26.sectionOccupancyChanged(side32, sectionOccupancy43);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction20 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction20.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side32 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side32.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy39 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy39.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));
    org.junit.Assert.assertTrue("'" + sectionOccupancy43 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy43.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));

  }

  @Test
  public void test099() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test099"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.Direction direction4 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo5 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper6 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl7 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction4, sidetriple_neighborTSMInfo5, loggerWrapper6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction4, sidetriple_neighborTSMInfo8, loggerWrapper9);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal11 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(97, direction4);
    hu.bme.mit.swsv.ris.common.Direction direction12 = turnoutDirectionSignal11.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo13 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper14 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl15 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction12, sidetriple_neighborTSMInfo13, loggerWrapper14);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i17 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side19 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper20 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl21 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)(-1), sidetriple_i17, sidetriple_i18, sidetriple_side19, loggerWrapper20);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient22 = null;
    signalMapperImpl21.setMqClient(mQClient22);
    safetyLogicImpl15.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl21);
    hu.bme.mit.swsv.ris.common.Direction direction26 = hu.bme.mit.swsv.ris.common.Direction.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal27 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(short)-1, direction26);
    hu.bme.mit.swsv.ris.common.Direction direction28 = turnoutDirectionSignal27.getTurnoutDirection();
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl15.turnoutDirectionChanged(direction28);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction4 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction4.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction12 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction12.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction26 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.STRAIGHT + "'", direction26.equals(hu.bme.mit.swsv.ris.common.Direction.STRAIGHT));
    org.junit.Assert.assertTrue("'" + direction28 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.STRAIGHT + "'", direction28.equals(hu.bme.mit.swsv.ris.common.Direction.STRAIGHT));

  }

  @Test
  public void test100() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test100"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.Direction direction2 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction2, sidetriple_neighborTSMInfo3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction2, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i11 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)(-1), sidetriple_i10, sidetriple_i11, sidetriple_side12, loggerWrapper13);
    safetyLogicImpl8.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl14);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient16 = null;
    signalMapperImpl14.setMqClient(mQClient16);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient18 = null;
    signalMapperImpl14.setMqClient(mQClient18);
    org.junit.Assert.assertTrue("'" + direction2 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction2.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test101() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test101"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)1, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy7 = null;
    hu.bme.mit.swsv.ris.common.Direction direction8 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy7, direction8, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction8, sidetriple_neighborTSMInfo12, loggerWrapper13);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i16 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i17 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side18 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper19 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl20 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i16, sidetriple_i17, sidetriple_side18, loggerWrapper19);
    safetyLogicImpl14.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl20);
    safetyLogicImpl14.disconnect();
    safetyLogicImpl14.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl14);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionControl> sidetriple_sectionControl25 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl5.sendControl(sidetriple_sectionControl25);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction8 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction8.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test102() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test102"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.Direction direction1 = hu.bme.mit.swsv.ris.common.Direction.STRAIGHT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo2 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper3 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl4 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction1, sidetriple_neighborTSMInfo2, loggerWrapper3);
    org.junit.Assert.assertTrue("'" + direction1 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.STRAIGHT + "'", direction1.equals(hu.bme.mit.swsv.ris.common.Direction.STRAIGHT));

  }

  @Test
  public void test103() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test103"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.Direction direction2 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction2, sidetriple_neighborTSMInfo3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction2, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i11 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i10, sidetriple_i11, sidetriple_side12, loggerWrapper13);
    safetyLogicImpl8.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl14);
    safetyLogicImpl8.disconnect();
    safetyLogicImpl8.disconnect();
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i19 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i20 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)1, sidetriple_i19, sidetriple_i20, sidetriple_side21, loggerWrapper22);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient24 = null;
    signalMapperImpl23.setMqClient(mQClient24);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient26 = null;
    signalMapperImpl23.setMqClient(mQClient26);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i29 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i30 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side31 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper32 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl33 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i29, sidetriple_i30, sidetriple_side31, loggerWrapper32);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient34 = null;
    signalMapperImpl33.setMqClient(mQClient34);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy36 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy38 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy39 = null;
    hu.bme.mit.swsv.ris.common.Direction direction40 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo41 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper42 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl43 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy39, direction40, sidetriple_neighborTSMInfo41, loggerWrapper42);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo44 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper45 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl46 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy38, direction40, sidetriple_neighborTSMInfo44, loggerWrapper45);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal47 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction40);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo48 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper49 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl50 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy36, direction40, sidetriple_neighborTSMInfo48, loggerWrapper49);
    safetyLogicImpl50.disconnect();
    signalMapperImpl33.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl50);
    signalMapperImpl23.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl50);
    safetyLogicImpl8.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl23);
    org.junit.Assert.assertTrue("'" + direction2 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction2.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction40 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction40.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test104() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test104"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.Direction direction5 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal6 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)10, direction5);
    java.lang.String str7 = turnoutDirectionSignal6.toString();
    java.lang.String str8 = turnoutDirectionSignal6.toString();
    java.lang.Integer i9 = turnoutDirectionSignal6.getSenderId();
    hu.bme.mit.swsv.ris.common.Direction direction10 = turnoutDirectionSignal6.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.Direction direction11 = turnoutDirectionSignal6.getTurnoutDirection();
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal12 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)0, direction11);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal13 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)1, direction11);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction11, sidetriple_neighborTSMInfo14, loggerWrapper15);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal17 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((-1), direction11);
    org.junit.Assert.assertTrue("'" + direction5 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction5.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"+ "'", str7.equals("TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"+ "'", str8.equals("TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i9 + "' != '" + 10+ "'", i9.equals(10));
    org.junit.Assert.assertTrue("'" + direction10 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction10.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction11 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction11.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test105() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test105"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy4 = null;
    hu.bme.mit.swsv.ris.common.Direction direction5 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy4, direction5, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction5, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal12 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction5);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo13 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper14 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl15 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction5, sidetriple_neighborTSMInfo13, loggerWrapper14);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal16 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)10, direction5);
    java.lang.String str17 = turnoutDirectionSignal16.toString();
    org.junit.Assert.assertTrue("'" + direction5 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction5.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"+ "'", str17.equals("TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"));

  }

  @Test
  public void test106() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test106"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.Direction direction4 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo5 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper6 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl7 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction4, sidetriple_neighborTSMInfo5, loggerWrapper6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction4, sidetriple_neighborTSMInfo8, loggerWrapper9);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal11 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(97, direction4);
    hu.bme.mit.swsv.ris.common.Direction direction12 = turnoutDirectionSignal11.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo13 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper14 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl15 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction12, sidetriple_neighborTSMInfo13, loggerWrapper14);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i17 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side19 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper20 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl21 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i17, sidetriple_i18, sidetriple_side19, loggerWrapper20);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient22 = null;
    signalMapperImpl21.setMqClient(mQClient22);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i25 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i26 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side27 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper28 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl29 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i25, sidetriple_i26, sidetriple_side27, loggerWrapper28);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy30 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy31 = null;
    hu.bme.mit.swsv.ris.common.Direction direction32 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo33 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper34 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl35 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy31, direction32, sidetriple_neighborTSMInfo33, loggerWrapper34);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo36 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper37 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl38 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy30, direction32, sidetriple_neighborTSMInfo36, loggerWrapper37);
    signalMapperImpl29.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl38);
    signalMapperImpl21.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl38);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy41 = null;
    hu.bme.mit.swsv.ris.common.Direction direction42 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo43 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper44 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl45 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy41, direction42, sidetriple_neighborTSMInfo43, loggerWrapper44);
    signalMapperImpl21.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl45);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy47 = null;
    hu.bme.mit.swsv.ris.common.Direction direction48 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo49 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper50 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl51 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy47, direction48, sidetriple_neighborTSMInfo49, loggerWrapper50);
    hu.bme.mit.swsv.ris.tsm.SignalMapper signalMapper52 = null;
    safetyLogicImpl51.setSignalMapper(signalMapper52);
    signalMapperImpl21.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl51);
    safetyLogicImpl15.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl21);
    org.junit.Assert.assertTrue("'" + direction4 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction4.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction12 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction12.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction32 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction32.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction42 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction42.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction48 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction48.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test107() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test107"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)100, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i7 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i7, sidetriple_i8, sidetriple_side9, loggerWrapper10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy12 = null;
    hu.bme.mit.swsv.ris.common.Direction direction13 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy12, direction13, sidetriple_neighborTSMInfo14, loggerWrapper15);
    signalMapperImpl11.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl16);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i19 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i20 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i19, sidetriple_i20, sidetriple_side21, loggerWrapper22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy24 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy25 = null;
    hu.bme.mit.swsv.ris.common.Direction direction26 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo27 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper28 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl29 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy25, direction26, sidetriple_neighborTSMInfo27, loggerWrapper28);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo30 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper31 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl32 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy24, direction26, sidetriple_neighborTSMInfo30, loggerWrapper31);
    signalMapperImpl23.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl32);
    signalMapperImpl11.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl32);
    safetyLogicImpl32.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl32);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus39 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus42 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus45 = null;
    hu.bme.mit.swsv.ris.common.Side side46 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal47 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus45, side46);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal48 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, (int)(short)100, neighborTSMStatus42, side46);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal49 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)'#', 10, neighborTSMStatus39, side46);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy52 = hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal53 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(short)-1, sectionOccupancy52);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal54 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal(1, sectionOccupancy52);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl32.sectionOccupancyChanged(side46, sectionOccupancy52);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction13 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction13.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction26 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction26.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus39 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED + "'", neighborTSMStatus39.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus42 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus42.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side46 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side46.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy52 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy52.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));

  }

  @Test
  public void test108() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test108"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.Direction direction4 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo5 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper6 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl7 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction4, sidetriple_neighborTSMInfo5, loggerWrapper6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction4, sidetriple_neighborTSMInfo8, loggerWrapper9);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal11 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction4);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal12 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)-1, direction4);
    java.lang.String str13 = turnoutDirectionSignal12.toString();
    java.lang.Integer i14 = turnoutDirectionSignal12.getSenderId();
    org.junit.Assert.assertTrue("'" + direction4 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction4.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "TurnoutDirectionSignal(sender: -1, direction: DIVERGENT)"+ "'", str13.equals("TurnoutDirectionSignal(sender: -1, direction: DIVERGENT)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i14 + "' != '" + (-1)+ "'", i14.equals((-1)));

  }

  @Test
  public void test109() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test109"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.Direction direction7 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction7, sidetriple_neighborTSMInfo8, loggerWrapper9);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy12 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy13 = null;
    hu.bme.mit.swsv.ris.common.Direction direction14 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy13, direction14, sidetriple_neighborTSMInfo15, loggerWrapper16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo18 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper19 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl20 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy12, direction14, sidetriple_neighborTSMInfo18, loggerWrapper19);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i22 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i23 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side24 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper25 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl26 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i22, sidetriple_i23, sidetriple_side24, loggerWrapper25);
    safetyLogicImpl20.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl26);
    safetyLogicImpl20.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl20);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient30 = null;
    signalMapperImpl5.setMqClient(mQClient30);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMStatus> sidetriple_neighborTSMStatus32 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl5.sendStatus(sidetriple_neighborTSMStatus32);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction14 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction14.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test110() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test110"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.Direction direction3 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo4 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper5 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl6 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction3, sidetriple_neighborTSMInfo4, loggerWrapper5);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo7 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper8 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl9 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction3, sidetriple_neighborTSMInfo7, loggerWrapper8);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo10 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper11 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl12 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction3, sidetriple_neighborTSMInfo10, loggerWrapper11);
    safetyLogicImpl12.disconnect();
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy17 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy18 = null;
    hu.bme.mit.swsv.ris.common.Direction direction19 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy18, direction19, sidetriple_neighborTSMInfo20, loggerWrapper21);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo23 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper24 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl25 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy17, direction19, sidetriple_neighborTSMInfo23, loggerWrapper24);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal26 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(97, direction19);
    hu.bme.mit.swsv.ris.common.Direction direction27 = turnoutDirectionSignal26.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo28 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper29 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl30 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction27, sidetriple_neighborTSMInfo28, loggerWrapper29);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo31 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper32 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl33 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy14, direction27, sidetriple_neighborTSMInfo31, loggerWrapper32);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl12.turnoutDirectionChanged(direction27);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction3 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction3.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction19 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction19.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction27 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction27.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test111() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test111"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.Direction direction2 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction2, sidetriple_neighborTSMInfo3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction2, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i11 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i10, sidetriple_i11, sidetriple_side12, loggerWrapper13);
    safetyLogicImpl8.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl14);
    safetyLogicImpl8.disconnect();
    safetyLogicImpl8.disconnect();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus24 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus27 = null;
    hu.bme.mit.swsv.ris.common.Side side28 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal29 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus27, side28);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal30 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, (int)(short)100, neighborTSMStatus24, side28);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus33 = null;
    hu.bme.mit.swsv.ris.common.Side side34 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal35 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus33, side34);
    hu.bme.mit.swsv.ris.common.Side side36 = heartBeatSignal35.getSenderSide();
    java.lang.Integer i37 = heartBeatSignal35.getTargetId();
    java.lang.Integer i38 = heartBeatSignal35.getSenderId();
    java.lang.String str39 = heartBeatSignal35.toString();
    hu.bme.mit.swsv.ris.common.Side side40 = heartBeatSignal35.getSenderSide();
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal41 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)0, (int)(short)0, neighborTSMStatus24, side40);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus42 = heartBeatSignal41.getStatus();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus45 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus48 = null;
    hu.bme.mit.swsv.ris.common.Side side49 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal50 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus48, side49);
    hu.bme.mit.swsv.ris.common.Side side51 = heartBeatSignal50.getSenderSide();
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal52 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)' ', (int)(byte)0, neighborTSMStatus45, side51);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal53 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(0, (int)(byte)1, neighborTSMStatus42, side51);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy57 = hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal58 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy57);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal59 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(short)100, sectionOccupancy57);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal60 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(short)100, sectionOccupancy57);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy61 = sectionOccupancySignal60.getSectionOccupancy();
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl8.sectionOccupancyChanged(side51, sectionOccupancy61);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction2 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction2.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus24 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus24.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side28 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side28.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side34 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side34.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side36 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side36.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i37 + "' != '" + 100+ "'", i37.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i38 + "' != '" + (-1)+ "'", i38.equals((-1)));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:37 CET 2016)"+ "'", str39.equals("HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:37 CET 2016)"));
    org.junit.Assert.assertTrue("'" + side40 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side40.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus42 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus42.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus45 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED + "'", neighborTSMStatus45.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED));
    org.junit.Assert.assertTrue("'" + side49 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side49.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side51 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side51.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy57 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy57.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));
    org.junit.Assert.assertTrue("'" + sectionOccupancy61 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy61.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));

  }

  @Test
  public void test112() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test112"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy4 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy5 = null;
    hu.bme.mit.swsv.ris.common.Direction direction6 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo7 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper8 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl9 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy5, direction6, sidetriple_neighborTSMInfo7, loggerWrapper8);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo10 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper11 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl12 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy4, direction6, sidetriple_neighborTSMInfo10, loggerWrapper11);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal13 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(97, direction6);
    hu.bme.mit.swsv.ris.common.Direction direction14 = turnoutDirectionSignal13.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction14, sidetriple_neighborTSMInfo15, loggerWrapper16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo18 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper19 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl20 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction14, sidetriple_neighborTSMInfo18, loggerWrapper19);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal21 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((-1), direction14);
    java.lang.String str22 = turnoutDirectionSignal21.toString();
    org.junit.Assert.assertTrue("'" + direction6 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction6.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction14 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction14.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "TurnoutDirectionSignal(sender: -1, direction: DIVERGENT)"+ "'", str22.equals("TurnoutDirectionSignal(sender: -1, direction: DIVERGENT)"));

  }

  @Test
  public void test113() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test113"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.Direction direction2 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction2, sidetriple_neighborTSMInfo3, loggerWrapper4);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal6 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(1, direction2);
    hu.bme.mit.swsv.ris.common.Direction direction7 = turnoutDirectionSignal6.getTurnoutDirection();
    org.junit.Assert.assertTrue("'" + direction2 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction2.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test114() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test114"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy9 = null;
    hu.bme.mit.swsv.ris.common.Direction direction10 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy9, direction10, sidetriple_neighborTSMInfo11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy8, direction10, sidetriple_neighborTSMInfo14, loggerWrapper15);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl16);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i19 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i20 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)1, sidetriple_i19, sidetriple_i20, sidetriple_side21, loggerWrapper22);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient24 = null;
    signalMapperImpl23.setMqClient(mQClient24);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient26 = null;
    signalMapperImpl23.setMqClient(mQClient26);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i29 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i30 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side31 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper32 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl33 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i29, sidetriple_i30, sidetriple_side31, loggerWrapper32);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient34 = null;
    signalMapperImpl33.setMqClient(mQClient34);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy36 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy38 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy39 = null;
    hu.bme.mit.swsv.ris.common.Direction direction40 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo41 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper42 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl43 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy39, direction40, sidetriple_neighborTSMInfo41, loggerWrapper42);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo44 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper45 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl46 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy38, direction40, sidetriple_neighborTSMInfo44, loggerWrapper45);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal47 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction40);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo48 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper49 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl50 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy36, direction40, sidetriple_neighborTSMInfo48, loggerWrapper49);
    safetyLogicImpl50.disconnect();
    signalMapperImpl33.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl50);
    signalMapperImpl23.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl50);
    safetyLogicImpl50.disconnect();
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i56 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i57 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side58 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper59 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl60 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)(-1), sidetriple_i56, sidetriple_i57, sidetriple_side58, loggerWrapper59);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient61 = null;
    signalMapperImpl60.setMqClient(mQClient61);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i64 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i65 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side66 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper67 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl68 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i64, sidetriple_i65, sidetriple_side66, loggerWrapper67);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient69 = null;
    signalMapperImpl68.setMqClient(mQClient69);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy71 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy72 = null;
    hu.bme.mit.swsv.ris.common.Direction direction73 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo74 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper75 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl76 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy72, direction73, sidetriple_neighborTSMInfo74, loggerWrapper75);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo77 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper78 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl79 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy71, direction73, sidetriple_neighborTSMInfo77, loggerWrapper78);
    signalMapperImpl68.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl79);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient81 = null;
    signalMapperImpl68.setMqClient(mQClient81);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy83 = null;
    hu.bme.mit.swsv.ris.common.Direction direction84 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo85 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper86 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl87 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy83, direction84, sidetriple_neighborTSMInfo85, loggerWrapper86);
    signalMapperImpl68.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl87);
    signalMapperImpl60.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl87);
    safetyLogicImpl50.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl60);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl50);
    org.junit.Assert.assertTrue("'" + direction10 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction10.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction40 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction40.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction73 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction73.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction84 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction84.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test115() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test115"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.Direction direction5 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal6 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)10, direction5);
    java.lang.String str7 = turnoutDirectionSignal6.toString();
    java.lang.String str8 = turnoutDirectionSignal6.toString();
    java.lang.Integer i9 = turnoutDirectionSignal6.getSenderId();
    hu.bme.mit.swsv.ris.common.Direction direction10 = turnoutDirectionSignal6.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.Direction direction11 = turnoutDirectionSignal6.getTurnoutDirection();
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal12 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)0, direction11);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal13 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)1, direction11);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction11, sidetriple_neighborTSMInfo14, loggerWrapper15);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal17 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)' ', direction11);
    org.junit.Assert.assertTrue("'" + direction5 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction5.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"+ "'", str7.equals("TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"+ "'", str8.equals("TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i9 + "' != '" + 10+ "'", i9.equals(10));
    org.junit.Assert.assertTrue("'" + direction10 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction10.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction11 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction11.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test116() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test116"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)1, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient8 = null;
    signalMapperImpl5.setMqClient(mQClient8);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i11 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i12 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side13 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper14 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl15 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i11, sidetriple_i12, sidetriple_side13, loggerWrapper14);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient16 = null;
    signalMapperImpl15.setMqClient(mQClient16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy20 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy21 = null;
    hu.bme.mit.swsv.ris.common.Direction direction22 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo23 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper24 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl25 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy21, direction22, sidetriple_neighborTSMInfo23, loggerWrapper24);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo26 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper27 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl28 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy20, direction22, sidetriple_neighborTSMInfo26, loggerWrapper27);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal29 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo30 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper31 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl32 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy18, direction22, sidetriple_neighborTSMInfo30, loggerWrapper31);
    safetyLogicImpl32.disconnect();
    signalMapperImpl15.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl32);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl32);
    safetyLogicImpl32.disconnect();
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i38 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i39 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side40 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper41 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl42 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)(-1), sidetriple_i38, sidetriple_i39, sidetriple_side40, loggerWrapper41);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient43 = null;
    signalMapperImpl42.setMqClient(mQClient43);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i46 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i47 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side48 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper49 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl50 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i46, sidetriple_i47, sidetriple_side48, loggerWrapper49);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient51 = null;
    signalMapperImpl50.setMqClient(mQClient51);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy53 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy54 = null;
    hu.bme.mit.swsv.ris.common.Direction direction55 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo56 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper57 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl58 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy54, direction55, sidetriple_neighborTSMInfo56, loggerWrapper57);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo59 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper60 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl61 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy53, direction55, sidetriple_neighborTSMInfo59, loggerWrapper60);
    signalMapperImpl50.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl61);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient63 = null;
    signalMapperImpl50.setMqClient(mQClient63);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy65 = null;
    hu.bme.mit.swsv.ris.common.Direction direction66 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo67 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper68 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl69 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy65, direction66, sidetriple_neighborTSMInfo67, loggerWrapper68);
    signalMapperImpl50.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl69);
    signalMapperImpl42.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl69);
    safetyLogicImpl32.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl42);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient73 = null;
    signalMapperImpl42.setMqClient(mQClient73);
    org.junit.Assert.assertTrue("'" + direction22 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction22.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction55 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction55.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction66 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction66.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test117() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test117"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)10, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy9 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy10 = null;
    hu.bme.mit.swsv.ris.common.Direction direction11 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy10, direction11, sidetriple_neighborTSMInfo12, loggerWrapper13);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy9, direction11, sidetriple_neighborTSMInfo15, loggerWrapper16);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal18 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction11);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal19 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)100, direction11);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction11, sidetriple_neighborTSMInfo20, loggerWrapper21);
    safetyLogicImpl22.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i26 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i27 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side28 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper29 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl30 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)97, sidetriple_i26, sidetriple_i27, sidetriple_side28, loggerWrapper29);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy31 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy33 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy34 = null;
    hu.bme.mit.swsv.ris.common.Direction direction35 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo36 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper37 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl38 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy34, direction35, sidetriple_neighborTSMInfo36, loggerWrapper37);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo39 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper40 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl41 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy33, direction35, sidetriple_neighborTSMInfo39, loggerWrapper40);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal42 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction35);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo43 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper44 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl45 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy31, direction35, sidetriple_neighborTSMInfo43, loggerWrapper44);
    signalMapperImpl30.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl45);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i48 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i49 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side50 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper51 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl52 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)(-1), sidetriple_i48, sidetriple_i49, sidetriple_side50, loggerWrapper51);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient53 = null;
    signalMapperImpl52.setMqClient(mQClient53);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient55 = null;
    signalMapperImpl52.setMqClient(mQClient55);
    safetyLogicImpl45.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl52);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl45);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMStatus> sidetriple_neighborTSMStatus59 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl5.sendStatus(sidetriple_neighborTSMStatus59);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction11 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction11.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction35 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction35.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test118() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test118"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy9 = null;
    hu.bme.mit.swsv.ris.common.Direction direction10 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy9, direction10, sidetriple_neighborTSMInfo11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy8, direction10, sidetriple_neighborTSMInfo14, loggerWrapper15);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy19 = null;
    hu.bme.mit.swsv.ris.common.Direction direction20 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy19, direction20, sidetriple_neighborTSMInfo21, loggerWrapper22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo24 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper25 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl26 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy18, direction20, sidetriple_neighborTSMInfo24, loggerWrapper25);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i28 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i29 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side30 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper31 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl32 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i28, sidetriple_i29, sidetriple_side30, loggerWrapper31);
    safetyLogicImpl26.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl32);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy34 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy36 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy37 = null;
    hu.bme.mit.swsv.ris.common.Direction direction38 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo39 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper40 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl41 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy37, direction38, sidetriple_neighborTSMInfo39, loggerWrapper40);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo42 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper43 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl44 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy36, direction38, sidetriple_neighborTSMInfo42, loggerWrapper43);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal45 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction38);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo46 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper47 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl48 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy34, direction38, sidetriple_neighborTSMInfo46, loggerWrapper47);
    safetyLogicImpl48.disconnect();
    signalMapperImpl32.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl48);
    safetyLogicImpl16.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl32);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus54 = null;
    hu.bme.mit.swsv.ris.common.Side side55 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal56 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)' ', (int)(short)100, neighborTSMStatus54, side55);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus57 = heartBeatSignal56.getStatus();
    hu.bme.mit.swsv.ris.common.Side side58 = heartBeatSignal56.getSenderSide();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus61 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus64 = null;
    hu.bme.mit.swsv.ris.common.Side side65 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal66 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus64, side65);
    hu.bme.mit.swsv.ris.common.Side side67 = heartBeatSignal66.getSenderSide();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus68 = heartBeatSignal66.getStatus();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus69 = heartBeatSignal66.getStatus();
    java.util.Date date70 = heartBeatSignal66.getTimestamp();
    java.util.Date date71 = heartBeatSignal66.getTimestamp();
    hu.bme.mit.swsv.ris.common.Side side72 = heartBeatSignal66.getSenderSide();
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal73 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, 0, neighborTSMStatus61, side72);
    java.util.Date date74 = heartBeatSignal73.getTimestamp();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus75 = null;
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl16.neighborStatusChanged(side58, date74, neighborTSMStatus75);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction10 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction10.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction20 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction20.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction38 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction38.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side55 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side55.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(neighborTSMStatus57);
    org.junit.Assert.assertTrue("'" + side58 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side58.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus61 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED + "'", neighborTSMStatus61.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED));
    org.junit.Assert.assertTrue("'" + side65 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side65.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side67 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side67.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(neighborTSMStatus68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(neighborTSMStatus69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date71);
    org.junit.Assert.assertTrue("'" + side72 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side72.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date74);

  }

  @Test
  public void test119() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test119"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)1, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient8 = null;
    signalMapperImpl5.setMqClient(mQClient8);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i11 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i12 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side13 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper14 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl15 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i11, sidetriple_i12, sidetriple_side13, loggerWrapper14);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient16 = null;
    signalMapperImpl15.setMqClient(mQClient16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy20 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy21 = null;
    hu.bme.mit.swsv.ris.common.Direction direction22 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo23 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper24 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl25 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy21, direction22, sidetriple_neighborTSMInfo23, loggerWrapper24);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo26 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper27 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl28 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy20, direction22, sidetriple_neighborTSMInfo26, loggerWrapper27);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal29 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo30 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper31 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl32 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy18, direction22, sidetriple_neighborTSMInfo30, loggerWrapper31);
    safetyLogicImpl32.disconnect();
    signalMapperImpl15.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl32);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl32);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus38 = null;
    hu.bme.mit.swsv.ris.common.Side side39 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal40 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)0, (int)(byte)100, neighborTSMStatus38, side39);
    java.util.Date date41 = heartBeatSignal40.getTimestamp();
    hu.bme.mit.swsv.ris.common.Side side42 = heartBeatSignal40.getSenderSide();
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy44 = hu.bme.mit.swsv.ris.common.SectionOccupancy.OCCUPIED;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal45 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal(10, sectionOccupancy44);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl32.sectionOccupancyChanged(side42, sectionOccupancy44);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction22 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction22.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side39 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side39.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date41);
    org.junit.Assert.assertTrue("'" + side42 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side42.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy44 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.OCCUPIED + "'", sectionOccupancy44.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.OCCUPIED));

  }

  @Test
  public void test120() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test120"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.Direction direction3 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo4 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper5 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl6 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction3, sidetriple_neighborTSMInfo4, loggerWrapper5);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo7 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper8 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl9 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction3, sidetriple_neighborTSMInfo7, loggerWrapper8);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo10 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper11 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl12 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction3, sidetriple_neighborTSMInfo10, loggerWrapper11);
    hu.bme.mit.swsv.ris.common.Side side13 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus16 = null;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus19 = null;
    hu.bme.mit.swsv.ris.common.Side side20 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal21 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus19, side20);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal22 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(byte)100, (int)(byte)-1, neighborTSMStatus16, side20);
    java.util.Date date23 = heartBeatSignal22.getTimestamp();
    java.util.Date date24 = heartBeatSignal22.getTimestamp();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus27 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus30 = null;
    hu.bme.mit.swsv.ris.common.Side side31 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal32 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus30, side31);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal33 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, (int)(short)100, neighborTSMStatus27, side31);
    java.lang.Integer i34 = heartBeatSignal33.getTargetId();
    java.lang.String str35 = heartBeatSignal33.toString();
    java.lang.Integer i36 = heartBeatSignal33.getTargetId();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus37 = heartBeatSignal33.getStatus();
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl12.neighborStatusChanged(side13, date24, neighborTSMStatus37);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction3 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction3.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side13 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side13.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side20 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side20.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date24);
    org.junit.Assert.assertTrue("'" + neighborTSMStatus27 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus27.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side31 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side31.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i34 + "' != '" + 100+ "'", i34.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "HeartBeatSignal(sender: 10 (STRAIGHT), target: 100, status: DENIED, timestamp: Thu Dec 01 10:44:39 CET 2016)"+ "'", str35.equals("HeartBeatSignal(sender: 10 (STRAIGHT), target: 100, status: DENIED, timestamp: Thu Dec 01 10:44:39 CET 2016)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i36 + "' != '" + 100+ "'", i36.equals(100));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus37 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus37.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));

  }

  @Test
  public void test121() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test121"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.Direction direction7 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction7, sidetriple_neighborTSMInfo8, loggerWrapper9);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl10);
    safetyLogicImpl10.disconnect();
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test122() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test122"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.Direction direction7 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction7, sidetriple_neighborTSMInfo8, loggerWrapper9);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy12 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy13 = null;
    hu.bme.mit.swsv.ris.common.Direction direction14 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy13, direction14, sidetriple_neighborTSMInfo15, loggerWrapper16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo18 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper19 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl20 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy12, direction14, sidetriple_neighborTSMInfo18, loggerWrapper19);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i22 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i23 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side24 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper25 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl26 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i22, sidetriple_i23, sidetriple_side24, loggerWrapper25);
    safetyLogicImpl20.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl26);
    safetyLogicImpl20.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl20);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient30 = null;
    signalMapperImpl5.setMqClient(mQClient30);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i33 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i34 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side35 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper36 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl37 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i33, sidetriple_i34, sidetriple_side35, loggerWrapper36);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient38 = null;
    signalMapperImpl37.setMqClient(mQClient38);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i41 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i42 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side43 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper44 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl45 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i41, sidetriple_i42, sidetriple_side43, loggerWrapper44);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy46 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy47 = null;
    hu.bme.mit.swsv.ris.common.Direction direction48 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo49 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper50 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl51 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy47, direction48, sidetriple_neighborTSMInfo49, loggerWrapper50);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo52 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper53 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl54 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy46, direction48, sidetriple_neighborTSMInfo52, loggerWrapper53);
    signalMapperImpl45.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl54);
    signalMapperImpl37.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl54);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy57 = null;
    hu.bme.mit.swsv.ris.common.Direction direction58 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo59 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper60 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl61 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy57, direction58, sidetriple_neighborTSMInfo59, loggerWrapper60);
    signalMapperImpl37.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl61);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i64 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i65 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side66 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper67 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl68 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i64, sidetriple_i65, sidetriple_side66, loggerWrapper67);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient69 = null;
    signalMapperImpl68.setMqClient(mQClient69);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i72 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i73 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side74 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper75 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl76 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i72, sidetriple_i73, sidetriple_side74, loggerWrapper75);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy77 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy78 = null;
    hu.bme.mit.swsv.ris.common.Direction direction79 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo80 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper81 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl82 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy78, direction79, sidetriple_neighborTSMInfo80, loggerWrapper81);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo83 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper84 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl85 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy77, direction79, sidetriple_neighborTSMInfo83, loggerWrapper84);
    signalMapperImpl76.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl85);
    signalMapperImpl68.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl85);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy88 = null;
    hu.bme.mit.swsv.ris.common.Direction direction89 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo90 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper91 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl92 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy88, direction89, sidetriple_neighborTSMInfo90, loggerWrapper91);
    signalMapperImpl68.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl92);
    safetyLogicImpl61.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl68);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl61);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMStatus> sidetriple_neighborTSMStatus96 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl5.sendStatus(sidetriple_neighborTSMStatus96);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction14 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction14.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction48 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction48.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction58 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction58.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction79 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction79.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction89 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction89.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test123() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test123"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.Direction direction2 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction2, sidetriple_neighborTSMInfo3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction2, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i11 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)(-1), sidetriple_i10, sidetriple_i11, sidetriple_side12, loggerWrapper13);
    safetyLogicImpl8.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl14);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionControl> sidetriple_sectionControl16 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl14.sendControl(sidetriple_sectionControl16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction2 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction2.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test124() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test124"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy9 = null;
    hu.bme.mit.swsv.ris.common.Direction direction10 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy9, direction10, sidetriple_neighborTSMInfo11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy8, direction10, sidetriple_neighborTSMInfo14, loggerWrapper15);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl16);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient18 = null;
    signalMapperImpl5.setMqClient(mQClient18);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy20 = null;
    hu.bme.mit.swsv.ris.common.Direction direction21 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo22 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper23 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl24 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy20, direction21, sidetriple_neighborTSMInfo22, loggerWrapper23);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl24);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionControl> sidetriple_sectionControl26 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl5.sendControl(sidetriple_sectionControl26);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction10 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction10.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction21 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction21.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test125() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test125"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.Direction direction4 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo5 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper6 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl7 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction4, sidetriple_neighborTSMInfo5, loggerWrapper6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction4, sidetriple_neighborTSMInfo8, loggerWrapper9);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal11 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(97, direction4);
    hu.bme.mit.swsv.ris.common.Direction direction12 = turnoutDirectionSignal11.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo13 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper14 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl15 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction12, sidetriple_neighborTSMInfo13, loggerWrapper14);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy16 = null;
    hu.bme.mit.swsv.ris.common.Direction direction17 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo18 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper19 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl20 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy16, direction17, sidetriple_neighborTSMInfo18, loggerWrapper19);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl15.turnoutDirectionChanged(direction17);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction4 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction4.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction12 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction12.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction17 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction17.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test126() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test126"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy4 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy5 = null;
    hu.bme.mit.swsv.ris.common.Direction direction6 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo7 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper8 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl9 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy5, direction6, sidetriple_neighborTSMInfo7, loggerWrapper8);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo10 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper11 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl12 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy4, direction6, sidetriple_neighborTSMInfo10, loggerWrapper11);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal13 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction6);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal14 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)100, direction6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction6, sidetriple_neighborTSMInfo15, loggerWrapper16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo18 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper19 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl20 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction6, sidetriple_neighborTSMInfo18, loggerWrapper19);
    org.junit.Assert.assertTrue("'" + direction6 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction6.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test127() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test127"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy4 = null;
    hu.bme.mit.swsv.ris.common.Direction direction5 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy4, direction5, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction5, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal12 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction5);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal13 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)100, direction5);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction5, sidetriple_neighborTSMInfo14, loggerWrapper15);
    safetyLogicImpl16.disconnect();
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy18 = null;
    hu.bme.mit.swsv.ris.common.Direction direction20 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal21 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)10, direction20);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo22 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper23 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl24 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy18, direction20, sidetriple_neighborTSMInfo22, loggerWrapper23);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl16.turnoutDirectionChanged(direction20);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction5 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction5.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction20 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction20.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test128() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test128"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.Direction direction2 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction2, sidetriple_neighborTSMInfo3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction2, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i11 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i10, sidetriple_i11, sidetriple_side12, loggerWrapper13);
    safetyLogicImpl8.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl14);
    safetyLogicImpl8.disconnect();
    hu.bme.mit.swsv.ris.common.Side side17 = null;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus22 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus25 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus28 = null;
    hu.bme.mit.swsv.ris.common.Side side29 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal30 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus28, side29);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal31 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, (int)(short)100, neighborTSMStatus25, side29);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal32 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)'#', 10, neighborTSMStatus22, side29);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus35 = null;
    hu.bme.mit.swsv.ris.common.Side side36 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal37 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus35, side36);
    hu.bme.mit.swsv.ris.common.Side side38 = heartBeatSignal37.getSenderSide();
    java.lang.Integer i39 = heartBeatSignal37.getTargetId();
    java.lang.Integer i40 = heartBeatSignal37.getSenderId();
    java.lang.String str41 = heartBeatSignal37.toString();
    hu.bme.mit.swsv.ris.common.Side side42 = heartBeatSignal37.getSenderSide();
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal43 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(byte)1, 0, neighborTSMStatus22, side42);
    java.util.Date date44 = heartBeatSignal43.getTimestamp();
    java.util.Date date45 = heartBeatSignal43.getTimestamp();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus46 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl8.neighborStatusChanged(side17, date45, neighborTSMStatus46);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction2 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction2.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus22 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED + "'", neighborTSMStatus22.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus25 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus25.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side29 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side29.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side36 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side36.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side38 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side38.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i39 + "' != '" + 100+ "'", i39.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i40 + "' != '" + (-1)+ "'", i40.equals((-1)));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:41 CET 2016)"+ "'", str41.equals("HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:41 CET 2016)"));
    org.junit.Assert.assertTrue("'" + side42 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side42.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date45);
    org.junit.Assert.assertTrue("'" + neighborTSMStatus46 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus46.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));

  }

  @Test
  public void test129() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test129"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy4 = null;
    hu.bme.mit.swsv.ris.common.Direction direction5 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy4, direction5, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction5, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal12 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction5);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal13 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)100, direction5);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction5, sidetriple_neighborTSMInfo14, loggerWrapper15);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy19 = null;
    hu.bme.mit.swsv.ris.common.Direction direction20 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy19, direction20, sidetriple_neighborTSMInfo21, loggerWrapper22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo24 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper25 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl26 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy18, direction20, sidetriple_neighborTSMInfo24, loggerWrapper25);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal27 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)'4', direction20);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl16.turnoutDirectionChanged(direction20);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction5 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction5.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction20 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction20.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test130() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test130"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.Direction direction2 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal3 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)10, direction2);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo4 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper5 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl6 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction2, sidetriple_neighborTSMInfo4, loggerWrapper5);
    hu.bme.mit.swsv.ris.common.Direction direction8 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal9 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)10, direction8);
    java.lang.String str10 = turnoutDirectionSignal9.toString();
    java.lang.String str11 = turnoutDirectionSignal9.toString();
    java.lang.Integer i12 = turnoutDirectionSignal9.getSenderId();
    hu.bme.mit.swsv.ris.common.Direction direction13 = turnoutDirectionSignal9.getTurnoutDirection();
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl6.turnoutDirectionChanged(direction13);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction2 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction2.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction8 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction8.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"+ "'", str10.equals("TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"+ "'", str11.equals("TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i12 + "' != '" + 10+ "'", i12.equals(10));
    org.junit.Assert.assertTrue("'" + direction13 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction13.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test131() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test131"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i9 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i9, sidetriple_i10, sidetriple_side11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.Direction direction16 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo17 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper18 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl19 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction16, sidetriple_neighborTSMInfo17, loggerWrapper18);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy14, direction16, sidetriple_neighborTSMInfo20, loggerWrapper21);
    signalMapperImpl13.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy25 = null;
    hu.bme.mit.swsv.ris.common.Direction direction26 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo27 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper28 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl29 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy25, direction26, sidetriple_neighborTSMInfo27, loggerWrapper28);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl29);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient31 = null;
    signalMapperImpl5.setMqClient(mQClient31);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy33 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy34 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy35 = null;
    hu.bme.mit.swsv.ris.common.Direction direction36 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo37 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper38 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl39 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy35, direction36, sidetriple_neighborTSMInfo37, loggerWrapper38);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo40 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper41 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl42 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy34, direction36, sidetriple_neighborTSMInfo40, loggerWrapper41);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo43 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper44 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl45 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy33, direction36, sidetriple_neighborTSMInfo43, loggerWrapper44);
    safetyLogicImpl45.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl45);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMStatus> sidetriple_neighborTSMStatus48 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl5.sendStatus(sidetriple_neighborTSMStatus48);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction16 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction16.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction26 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction26.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction36 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction36.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test132() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test132"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i9 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i9, sidetriple_i10, sidetriple_side11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.Direction direction16 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo17 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper18 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl19 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction16, sidetriple_neighborTSMInfo17, loggerWrapper18);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy14, direction16, sidetriple_neighborTSMInfo20, loggerWrapper21);
    signalMapperImpl13.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy25 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy26 = null;
    hu.bme.mit.swsv.ris.common.Direction direction27 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo28 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper29 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl30 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy26, direction27, sidetriple_neighborTSMInfo28, loggerWrapper29);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo31 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper32 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl33 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy25, direction27, sidetriple_neighborTSMInfo31, loggerWrapper32);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i35 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i36 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side37 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper38 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl39 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i35, sidetriple_i36, sidetriple_side37, loggerWrapper38);
    safetyLogicImpl33.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl39);
    safetyLogicImpl22.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl39);
    safetyLogicImpl22.disconnect();
    org.junit.Assert.assertTrue("'" + direction16 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction16.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction27 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction27.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test133() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test133"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.Direction direction7 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction7, sidetriple_neighborTSMInfo8, loggerWrapper9);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl10);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i13 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i13, sidetriple_i14, sidetriple_side15, loggerWrapper16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy19 = null;
    hu.bme.mit.swsv.ris.common.Direction direction20 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy19, direction20, sidetriple_neighborTSMInfo21, loggerWrapper22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo24 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper25 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl26 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy18, direction20, sidetriple_neighborTSMInfo24, loggerWrapper25);
    signalMapperImpl17.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient29 = null;
    signalMapperImpl5.setMqClient(mQClient29);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionControl> sidetriple_sectionControl31 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl5.sendControl(sidetriple_sectionControl31);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction20 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction20.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test134() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test134"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy4 = null;
    hu.bme.mit.swsv.ris.common.Direction direction5 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy4, direction5, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction5, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal12 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction5);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal13 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)100, direction5);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction5, sidetriple_neighborTSMInfo14, loggerWrapper15);
    safetyLogicImpl16.disconnect();
    safetyLogicImpl16.disconnect();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus21 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus24 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.Side side25 = hu.bme.mit.swsv.ris.common.Side.FACING;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal26 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(byte)10, (int)(byte)-1, neighborTSMStatus24, side25);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal27 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(97, (int)(byte)1, neighborTSMStatus21, side25);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus30 = null;
    hu.bme.mit.swsv.ris.common.Side side31 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal32 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)0, (int)(byte)100, neighborTSMStatus30, side31);
    java.util.Date date33 = heartBeatSignal32.getTimestamp();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus38 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus41 = null;
    hu.bme.mit.swsv.ris.common.Side side42 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal43 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus41, side42);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal44 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, (int)(short)100, neighborTSMStatus38, side42);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus47 = null;
    hu.bme.mit.swsv.ris.common.Side side48 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal49 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus47, side48);
    hu.bme.mit.swsv.ris.common.Side side50 = heartBeatSignal49.getSenderSide();
    java.lang.Integer i51 = heartBeatSignal49.getTargetId();
    java.lang.Integer i52 = heartBeatSignal49.getSenderId();
    java.lang.String str53 = heartBeatSignal49.toString();
    hu.bme.mit.swsv.ris.common.Side side54 = heartBeatSignal49.getSenderSide();
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal55 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)0, (int)(short)0, neighborTSMStatus38, side54);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus56 = heartBeatSignal55.getStatus();
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl16.neighborStatusChanged(side25, date33, neighborTSMStatus56);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction5 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction5.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus21 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus21.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus24 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus24.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side25 + "' != '" + hu.bme.mit.swsv.ris.common.Side.FACING + "'", side25.equals(hu.bme.mit.swsv.ris.common.Side.FACING));
    org.junit.Assert.assertTrue("'" + side31 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side31.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date33);
    org.junit.Assert.assertTrue("'" + neighborTSMStatus38 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus38.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side42 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side42.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side48 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side48.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side50 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side50.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i51 + "' != '" + 100+ "'", i51.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i52 + "' != '" + (-1)+ "'", i52.equals((-1)));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str53 + "' != '" + "HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:43 CET 2016)"+ "'", str53.equals("HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:43 CET 2016)"));
    org.junit.Assert.assertTrue("'" + side54 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side54.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus56 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus56.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));

  }

  @Test
  public void test135() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test135"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.Direction direction4 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo5 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper6 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl7 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction4, sidetriple_neighborTSMInfo5, loggerWrapper6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction4, sidetriple_neighborTSMInfo8, loggerWrapper9);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal11 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(97, direction4);
    hu.bme.mit.swsv.ris.common.Direction direction12 = turnoutDirectionSignal11.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo13 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper14 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl15 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction12, sidetriple_neighborTSMInfo13, loggerWrapper14);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy16 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy17 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy19 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy20 = null;
    hu.bme.mit.swsv.ris.common.Direction direction21 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo22 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper23 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl24 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy20, direction21, sidetriple_neighborTSMInfo22, loggerWrapper23);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo25 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper26 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl27 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy19, direction21, sidetriple_neighborTSMInfo25, loggerWrapper26);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal28 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(97, direction21);
    hu.bme.mit.swsv.ris.common.Direction direction29 = turnoutDirectionSignal28.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo30 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper31 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl32 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy17, direction29, sidetriple_neighborTSMInfo30, loggerWrapper31);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo33 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper34 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl35 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy16, direction29, sidetriple_neighborTSMInfo33, loggerWrapper34);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl15.turnoutDirectionChanged(direction29);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction4 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction4.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction12 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction12.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction21 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction21.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction29 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction29.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test136() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test136"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.Direction direction3 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo4 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper5 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl6 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction3, sidetriple_neighborTSMInfo4, loggerWrapper5);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo7 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper8 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl9 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction3, sidetriple_neighborTSMInfo7, loggerWrapper8);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo10 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper11 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl12 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction3, sidetriple_neighborTSMInfo10, loggerWrapper11);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus19 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.Side side20 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal21 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(10, (int)(short)1, neighborTSMStatus19, side20);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus26 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.Side side27 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal28 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(10, (int)(short)1, neighborTSMStatus26, side27);
    hu.bme.mit.swsv.ris.common.Side side29 = hu.bme.mit.swsv.ris.common.Side.FACING;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal30 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)100, 97, neighborTSMStatus26, side29);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal31 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)'4', (int)'#', neighborTSMStatus19, side29);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus34 = null;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus37 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus40 = null;
    hu.bme.mit.swsv.ris.common.Side side41 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal42 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus40, side41);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal43 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, (int)(short)100, neighborTSMStatus37, side41);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal44 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)1, (-1), neighborTSMStatus34, side41);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal45 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(1, 97, neighborTSMStatus19, side41);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy51 = hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal52 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy51);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal53 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(short)100, sectionOccupancy51);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal54 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy51);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy55 = sectionOccupancySignal54.getSectionOccupancy();
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal56 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal(100, sectionOccupancy55);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal57 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)100, sectionOccupancy55);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl12.sectionOccupancyChanged(side41, sectionOccupancy55);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction3 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction3.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus19 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus19.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side20 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side20.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus26 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus26.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side27 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side27.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side29 + "' != '" + hu.bme.mit.swsv.ris.common.Side.FACING + "'", side29.equals(hu.bme.mit.swsv.ris.common.Side.FACING));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus37 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus37.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side41 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side41.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy51 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy51.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));
    org.junit.Assert.assertTrue("'" + sectionOccupancy55 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy55.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));

  }

  @Test
  public void test137() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test137"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy9 = null;
    hu.bme.mit.swsv.ris.common.Direction direction10 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy9, direction10, sidetriple_neighborTSMInfo11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy8, direction10, sidetriple_neighborTSMInfo14, loggerWrapper15);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl16);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient18 = null;
    signalMapperImpl5.setMqClient(mQClient18);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient20 = null;
    signalMapperImpl5.setMqClient(mQClient20);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i23 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i24 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side25 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper26 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl27 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i23, sidetriple_i24, sidetriple_side25, loggerWrapper26);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient28 = null;
    signalMapperImpl27.setMqClient(mQClient28);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i31 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i32 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side33 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper34 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl35 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i31, sidetriple_i32, sidetriple_side33, loggerWrapper34);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy36 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy37 = null;
    hu.bme.mit.swsv.ris.common.Direction direction38 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo39 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper40 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl41 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy37, direction38, sidetriple_neighborTSMInfo39, loggerWrapper40);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo42 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper43 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl44 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy36, direction38, sidetriple_neighborTSMInfo42, loggerWrapper43);
    signalMapperImpl35.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl44);
    signalMapperImpl27.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl44);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy47 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy48 = null;
    hu.bme.mit.swsv.ris.common.Direction direction49 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo50 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper51 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl52 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy48, direction49, sidetriple_neighborTSMInfo50, loggerWrapper51);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo53 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper54 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl55 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy47, direction49, sidetriple_neighborTSMInfo53, loggerWrapper54);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i57 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i58 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side59 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper60 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl61 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i57, sidetriple_i58, sidetriple_side59, loggerWrapper60);
    safetyLogicImpl55.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl61);
    safetyLogicImpl44.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl61);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl44);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient65 = null;
    signalMapperImpl5.setMqClient(mQClient65);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMStatus> sidetriple_neighborTSMStatus67 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl5.sendStatus(sidetriple_neighborTSMStatus67);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction10 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction10.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction38 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction38.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction49 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction49.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test138() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test138"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.Direction direction7 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction7, sidetriple_neighborTSMInfo8, loggerWrapper9);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl10);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i13 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i13, sidetriple_i14, sidetriple_side15, loggerWrapper16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy19 = null;
    hu.bme.mit.swsv.ris.common.Direction direction20 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy19, direction20, sidetriple_neighborTSMInfo21, loggerWrapper22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo24 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper25 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl26 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy18, direction20, sidetriple_neighborTSMInfo24, loggerWrapper25);
    signalMapperImpl17.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    safetyLogicImpl26.disconnect();
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i31 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i32 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side33 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper34 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl35 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)97, sidetriple_i31, sidetriple_i32, sidetriple_side33, loggerWrapper34);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient36 = null;
    signalMapperImpl35.setMqClient(mQClient36);
    safetyLogicImpl26.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl35);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus41 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus44 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.Side side45 = hu.bme.mit.swsv.ris.common.Side.FACING;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal46 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(byte)10, (int)(byte)-1, neighborTSMStatus44, side45);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal47 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(97, (int)(byte)1, neighborTSMStatus41, side45);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus50 = null;
    hu.bme.mit.swsv.ris.common.Side side51 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal52 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)0, (int)(byte)100, neighborTSMStatus50, side51);
    java.util.Date date53 = heartBeatSignal52.getTimestamp();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus60 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.Side side61 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal62 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(10, (int)(short)1, neighborTSMStatus60, side61);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus67 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.Side side68 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal69 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(10, (int)(short)1, neighborTSMStatus67, side68);
    hu.bme.mit.swsv.ris.common.Side side70 = hu.bme.mit.swsv.ris.common.Side.FACING;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal71 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)100, 97, neighborTSMStatus67, side70);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal72 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)'4', (int)'#', neighborTSMStatus60, side70);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus75 = null;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus78 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus81 = null;
    hu.bme.mit.swsv.ris.common.Side side82 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal83 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus81, side82);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal84 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, (int)(short)100, neighborTSMStatus78, side82);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal85 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)1, (-1), neighborTSMStatus75, side82);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal86 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(1, 97, neighborTSMStatus60, side82);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl26.neighborStatusChanged(side45, date53, neighborTSMStatus60);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction20 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction20.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus41 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus41.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus44 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus44.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side45 + "' != '" + hu.bme.mit.swsv.ris.common.Side.FACING + "'", side45.equals(hu.bme.mit.swsv.ris.common.Side.FACING));
    org.junit.Assert.assertTrue("'" + side51 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side51.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date53);
    org.junit.Assert.assertTrue("'" + neighborTSMStatus60 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus60.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side61 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side61.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus67 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus67.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side68 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side68.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side70 + "' != '" + hu.bme.mit.swsv.ris.common.Side.FACING + "'", side70.equals(hu.bme.mit.swsv.ris.common.Side.FACING));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus78 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus78.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side82 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side82.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));

  }

  @Test
  public void test139() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test139"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy4 = null;
    hu.bme.mit.swsv.ris.common.Direction direction5 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy4, direction5, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction5, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal12 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction5);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal13 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)100, direction5);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction5, sidetriple_neighborTSMInfo14, loggerWrapper15);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus19 = null;
    hu.bme.mit.swsv.ris.common.Side side20 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal21 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)0, (int)(byte)100, neighborTSMStatus19, side20);
    java.util.Date date22 = heartBeatSignal21.getTimestamp();
    java.util.Date date23 = heartBeatSignal21.getTimestamp();
    hu.bme.mit.swsv.ris.common.Side side24 = heartBeatSignal21.getSenderSide();
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy28 = hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal29 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy28);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal30 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(short)0, sectionOccupancy28);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal31 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)0, sectionOccupancy28);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy32 = sectionOccupancySignal31.getSectionOccupancy();
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl16.sectionOccupancyChanged(side24, sectionOccupancy32);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction5 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction5.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side20 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side20.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date23);
    org.junit.Assert.assertTrue("'" + side24 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side24.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy28 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy28.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));
    org.junit.Assert.assertTrue("'" + sectionOccupancy32 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy32.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));

  }

  @Test
  public void test140() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test140"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.Direction direction7 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction7, sidetriple_neighborTSMInfo8, loggerWrapper9);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy12 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy13 = null;
    hu.bme.mit.swsv.ris.common.Direction direction14 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy13, direction14, sidetriple_neighborTSMInfo15, loggerWrapper16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo18 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper19 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl20 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy12, direction14, sidetriple_neighborTSMInfo18, loggerWrapper19);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i22 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i23 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side24 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper25 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl26 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i22, sidetriple_i23, sidetriple_side24, loggerWrapper25);
    safetyLogicImpl20.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl26);
    safetyLogicImpl20.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl20);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy30 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy31 = null;
    hu.bme.mit.swsv.ris.common.Direction direction32 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo33 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper34 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl35 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy31, direction32, sidetriple_neighborTSMInfo33, loggerWrapper34);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo36 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper37 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl38 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy30, direction32, sidetriple_neighborTSMInfo36, loggerWrapper37);
    safetyLogicImpl38.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl38);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy42 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy44 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy45 = null;
    hu.bme.mit.swsv.ris.common.Direction direction46 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo47 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper48 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl49 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy45, direction46, sidetriple_neighborTSMInfo47, loggerWrapper48);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo50 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper51 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl52 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy44, direction46, sidetriple_neighborTSMInfo50, loggerWrapper51);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal53 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(97, direction46);
    hu.bme.mit.swsv.ris.common.Direction direction54 = turnoutDirectionSignal53.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo55 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper56 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl57 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy42, direction54, sidetriple_neighborTSMInfo55, loggerWrapper56);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal58 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(short)10, direction54);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl38.turnoutDirectionChanged(direction54);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction14 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction14.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction32 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction32.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction46 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction46.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction54 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction54.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test141() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test141"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i9 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i9, sidetriple_i10, sidetriple_side11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.Direction direction16 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo17 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper18 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl19 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction16, sidetriple_neighborTSMInfo17, loggerWrapper18);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy14, direction16, sidetriple_neighborTSMInfo20, loggerWrapper21);
    signalMapperImpl13.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy25 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy26 = null;
    hu.bme.mit.swsv.ris.common.Direction direction27 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo28 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper29 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl30 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy26, direction27, sidetriple_neighborTSMInfo28, loggerWrapper29);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo31 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper32 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl33 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy25, direction27, sidetriple_neighborTSMInfo31, loggerWrapper32);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i35 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i36 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side37 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper38 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl39 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i35, sidetriple_i36, sidetriple_side37, loggerWrapper38);
    safetyLogicImpl33.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl39);
    safetyLogicImpl22.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl39);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy42 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy43 = null;
    hu.bme.mit.swsv.ris.common.Direction direction44 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo45 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper46 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl47 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy43, direction44, sidetriple_neighborTSMInfo45, loggerWrapper46);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo48 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper49 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl50 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy42, direction44, sidetriple_neighborTSMInfo48, loggerWrapper49);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i52 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i53 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side54 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper55 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl56 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)(-1), sidetriple_i52, sidetriple_i53, sidetriple_side54, loggerWrapper55);
    safetyLogicImpl50.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl56);
    safetyLogicImpl22.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl56);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionControl> sidetriple_sectionControl59 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl56.sendControl(sidetriple_sectionControl59);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction16 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction16.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction27 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction27.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction44 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction44.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test142() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test142"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)(-1), sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i9 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i9, sidetriple_i10, sidetriple_side11, loggerWrapper12);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient14 = null;
    signalMapperImpl13.setMqClient(mQClient14);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy16 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy17 = null;
    hu.bme.mit.swsv.ris.common.Direction direction18 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo19 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper20 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl21 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy17, direction18, sidetriple_neighborTSMInfo19, loggerWrapper20);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo22 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper23 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl24 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy16, direction18, sidetriple_neighborTSMInfo22, loggerWrapper23);
    signalMapperImpl13.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl24);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient26 = null;
    signalMapperImpl13.setMqClient(mQClient26);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy28 = null;
    hu.bme.mit.swsv.ris.common.Direction direction29 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo30 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper31 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl32 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy28, direction29, sidetriple_neighborTSMInfo30, loggerWrapper31);
    signalMapperImpl13.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl32);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl32);
    safetyLogicImpl32.disconnect();
    org.junit.Assert.assertTrue("'" + direction18 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction18.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction29 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction29.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test143() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test143"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy4 = null;
    hu.bme.mit.swsv.ris.common.Direction direction5 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy4, direction5, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction5, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal12 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(97, direction5);
    hu.bme.mit.swsv.ris.common.Direction direction13 = turnoutDirectionSignal12.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction13, sidetriple_neighborTSMInfo14, loggerWrapper15);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo17 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper18 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl19 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction13, sidetriple_neighborTSMInfo17, loggerWrapper18);
    safetyLogicImpl19.disconnect();
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy21 = null;
    hu.bme.mit.swsv.ris.common.Direction direction23 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal24 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)10, direction23);
    java.lang.String str25 = turnoutDirectionSignal24.toString();
    hu.bme.mit.swsv.ris.common.Direction direction26 = turnoutDirectionSignal24.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.Direction direction27 = turnoutDirectionSignal24.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo28 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper29 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl30 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy21, direction27, sidetriple_neighborTSMInfo28, loggerWrapper29);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl19.turnoutDirectionChanged(direction27);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction5 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction5.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction13 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction13.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction23 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction23.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"+ "'", str25.equals("TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"));
    org.junit.Assert.assertTrue("'" + direction26 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction26.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction27 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction27.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test144() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test144"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.Direction direction4 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal5 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)10, direction4);
    java.lang.String str6 = turnoutDirectionSignal5.toString();
    java.lang.String str7 = turnoutDirectionSignal5.toString();
    java.lang.Integer i8 = turnoutDirectionSignal5.getSenderId();
    hu.bme.mit.swsv.ris.common.Direction direction9 = turnoutDirectionSignal5.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.Direction direction10 = turnoutDirectionSignal5.getTurnoutDirection();
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal11 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)0, direction10);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal12 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)1, direction10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo13 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper14 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl15 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction10, sidetriple_neighborTSMInfo13, loggerWrapper14);
    safetyLogicImpl15.disconnect();
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i19 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i18, sidetriple_i19, sidetriple_side20, loggerWrapper21);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy23 = null;
    hu.bme.mit.swsv.ris.common.Direction direction24 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo25 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper26 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl27 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy23, direction24, sidetriple_neighborTSMInfo25, loggerWrapper26);
    signalMapperImpl22.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl27);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient29 = null;
    signalMapperImpl22.setMqClient(mQClient29);
    safetyLogicImpl15.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl22);
    org.junit.Assert.assertTrue("'" + direction4 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction4.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"+ "'", str6.equals("TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"+ "'", str7.equals("TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i8 + "' != '" + 10+ "'", i8.equals(10));
    org.junit.Assert.assertTrue("'" + direction9 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction9.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction10 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction10.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction24 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction24.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test145() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test145"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)(-1), sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i9 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i9, sidetriple_i10, sidetriple_side11, loggerWrapper12);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient14 = null;
    signalMapperImpl13.setMqClient(mQClient14);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy16 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy17 = null;
    hu.bme.mit.swsv.ris.common.Direction direction18 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo19 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper20 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl21 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy17, direction18, sidetriple_neighborTSMInfo19, loggerWrapper20);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo22 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper23 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl24 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy16, direction18, sidetriple_neighborTSMInfo22, loggerWrapper23);
    signalMapperImpl13.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl24);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient26 = null;
    signalMapperImpl13.setMqClient(mQClient26);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy28 = null;
    hu.bme.mit.swsv.ris.common.Direction direction29 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo30 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper31 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl32 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy28, direction29, sidetriple_neighborTSMInfo30, loggerWrapper31);
    signalMapperImpl13.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl32);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl32);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i36 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i37 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side38 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper39 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl40 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i36, sidetriple_i37, sidetriple_side38, loggerWrapper39);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy41 = null;
    hu.bme.mit.swsv.ris.common.Direction direction42 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo43 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper44 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl45 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy41, direction42, sidetriple_neighborTSMInfo43, loggerWrapper44);
    signalMapperImpl40.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl45);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i48 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i49 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side50 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper51 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl52 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i48, sidetriple_i49, sidetriple_side50, loggerWrapper51);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy53 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy54 = null;
    hu.bme.mit.swsv.ris.common.Direction direction55 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo56 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper57 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl58 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy54, direction55, sidetriple_neighborTSMInfo56, loggerWrapper57);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo59 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper60 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl61 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy53, direction55, sidetriple_neighborTSMInfo59, loggerWrapper60);
    signalMapperImpl52.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl61);
    signalMapperImpl40.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl61);
    safetyLogicImpl32.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl40);
    org.junit.Assert.assertTrue("'" + direction18 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction18.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction29 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction29.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction42 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction42.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction55 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction55.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test146() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test146"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.Direction direction4 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo5 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper6 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl7 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction4, sidetriple_neighborTSMInfo5, loggerWrapper6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction4, sidetriple_neighborTSMInfo8, loggerWrapper9);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction4, sidetriple_neighborTSMInfo11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction4, sidetriple_neighborTSMInfo14, loggerWrapper15);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i19 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i18, sidetriple_i19, sidetriple_side20, loggerWrapper21);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient23 = null;
    signalMapperImpl22.setMqClient(mQClient23);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i26 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i27 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side28 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper29 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl30 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i26, sidetriple_i27, sidetriple_side28, loggerWrapper29);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy31 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy32 = null;
    hu.bme.mit.swsv.ris.common.Direction direction33 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo34 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper35 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl36 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy32, direction33, sidetriple_neighborTSMInfo34, loggerWrapper35);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo37 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper38 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl39 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy31, direction33, sidetriple_neighborTSMInfo37, loggerWrapper38);
    signalMapperImpl30.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl39);
    signalMapperImpl22.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl39);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy42 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy43 = null;
    hu.bme.mit.swsv.ris.common.Direction direction44 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo45 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper46 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl47 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy43, direction44, sidetriple_neighborTSMInfo45, loggerWrapper46);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo48 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper49 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl50 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy42, direction44, sidetriple_neighborTSMInfo48, loggerWrapper49);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i52 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i53 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side54 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper55 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl56 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i52, sidetriple_i53, sidetriple_side54, loggerWrapper55);
    safetyLogicImpl50.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl56);
    safetyLogicImpl39.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl56);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy59 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy61 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy62 = null;
    hu.bme.mit.swsv.ris.common.Direction direction63 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo64 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper65 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl66 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy62, direction63, sidetriple_neighborTSMInfo64, loggerWrapper65);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo67 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper68 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl69 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy61, direction63, sidetriple_neighborTSMInfo67, loggerWrapper68);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal70 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(97, direction63);
    hu.bme.mit.swsv.ris.common.Direction direction71 = turnoutDirectionSignal70.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo72 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper73 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl74 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy59, direction71, sidetriple_neighborTSMInfo72, loggerWrapper73);
    signalMapperImpl56.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl74);
    safetyLogicImpl16.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl56);
    org.junit.Assert.assertTrue("'" + direction4 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction4.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction33 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction33.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction44 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction44.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction63 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction63.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction71 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction71.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test147() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test147"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy5 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.Direction direction7 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction7, sidetriple_neighborTSMInfo8, loggerWrapper9);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy5, direction7, sidetriple_neighborTSMInfo11, loggerWrapper12);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal14 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction7);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal15 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)100, direction7);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo16 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper17 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl18 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction7, sidetriple_neighborTSMInfo16, loggerWrapper17);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal19 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(short)-1, direction7);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal20 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)100, direction7);
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test148() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test148"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy4 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy5 = null;
    hu.bme.mit.swsv.ris.common.Direction direction6 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo7 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper8 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl9 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy5, direction6, sidetriple_neighborTSMInfo7, loggerWrapper8);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo10 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper11 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl12 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy4, direction6, sidetriple_neighborTSMInfo10, loggerWrapper11);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal13 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(97, direction6);
    hu.bme.mit.swsv.ris.common.Direction direction14 = turnoutDirectionSignal13.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction14, sidetriple_neighborTSMInfo15, loggerWrapper16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo18 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper19 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl20 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction14, sidetriple_neighborTSMInfo18, loggerWrapper19);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal21 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((-1), direction14);
    hu.bme.mit.swsv.ris.common.Direction direction22 = turnoutDirectionSignal21.getTurnoutDirection();
    org.junit.Assert.assertTrue("'" + direction6 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction6.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction14 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction14.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction22 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction22.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test149() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test149"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.Direction direction2 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction2, sidetriple_neighborTSMInfo3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction2, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i11 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i10, sidetriple_i11, sidetriple_side12, loggerWrapper13);
    safetyLogicImpl8.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl14);
    safetyLogicImpl8.disconnect();
    safetyLogicImpl8.disconnect();
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i19 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i20 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i19, sidetriple_i20, sidetriple_side21, loggerWrapper22);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient24 = null;
    signalMapperImpl23.setMqClient(mQClient24);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i27 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i28 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side29 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper30 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl31 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i27, sidetriple_i28, sidetriple_side29, loggerWrapper30);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy32 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy33 = null;
    hu.bme.mit.swsv.ris.common.Direction direction34 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo35 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper36 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl37 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy33, direction34, sidetriple_neighborTSMInfo35, loggerWrapper36);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo38 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper39 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl40 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy32, direction34, sidetriple_neighborTSMInfo38, loggerWrapper39);
    signalMapperImpl31.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl40);
    signalMapperImpl23.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl40);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy43 = null;
    hu.bme.mit.swsv.ris.common.Direction direction44 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo45 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper46 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl47 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy43, direction44, sidetriple_neighborTSMInfo45, loggerWrapper46);
    signalMapperImpl23.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl47);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient49 = null;
    signalMapperImpl23.setMqClient(mQClient49);
    safetyLogicImpl8.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl23);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus56 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus59 = null;
    hu.bme.mit.swsv.ris.common.Side side60 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal61 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus59, side60);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal62 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, (int)(short)100, neighborTSMStatus56, side60);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus65 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.Side side66 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal67 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(10, (int)(short)1, neighborTSMStatus65, side66);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal68 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)100, 10, neighborTSMStatus56, side66);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy74 = hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal75 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy74);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal76 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(short)100, sectionOccupancy74);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal77 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy74);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy78 = sectionOccupancySignal77.getSectionOccupancy();
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal79 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal(100, sectionOccupancy78);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy80 = sectionOccupancySignal79.getSectionOccupancy();
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal81 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(short)100, sectionOccupancy80);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl8.sectionOccupancyChanged(side66, sectionOccupancy80);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction2 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction2.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction34 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction34.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction44 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction44.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus56 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus56.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side60 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side60.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus65 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus65.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side66 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side66.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy74 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy74.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));
    org.junit.Assert.assertTrue("'" + sectionOccupancy78 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy78.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));
    org.junit.Assert.assertTrue("'" + sectionOccupancy80 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy80.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));

  }

  @Test
  public void test150() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test150"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.Direction direction2 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction2, sidetriple_neighborTSMInfo3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction2, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i11 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i10, sidetriple_i11, sidetriple_side12, loggerWrapper13);
    safetyLogicImpl8.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl14);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus18 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus21 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus24 = null;
    hu.bme.mit.swsv.ris.common.Side side25 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal26 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus24, side25);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal27 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, (int)(short)100, neighborTSMStatus21, side25);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal28 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)'#', 10, neighborTSMStatus18, side25);
    hu.bme.mit.swsv.ris.common.Side side29 = heartBeatSignal28.getSenderSide();
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy31 = hu.bme.mit.swsv.ris.common.SectionOccupancy.OCCUPIED;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal32 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal(10, sectionOccupancy31);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl8.sectionOccupancyChanged(side29, sectionOccupancy31);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction2 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction2.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus18 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED + "'", neighborTSMStatus18.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus21 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus21.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side25 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side25.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side29 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side29.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy31 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.OCCUPIED + "'", sectionOccupancy31.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.OCCUPIED));

  }

  @Test
  public void test151() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test151"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.Direction direction2 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal3 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)10, direction2);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo4 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper5 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl6 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction2, sidetriple_neighborTSMInfo4, loggerWrapper5);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus9 = null;
    hu.bme.mit.swsv.ris.common.Side side10 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal11 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus9, side10);
    hu.bme.mit.swsv.ris.common.Side side12 = heartBeatSignal11.getSenderSide();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus13 = heartBeatSignal11.getStatus();
    java.lang.Integer i14 = heartBeatSignal11.getTargetId();
    java.lang.Integer i15 = heartBeatSignal11.getTargetId();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus16 = heartBeatSignal11.getStatus();
    hu.bme.mit.swsv.ris.common.Side side17 = heartBeatSignal11.getSenderSide();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus20 = null;
    hu.bme.mit.swsv.ris.common.Side side21 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal22 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus20, side21);
    hu.bme.mit.swsv.ris.common.Side side23 = heartBeatSignal22.getSenderSide();
    java.util.Date date24 = heartBeatSignal22.getTimestamp();
    java.util.Date date25 = heartBeatSignal22.getTimestamp();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus32 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus35 = null;
    hu.bme.mit.swsv.ris.common.Side side36 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal37 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus35, side36);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal38 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, (int)(short)100, neighborTSMStatus32, side36);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus41 = null;
    hu.bme.mit.swsv.ris.common.Side side42 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal43 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus41, side42);
    hu.bme.mit.swsv.ris.common.Side side44 = heartBeatSignal43.getSenderSide();
    java.lang.Integer i45 = heartBeatSignal43.getTargetId();
    java.lang.Integer i46 = heartBeatSignal43.getSenderId();
    java.lang.String str47 = heartBeatSignal43.toString();
    hu.bme.mit.swsv.ris.common.Side side48 = heartBeatSignal43.getSenderSide();
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal49 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)0, (int)(short)0, neighborTSMStatus32, side48);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus50 = heartBeatSignal49.getStatus();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus53 = null;
    hu.bme.mit.swsv.ris.common.Side side54 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal55 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus53, side54);
    hu.bme.mit.swsv.ris.common.Side side56 = heartBeatSignal55.getSenderSide();
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal57 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(0, 0, neighborTSMStatus50, side56);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl6.neighborStatusChanged(side17, date25, neighborTSMStatus50);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction2 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction2.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side10 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side10.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side12 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side12.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(neighborTSMStatus13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i14 + "' != '" + 100+ "'", i14.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i15 + "' != '" + 100+ "'", i15.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(neighborTSMStatus16);
    org.junit.Assert.assertTrue("'" + side17 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side17.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side21 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side21.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side23 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side23.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date25);
    org.junit.Assert.assertTrue("'" + neighborTSMStatus32 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus32.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side36 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side36.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side42 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side42.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side44 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side44.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i45 + "' != '" + 100+ "'", i45.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i46 + "' != '" + (-1)+ "'", i46.equals((-1)));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str47 + "' != '" + "HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:47 CET 2016)"+ "'", str47.equals("HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:47 CET 2016)"));
    org.junit.Assert.assertTrue("'" + side48 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side48.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus50 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus50.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side54 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side54.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side56 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side56.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));

  }

  @Test
  public void test152() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test152"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.Direction direction1 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo2 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper3 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl4 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction1, sidetriple_neighborTSMInfo2, loggerWrapper3);
    hu.bme.mit.swsv.ris.tsm.SignalMapper signalMapper5 = null;
    safetyLogicImpl4.setSignalMapper(signalMapper5);
    hu.bme.mit.swsv.ris.common.Direction direction8 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal9 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)10, direction8);
    java.lang.String str10 = turnoutDirectionSignal9.toString();
    java.lang.String str11 = turnoutDirectionSignal9.toString();
    java.lang.Integer i12 = turnoutDirectionSignal9.getSenderId();
    hu.bme.mit.swsv.ris.common.Direction direction13 = turnoutDirectionSignal9.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.Direction direction14 = turnoutDirectionSignal9.getTurnoutDirection();
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl4.turnoutDirectionChanged(direction14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction1 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction1.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction8 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction8.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"+ "'", str10.equals("TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"+ "'", str11.equals("TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i12 + "' != '" + 10+ "'", i12.equals(10));
    org.junit.Assert.assertTrue("'" + direction13 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction13.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction14 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction14.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test153() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test153"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy4 = null;
    hu.bme.mit.swsv.ris.common.Direction direction5 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy4, direction5, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction5, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal12 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction5);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal13 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)100, direction5);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction5, sidetriple_neighborTSMInfo14, loggerWrapper15);
    safetyLogicImpl16.disconnect();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus20 = null;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus23 = null;
    hu.bme.mit.swsv.ris.common.Side side24 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal25 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus23, side24);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal26 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(byte)100, (int)(byte)-1, neighborTSMStatus20, side24);
    java.lang.String str27 = heartBeatSignal26.toString();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus28 = heartBeatSignal26.getStatus();
    java.lang.String str29 = heartBeatSignal26.toString();
    hu.bme.mit.swsv.ris.common.Side side30 = heartBeatSignal26.getSenderSide();
    hu.bme.mit.swsv.ris.common.Side side31 = heartBeatSignal26.getSenderSide();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus36 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus39 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus42 = null;
    hu.bme.mit.swsv.ris.common.Side side43 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal44 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus42, side43);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal45 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, (int)(short)100, neighborTSMStatus39, side43);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal46 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)'#', 10, neighborTSMStatus36, side43);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus49 = null;
    hu.bme.mit.swsv.ris.common.Side side50 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal51 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus49, side50);
    hu.bme.mit.swsv.ris.common.Side side52 = heartBeatSignal51.getSenderSide();
    java.lang.Integer i53 = heartBeatSignal51.getTargetId();
    java.lang.Integer i54 = heartBeatSignal51.getSenderId();
    java.lang.String str55 = heartBeatSignal51.toString();
    hu.bme.mit.swsv.ris.common.Side side56 = heartBeatSignal51.getSenderSide();
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal57 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(byte)1, 0, neighborTSMStatus36, side56);
    java.util.Date date58 = heartBeatSignal57.getTimestamp();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus63 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus66 = null;
    hu.bme.mit.swsv.ris.common.Side side67 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal68 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus66, side67);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal69 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, (int)(short)100, neighborTSMStatus63, side67);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus72 = null;
    hu.bme.mit.swsv.ris.common.Side side73 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal74 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus72, side73);
    hu.bme.mit.swsv.ris.common.Side side75 = heartBeatSignal74.getSenderSide();
    java.lang.Integer i76 = heartBeatSignal74.getTargetId();
    java.lang.Integer i77 = heartBeatSignal74.getSenderId();
    java.lang.String str78 = heartBeatSignal74.toString();
    hu.bme.mit.swsv.ris.common.Side side79 = heartBeatSignal74.getSenderSide();
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal80 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)0, (int)(short)0, neighborTSMStatus63, side79);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus81 = heartBeatSignal80.getStatus();
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl16.neighborStatusChanged(side31, date58, neighborTSMStatus81);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction5 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction5.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side24 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side24.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "HeartBeatSignal(sender: 100 (STRAIGHT), target: -1, status: null, timestamp: Thu Dec 01 10:44:47 CET 2016)"+ "'", str27.equals("HeartBeatSignal(sender: 100 (STRAIGHT), target: -1, status: null, timestamp: Thu Dec 01 10:44:47 CET 2016)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(neighborTSMStatus28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "HeartBeatSignal(sender: 100 (STRAIGHT), target: -1, status: null, timestamp: Thu Dec 01 10:44:47 CET 2016)"+ "'", str29.equals("HeartBeatSignal(sender: 100 (STRAIGHT), target: -1, status: null, timestamp: Thu Dec 01 10:44:47 CET 2016)"));
    org.junit.Assert.assertTrue("'" + side30 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side30.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side31 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side31.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus36 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED + "'", neighborTSMStatus36.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus39 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus39.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side43 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side43.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side50 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side50.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side52 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side52.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i53 + "' != '" + 100+ "'", i53.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i54 + "' != '" + (-1)+ "'", i54.equals((-1)));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str55 + "' != '" + "HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:47 CET 2016)"+ "'", str55.equals("HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:47 CET 2016)"));
    org.junit.Assert.assertTrue("'" + side56 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side56.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date58);
    org.junit.Assert.assertTrue("'" + neighborTSMStatus63 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus63.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side67 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side67.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side73 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side73.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side75 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side75.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i76 + "' != '" + 100+ "'", i76.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i77 + "' != '" + (-1)+ "'", i77.equals((-1)));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str78 + "' != '" + "HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:47 CET 2016)"+ "'", str78.equals("HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:47 CET 2016)"));
    org.junit.Assert.assertTrue("'" + side79 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side79.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus81 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus81.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));

  }

  @Test
  public void test154() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test154"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy9 = null;
    hu.bme.mit.swsv.ris.common.Direction direction10 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy9, direction10, sidetriple_neighborTSMInfo11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy8, direction10, sidetriple_neighborTSMInfo14, loggerWrapper15);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMStatus> sidetriple_neighborTSMStatus18 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl5.sendStatus(sidetriple_neighborTSMStatus18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction10 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction10.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test155() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test155"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy4 = null;
    hu.bme.mit.swsv.ris.common.Direction direction5 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy4, direction5, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction5, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal12 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction5);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal13 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)-1, direction5);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction5, sidetriple_neighborTSMInfo14, loggerWrapper15);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus19 = null;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus22 = null;
    hu.bme.mit.swsv.ris.common.Side side23 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal24 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus22, side23);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal25 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(byte)100, (int)(byte)-1, neighborTSMStatus19, side23);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy30 = hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal31 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy30);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal32 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(short)100, sectionOccupancy30);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal33 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal(100, sectionOccupancy30);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal34 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)'#', sectionOccupancy30);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl16.sectionOccupancyChanged(side23, sectionOccupancy30);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction5 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction5.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side23 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side23.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy30 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy30.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));

  }

  @Test
  public void test156() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test156"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy4 = null;
    hu.bme.mit.swsv.ris.common.Direction direction5 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy4, direction5, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction5, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal12 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(97, direction5);
    hu.bme.mit.swsv.ris.common.Direction direction13 = turnoutDirectionSignal12.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction13, sidetriple_neighborTSMInfo14, loggerWrapper15);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo17 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper18 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl19 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction13, sidetriple_neighborTSMInfo17, loggerWrapper18);
    safetyLogicImpl19.disconnect();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus23 = null;
    hu.bme.mit.swsv.ris.common.Side side24 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal25 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus23, side24);
    hu.bme.mit.swsv.ris.common.Side side26 = heartBeatSignal25.getSenderSide();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus27 = heartBeatSignal25.getStatus();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus28 = heartBeatSignal25.getStatus();
    java.util.Date date29 = heartBeatSignal25.getTimestamp();
    java.util.Date date30 = heartBeatSignal25.getTimestamp();
    hu.bme.mit.swsv.ris.common.Side side31 = heartBeatSignal25.getSenderSide();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus34 = null;
    hu.bme.mit.swsv.ris.common.Side side35 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal36 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus34, side35);
    hu.bme.mit.swsv.ris.common.Side side37 = heartBeatSignal36.getSenderSide();
    java.lang.Integer i38 = heartBeatSignal36.getTargetId();
    java.lang.Integer i39 = heartBeatSignal36.getSenderId();
    java.lang.String str40 = heartBeatSignal36.toString();
    hu.bme.mit.swsv.ris.common.Side side41 = heartBeatSignal36.getSenderSide();
    java.util.Date date42 = heartBeatSignal36.getTimestamp();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus45 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus48 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus51 = null;
    hu.bme.mit.swsv.ris.common.Side side52 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal53 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus51, side52);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal54 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, (int)(short)100, neighborTSMStatus48, side52);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal55 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)'#', 10, neighborTSMStatus45, side52);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl19.neighborStatusChanged(side31, date42, neighborTSMStatus45);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction5 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction5.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction13 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction13.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side24 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side24.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side26 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side26.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(neighborTSMStatus27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(neighborTSMStatus28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date30);
    org.junit.Assert.assertTrue("'" + side31 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side31.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side35 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side35.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side37 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side37.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i38 + "' != '" + 100+ "'", i38.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i39 + "' != '" + (-1)+ "'", i39.equals((-1)));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:47 CET 2016)"+ "'", str40.equals("HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:47 CET 2016)"));
    org.junit.Assert.assertTrue("'" + side41 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side41.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date42);
    org.junit.Assert.assertTrue("'" + neighborTSMStatus45 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED + "'", neighborTSMStatus45.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus48 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus48.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side52 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side52.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));

  }

  @Test
  public void test157() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test157"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.Direction direction4 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo5 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper6 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl7 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction4, sidetriple_neighborTSMInfo5, loggerWrapper6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction4, sidetriple_neighborTSMInfo8, loggerWrapper9);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal11 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction4, sidetriple_neighborTSMInfo12, loggerWrapper13);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy16 = null;
    hu.bme.mit.swsv.ris.common.Direction direction17 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo18 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper19 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl20 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy16, direction17, sidetriple_neighborTSMInfo18, loggerWrapper19);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction17, sidetriple_neighborTSMInfo21, loggerWrapper22);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i25 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i26 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side27 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper28 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl29 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i25, sidetriple_i26, sidetriple_side27, loggerWrapper28);
    safetyLogicImpl23.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl29);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy31 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy33 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy34 = null;
    hu.bme.mit.swsv.ris.common.Direction direction35 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo36 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper37 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl38 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy34, direction35, sidetriple_neighborTSMInfo36, loggerWrapper37);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo39 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper40 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl41 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy33, direction35, sidetriple_neighborTSMInfo39, loggerWrapper40);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal42 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction35);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo43 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper44 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl45 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy31, direction35, sidetriple_neighborTSMInfo43, loggerWrapper44);
    safetyLogicImpl45.disconnect();
    signalMapperImpl29.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl45);
    safetyLogicImpl14.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl29);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient49 = null;
    signalMapperImpl29.setMqClient(mQClient49);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy51 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy52 = null;
    hu.bme.mit.swsv.ris.common.Direction direction53 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo54 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper55 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl56 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy52, direction53, sidetriple_neighborTSMInfo54, loggerWrapper55);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo57 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper58 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl59 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy51, direction53, sidetriple_neighborTSMInfo57, loggerWrapper58);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i61 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i62 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side63 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper64 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl65 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)(-1), sidetriple_i61, sidetriple_i62, sidetriple_side63, loggerWrapper64);
    safetyLogicImpl59.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl65);
    safetyLogicImpl59.disconnect();
    signalMapperImpl29.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl59);
    org.junit.Assert.assertTrue("'" + direction4 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction4.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction17 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction17.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction35 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction35.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction53 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction53.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test158() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test158"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)10, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i7 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i7, sidetriple_i8, sidetriple_side9, loggerWrapper10);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient12 = null;
    signalMapperImpl11.setMqClient(mQClient12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.Direction direction16 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo17 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper18 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl19 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction16, sidetriple_neighborTSMInfo17, loggerWrapper18);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy14, direction16, sidetriple_neighborTSMInfo20, loggerWrapper21);
    signalMapperImpl11.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient24 = null;
    signalMapperImpl11.setMqClient(mQClient24);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i27 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i28 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side29 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper30 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl31 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i27, sidetriple_i28, sidetriple_side29, loggerWrapper30);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy32 = null;
    hu.bme.mit.swsv.ris.common.Direction direction33 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo34 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper35 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl36 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy32, direction33, sidetriple_neighborTSMInfo34, loggerWrapper35);
    signalMapperImpl31.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl36);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i39 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i40 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side41 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper42 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl43 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i39, sidetriple_i40, sidetriple_side41, loggerWrapper42);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy44 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy45 = null;
    hu.bme.mit.swsv.ris.common.Direction direction46 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo47 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper48 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl49 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy45, direction46, sidetriple_neighborTSMInfo47, loggerWrapper48);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo50 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper51 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl52 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy44, direction46, sidetriple_neighborTSMInfo50, loggerWrapper51);
    signalMapperImpl43.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl52);
    signalMapperImpl31.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl52);
    safetyLogicImpl52.disconnect();
    signalMapperImpl11.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl52);
    safetyLogicImpl52.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl52);
    org.junit.Assert.assertTrue("'" + direction16 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction16.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction33 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction33.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction46 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction46.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test159() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test159"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i9 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i9, sidetriple_i10, sidetriple_side11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.Direction direction16 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo17 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper18 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl19 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction16, sidetriple_neighborTSMInfo17, loggerWrapper18);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy14, direction16, sidetriple_neighborTSMInfo20, loggerWrapper21);
    signalMapperImpl13.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMStatus> sidetriple_neighborTSMStatus25 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl5.sendStatus(sidetriple_neighborTSMStatus25);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction16 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction16.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test160() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test160"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.Direction direction7 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction7, sidetriple_neighborTSMInfo8, loggerWrapper9);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl10);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i13 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i13, sidetriple_i14, sidetriple_side15, loggerWrapper16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy19 = null;
    hu.bme.mit.swsv.ris.common.Direction direction20 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy19, direction20, sidetriple_neighborTSMInfo21, loggerWrapper22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo24 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper25 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl26 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy18, direction20, sidetriple_neighborTSMInfo24, loggerWrapper25);
    signalMapperImpl17.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    safetyLogicImpl26.disconnect();
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i31 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i32 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side33 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper34 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl35 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)97, sidetriple_i31, sidetriple_i32, sidetriple_side33, loggerWrapper34);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient36 = null;
    signalMapperImpl35.setMqClient(mQClient36);
    safetyLogicImpl26.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl35);
    hu.bme.mit.swsv.ris.common.Direction direction40 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal41 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)10, direction40);
    java.lang.String str42 = turnoutDirectionSignal41.toString();
    hu.bme.mit.swsv.ris.common.Direction direction43 = turnoutDirectionSignal41.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.Direction direction44 = turnoutDirectionSignal41.getTurnoutDirection();
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl26.turnoutDirectionChanged(direction44);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction20 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction20.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction40 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction40.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"+ "'", str42.equals("TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"));
    org.junit.Assert.assertTrue("'" + direction43 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction43.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction44 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction44.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test161() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test161"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.Direction direction2 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction2, sidetriple_neighborTSMInfo3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction2, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i11 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i10, sidetriple_i11, sidetriple_side12, loggerWrapper13);
    safetyLogicImpl8.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl14);
    safetyLogicImpl8.disconnect();
    safetyLogicImpl8.disconnect();
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i19 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i20 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i19, sidetriple_i20, sidetriple_side21, loggerWrapper22);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient24 = null;
    signalMapperImpl23.setMqClient(mQClient24);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i27 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i28 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side29 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper30 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl31 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i27, sidetriple_i28, sidetriple_side29, loggerWrapper30);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy32 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy33 = null;
    hu.bme.mit.swsv.ris.common.Direction direction34 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo35 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper36 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl37 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy33, direction34, sidetriple_neighborTSMInfo35, loggerWrapper36);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo38 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper39 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl40 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy32, direction34, sidetriple_neighborTSMInfo38, loggerWrapper39);
    signalMapperImpl31.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl40);
    signalMapperImpl23.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl40);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy43 = null;
    hu.bme.mit.swsv.ris.common.Direction direction44 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo45 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper46 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl47 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy43, direction44, sidetriple_neighborTSMInfo45, loggerWrapper46);
    signalMapperImpl23.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl47);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient49 = null;
    signalMapperImpl23.setMqClient(mQClient49);
    safetyLogicImpl8.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl23);
    safetyLogicImpl8.disconnect();
    org.junit.Assert.assertTrue("'" + direction2 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction2.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction34 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction34.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction44 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction44.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test162() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test162"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.Direction direction2 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction2, sidetriple_neighborTSMInfo3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction2, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i11 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i10, sidetriple_i11, sidetriple_side12, loggerWrapper13);
    safetyLogicImpl8.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl14);
    safetyLogicImpl8.disconnect();
    safetyLogicImpl8.disconnect();
    safetyLogicImpl8.disconnect();
    safetyLogicImpl8.disconnect();
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy20 = null;
    hu.bme.mit.swsv.ris.common.Direction direction21 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo22 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper23 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl24 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy20, direction21, sidetriple_neighborTSMInfo22, loggerWrapper23);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl8.turnoutDirectionChanged(direction21);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction2 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction2.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction21 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction21.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test163() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test163"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.Direction direction4 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo5 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper6 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl7 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction4, sidetriple_neighborTSMInfo5, loggerWrapper6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction4, sidetriple_neighborTSMInfo8, loggerWrapper9);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal11 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction4, sidetriple_neighborTSMInfo12, loggerWrapper13);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy16 = null;
    hu.bme.mit.swsv.ris.common.Direction direction17 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo18 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper19 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl20 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy16, direction17, sidetriple_neighborTSMInfo18, loggerWrapper19);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction17, sidetriple_neighborTSMInfo21, loggerWrapper22);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i25 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i26 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side27 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper28 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl29 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i25, sidetriple_i26, sidetriple_side27, loggerWrapper28);
    safetyLogicImpl23.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl29);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy31 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy33 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy34 = null;
    hu.bme.mit.swsv.ris.common.Direction direction35 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo36 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper37 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl38 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy34, direction35, sidetriple_neighborTSMInfo36, loggerWrapper37);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo39 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper40 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl41 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy33, direction35, sidetriple_neighborTSMInfo39, loggerWrapper40);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal42 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction35);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo43 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper44 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl45 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy31, direction35, sidetriple_neighborTSMInfo43, loggerWrapper44);
    safetyLogicImpl45.disconnect();
    signalMapperImpl29.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl45);
    safetyLogicImpl14.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl29);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient49 = null;
    signalMapperImpl29.setMqClient(mQClient49);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient51 = null;
    signalMapperImpl29.setMqClient(mQClient51);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i54 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i55 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side56 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper57 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl58 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i54, sidetriple_i55, sidetriple_side56, loggerWrapper57);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient59 = null;
    signalMapperImpl58.setMqClient(mQClient59);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i62 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i63 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side64 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper65 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl66 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i62, sidetriple_i63, sidetriple_side64, loggerWrapper65);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy67 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy68 = null;
    hu.bme.mit.swsv.ris.common.Direction direction69 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo70 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper71 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl72 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy68, direction69, sidetriple_neighborTSMInfo70, loggerWrapper71);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo73 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper74 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl75 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy67, direction69, sidetriple_neighborTSMInfo73, loggerWrapper74);
    signalMapperImpl66.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl75);
    signalMapperImpl58.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl75);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy78 = null;
    hu.bme.mit.swsv.ris.common.Direction direction79 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo80 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper81 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl82 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy78, direction79, sidetriple_neighborTSMInfo80, loggerWrapper81);
    signalMapperImpl58.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl82);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy84 = null;
    hu.bme.mit.swsv.ris.common.Direction direction85 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo86 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper87 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl88 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy84, direction85, sidetriple_neighborTSMInfo86, loggerWrapper87);
    hu.bme.mit.swsv.ris.tsm.SignalMapper signalMapper89 = null;
    safetyLogicImpl88.setSignalMapper(signalMapper89);
    signalMapperImpl58.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl88);
    signalMapperImpl29.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl88);
    hu.bme.mit.swsv.ris.tsm.SignalMapper signalMapper93 = null;
    safetyLogicImpl88.setSignalMapper(signalMapper93);
    org.junit.Assert.assertTrue("'" + direction4 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction4.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction17 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction17.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction35 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction35.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction69 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction69.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction79 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction79.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction85 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction85.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test164() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test164"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.Direction direction3 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo4 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper5 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl6 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction3, sidetriple_neighborTSMInfo4, loggerWrapper5);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo7 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper8 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl9 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction3, sidetriple_neighborTSMInfo7, loggerWrapper8);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal10 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(97, direction3);
    hu.bme.mit.swsv.ris.common.Direction direction11 = turnoutDirectionSignal10.getTurnoutDirection();
    java.lang.String str12 = turnoutDirectionSignal10.toString();
    org.junit.Assert.assertTrue("'" + direction3 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction3.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction11 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction11.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "TurnoutDirectionSignal(sender: 97, direction: DIVERGENT)"+ "'", str12.equals("TurnoutDirectionSignal(sender: 97, direction: DIVERGENT)"));

  }

  @Test
  public void test165() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test165"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i9 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i9, sidetriple_i10, sidetriple_side11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.Direction direction16 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo17 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper18 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl19 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction16, sidetriple_neighborTSMInfo17, loggerWrapper18);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy14, direction16, sidetriple_neighborTSMInfo20, loggerWrapper21);
    signalMapperImpl13.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus27 = null;
    hu.bme.mit.swsv.ris.common.Side side28 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal29 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)0, (int)(byte)100, neighborTSMStatus27, side28);
    java.util.Date date30 = heartBeatSignal29.getTimestamp();
    hu.bme.mit.swsv.ris.common.Side side31 = heartBeatSignal29.getSenderSide();
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy35 = hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal36 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy35);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal37 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(short)100, sectionOccupancy35);
    java.lang.String str38 = sectionOccupancySignal37.toString();
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy39 = sectionOccupancySignal37.getSectionOccupancy();
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal40 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal(100, sectionOccupancy39);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl22.sectionOccupancyChanged(side31, sectionOccupancy39);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction16 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction16.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side28 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side28.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date30);
    org.junit.Assert.assertTrue("'" + side31 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side31.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy35 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy35.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "SectionOccupancySignal(sender: 100, occupancy: FREE)"+ "'", str38.equals("SectionOccupancySignal(sender: 100, occupancy: FREE)"));
    org.junit.Assert.assertTrue("'" + sectionOccupancy39 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy39.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));

  }

  @Test
  public void test166() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test166"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy11 = null;
    hu.bme.mit.swsv.ris.common.Direction direction12 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo13 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper14 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl15 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy11, direction12, sidetriple_neighborTSMInfo13, loggerWrapper14);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo16 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper17 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl18 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy10, direction12, sidetriple_neighborTSMInfo16, loggerWrapper17);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal19 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy8, direction12, sidetriple_neighborTSMInfo20, loggerWrapper21);
    safetyLogicImpl22.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.Direction direction26 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal27 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)10, direction26);
    java.lang.String str28 = turnoutDirectionSignal27.toString();
    hu.bme.mit.swsv.ris.common.Direction direction29 = turnoutDirectionSignal27.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.Direction direction30 = turnoutDirectionSignal27.getTurnoutDirection();
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl22.turnoutDirectionChanged(direction30);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction12 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction12.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction26 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction26.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"+ "'", str28.equals("TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"));
    org.junit.Assert.assertTrue("'" + direction29 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction29.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction30 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction30.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test167() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test167"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)97, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient8 = null;
    signalMapperImpl5.setMqClient(mQClient8);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient10 = null;
    signalMapperImpl5.setMqClient(mQClient10);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i13 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i13, sidetriple_i14, sidetriple_side15, loggerWrapper16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy18 = null;
    hu.bme.mit.swsv.ris.common.Direction direction19 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy18, direction19, sidetriple_neighborTSMInfo20, loggerWrapper21);
    signalMapperImpl17.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i25 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i26 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side27 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper28 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl29 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i25, sidetriple_i26, sidetriple_side27, loggerWrapper28);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy30 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy31 = null;
    hu.bme.mit.swsv.ris.common.Direction direction32 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo33 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper34 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl35 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy31, direction32, sidetriple_neighborTSMInfo33, loggerWrapper34);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo36 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper37 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl38 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy30, direction32, sidetriple_neighborTSMInfo36, loggerWrapper37);
    signalMapperImpl29.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl38);
    signalMapperImpl17.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl38);
    safetyLogicImpl38.disconnect();
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i43 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i44 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side45 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper46 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl47 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)97, sidetriple_i43, sidetriple_i44, sidetriple_side45, loggerWrapper46);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient48 = null;
    signalMapperImpl47.setMqClient(mQClient48);
    safetyLogicImpl38.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl47);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl38);
    org.junit.Assert.assertTrue("'" + direction19 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction19.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction32 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction32.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test168() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test168"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy9 = null;
    hu.bme.mit.swsv.ris.common.Direction direction10 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy9, direction10, sidetriple_neighborTSMInfo11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy8, direction10, sidetriple_neighborTSMInfo14, loggerWrapper15);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl16);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient18 = null;
    signalMapperImpl5.setMqClient(mQClient18);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient20 = null;
    signalMapperImpl5.setMqClient(mQClient20);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i23 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i24 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side25 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper26 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl27 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i23, sidetriple_i24, sidetriple_side25, loggerWrapper26);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient28 = null;
    signalMapperImpl27.setMqClient(mQClient28);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i31 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i32 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side33 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper34 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl35 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i31, sidetriple_i32, sidetriple_side33, loggerWrapper34);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy36 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy37 = null;
    hu.bme.mit.swsv.ris.common.Direction direction38 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo39 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper40 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl41 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy37, direction38, sidetriple_neighborTSMInfo39, loggerWrapper40);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo42 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper43 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl44 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy36, direction38, sidetriple_neighborTSMInfo42, loggerWrapper43);
    signalMapperImpl35.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl44);
    signalMapperImpl27.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl44);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy47 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy48 = null;
    hu.bme.mit.swsv.ris.common.Direction direction49 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo50 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper51 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl52 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy48, direction49, sidetriple_neighborTSMInfo50, loggerWrapper51);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo53 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper54 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl55 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy47, direction49, sidetriple_neighborTSMInfo53, loggerWrapper54);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i57 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i58 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side59 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper60 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl61 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i57, sidetriple_i58, sidetriple_side59, loggerWrapper60);
    safetyLogicImpl55.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl61);
    safetyLogicImpl44.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl61);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl44);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMStatus> sidetriple_neighborTSMStatus65 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl5.sendStatus(sidetriple_neighborTSMStatus65);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction10 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction10.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction38 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction38.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction49 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction49.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test169() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test169"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.Direction direction2 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction2, sidetriple_neighborTSMInfo3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction2, sidetriple_neighborTSMInfo6, loggerWrapper7);
    safetyLogicImpl8.disconnect();
    hu.bme.mit.swsv.ris.common.Direction direction12 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal13 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)10, direction12);
    java.lang.String str14 = turnoutDirectionSignal13.toString();
    java.lang.String str15 = turnoutDirectionSignal13.toString();
    java.lang.Integer i16 = turnoutDirectionSignal13.getSenderId();
    hu.bme.mit.swsv.ris.common.Direction direction17 = turnoutDirectionSignal13.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.Direction direction18 = turnoutDirectionSignal13.getTurnoutDirection();
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal19 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(32, direction18);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl8.turnoutDirectionChanged(direction18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction2 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction2.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction12 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction12.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"+ "'", str14.equals("TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"+ "'", str15.equals("TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i16 + "' != '" + 10+ "'", i16.equals(10));
    org.junit.Assert.assertTrue("'" + direction17 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction17.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction18 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction18.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test170() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test170"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.Direction direction7 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction7, sidetriple_neighborTSMInfo8, loggerWrapper9);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl10);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i13 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i13, sidetriple_i14, sidetriple_side15, loggerWrapper16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy19 = null;
    hu.bme.mit.swsv.ris.common.Direction direction20 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy19, direction20, sidetriple_neighborTSMInfo21, loggerWrapper22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo24 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper25 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl26 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy18, direction20, sidetriple_neighborTSMInfo24, loggerWrapper25);
    signalMapperImpl17.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i30 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i31 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side32 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper33 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl34 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i30, sidetriple_i31, sidetriple_side32, loggerWrapper33);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient35 = null;
    signalMapperImpl34.setMqClient(mQClient35);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy37 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy38 = null;
    hu.bme.mit.swsv.ris.common.Direction direction39 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo40 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper41 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl42 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy38, direction39, sidetriple_neighborTSMInfo40, loggerWrapper41);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo43 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper44 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl45 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy37, direction39, sidetriple_neighborTSMInfo43, loggerWrapper44);
    signalMapperImpl34.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl45);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy47 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy48 = null;
    hu.bme.mit.swsv.ris.common.Direction direction49 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo50 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper51 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl52 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy48, direction49, sidetriple_neighborTSMInfo50, loggerWrapper51);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo53 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper54 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl55 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy47, direction49, sidetriple_neighborTSMInfo53, loggerWrapper54);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i57 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i58 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side59 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper60 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl61 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i57, sidetriple_i58, sidetriple_side59, loggerWrapper60);
    safetyLogicImpl55.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl61);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy63 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy65 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy66 = null;
    hu.bme.mit.swsv.ris.common.Direction direction67 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo68 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper69 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl70 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy66, direction67, sidetriple_neighborTSMInfo68, loggerWrapper69);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo71 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper72 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl73 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy65, direction67, sidetriple_neighborTSMInfo71, loggerWrapper72);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal74 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction67);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo75 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper76 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl77 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy63, direction67, sidetriple_neighborTSMInfo75, loggerWrapper76);
    safetyLogicImpl77.disconnect();
    signalMapperImpl61.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl77);
    safetyLogicImpl45.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl61);
    safetyLogicImpl26.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl61);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus84 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus87 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.Side side88 = hu.bme.mit.swsv.ris.common.Side.FACING;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal89 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(byte)10, (int)(byte)-1, neighborTSMStatus87, side88);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal90 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(97, (int)(byte)1, neighborTSMStatus84, side88);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy94 = hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal95 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy94);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal96 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(short)100, sectionOccupancy94);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal97 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(short)100, sectionOccupancy94);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy98 = sectionOccupancySignal97.getSectionOccupancy();
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl26.sectionOccupancyChanged(side88, sectionOccupancy98);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction20 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction20.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction39 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction39.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction49 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction49.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction67 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction67.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus84 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus84.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus87 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus87.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side88 + "' != '" + hu.bme.mit.swsv.ris.common.Side.FACING + "'", side88.equals(hu.bme.mit.swsv.ris.common.Side.FACING));
    org.junit.Assert.assertTrue("'" + sectionOccupancy94 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy94.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));
    org.junit.Assert.assertTrue("'" + sectionOccupancy98 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy98.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));

  }

  @Test
  public void test171() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test171"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.Direction direction7 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction7, sidetriple_neighborTSMInfo8, loggerWrapper9);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl10);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i13 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i13, sidetriple_i14, sidetriple_side15, loggerWrapper16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy19 = null;
    hu.bme.mit.swsv.ris.common.Direction direction20 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy19, direction20, sidetriple_neighborTSMInfo21, loggerWrapper22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo24 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper25 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl26 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy18, direction20, sidetriple_neighborTSMInfo24, loggerWrapper25);
    signalMapperImpl17.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient29 = null;
    signalMapperImpl5.setMqClient(mQClient29);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient31 = null;
    signalMapperImpl5.setMqClient(mQClient31);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient33 = null;
    signalMapperImpl5.setMqClient(mQClient33);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionControl> sidetriple_sectionControl35 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl5.sendControl(sidetriple_sectionControl35);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction20 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction20.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test172() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test172"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy11 = null;
    hu.bme.mit.swsv.ris.common.Direction direction12 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo13 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper14 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl15 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy11, direction12, sidetriple_neighborTSMInfo13, loggerWrapper14);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo16 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper17 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl18 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy10, direction12, sidetriple_neighborTSMInfo16, loggerWrapper17);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal19 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy8, direction12, sidetriple_neighborTSMInfo20, loggerWrapper21);
    safetyLogicImpl22.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i26 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i27 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side28 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper29 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl30 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)10, sidetriple_i26, sidetriple_i27, sidetriple_side28, loggerWrapper29);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy31 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy34 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy35 = null;
    hu.bme.mit.swsv.ris.common.Direction direction36 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo37 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper38 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl39 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy35, direction36, sidetriple_neighborTSMInfo37, loggerWrapper38);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo40 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper41 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl42 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy34, direction36, sidetriple_neighborTSMInfo40, loggerWrapper41);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal43 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction36);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal44 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)100, direction36);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo45 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper46 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl47 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy31, direction36, sidetriple_neighborTSMInfo45, loggerWrapper46);
    safetyLogicImpl47.disconnect();
    signalMapperImpl30.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl47);
    safetyLogicImpl22.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl30);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy51 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy53 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy54 = null;
    hu.bme.mit.swsv.ris.common.Direction direction55 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo56 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper57 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl58 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy54, direction55, sidetriple_neighborTSMInfo56, loggerWrapper57);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo59 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper60 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl61 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy53, direction55, sidetriple_neighborTSMInfo59, loggerWrapper60);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal62 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction55);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo63 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper64 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl65 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy51, direction55, sidetriple_neighborTSMInfo63, loggerWrapper64);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl22.turnoutDirectionChanged(direction55);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction12 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction12.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction36 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction36.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction55 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction55.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test173() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test173"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy9 = null;
    hu.bme.mit.swsv.ris.common.Direction direction10 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy9, direction10, sidetriple_neighborTSMInfo11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy8, direction10, sidetriple_neighborTSMInfo14, loggerWrapper15);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl16);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i19 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i20 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i19, sidetriple_i20, sidetriple_side21, loggerWrapper22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy24 = null;
    hu.bme.mit.swsv.ris.common.Direction direction25 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo26 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper27 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl28 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy24, direction25, sidetriple_neighborTSMInfo26, loggerWrapper27);
    signalMapperImpl23.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl28);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i31 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i32 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side33 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper34 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl35 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i31, sidetriple_i32, sidetriple_side33, loggerWrapper34);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy36 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy37 = null;
    hu.bme.mit.swsv.ris.common.Direction direction38 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo39 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper40 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl41 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy37, direction38, sidetriple_neighborTSMInfo39, loggerWrapper40);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo42 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper43 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl44 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy36, direction38, sidetriple_neighborTSMInfo42, loggerWrapper43);
    signalMapperImpl35.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl44);
    signalMapperImpl23.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl44);
    safetyLogicImpl44.disconnect();
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i49 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i50 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side51 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper52 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl53 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)97, sidetriple_i49, sidetriple_i50, sidetriple_side51, loggerWrapper52);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient54 = null;
    signalMapperImpl53.setMqClient(mQClient54);
    safetyLogicImpl44.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl53);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i58 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i59 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side60 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper61 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl62 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)97, sidetriple_i58, sidetriple_i59, sidetriple_side60, loggerWrapper61);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy63 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy65 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy66 = null;
    hu.bme.mit.swsv.ris.common.Direction direction67 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo68 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper69 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl70 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy66, direction67, sidetriple_neighborTSMInfo68, loggerWrapper69);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo71 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper72 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl73 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy65, direction67, sidetriple_neighborTSMInfo71, loggerWrapper72);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal74 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction67);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo75 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper76 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl77 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy63, direction67, sidetriple_neighborTSMInfo75, loggerWrapper76);
    signalMapperImpl62.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl77);
    safetyLogicImpl44.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl62);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl44);
    org.junit.Assert.assertTrue("'" + direction10 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction10.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction25 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction25.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction38 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction38.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction67 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction67.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test174() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test174"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy4 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy5 = null;
    hu.bme.mit.swsv.ris.common.Direction direction6 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo7 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper8 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl9 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy5, direction6, sidetriple_neighborTSMInfo7, loggerWrapper8);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo10 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper11 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl12 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy4, direction6, sidetriple_neighborTSMInfo10, loggerWrapper11);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal13 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction6);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal14 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)100, direction6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction6, sidetriple_neighborTSMInfo15, loggerWrapper16);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal18 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(short)0, direction6);
    java.lang.String str19 = turnoutDirectionSignal18.toString();
    java.lang.String str20 = turnoutDirectionSignal18.toString();
    org.junit.Assert.assertTrue("'" + direction6 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction6.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "TurnoutDirectionSignal(sender: 0, direction: DIVERGENT)"+ "'", str19.equals("TurnoutDirectionSignal(sender: 0, direction: DIVERGENT)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "TurnoutDirectionSignal(sender: 0, direction: DIVERGENT)"+ "'", str20.equals("TurnoutDirectionSignal(sender: 0, direction: DIVERGENT)"));

  }

  @Test
  public void test175() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test175"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.Direction direction4 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo5 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper6 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl7 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction4, sidetriple_neighborTSMInfo5, loggerWrapper6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction4, sidetriple_neighborTSMInfo8, loggerWrapper9);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal11 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(97, direction4);
    hu.bme.mit.swsv.ris.common.Direction direction12 = turnoutDirectionSignal11.getTurnoutDirection();
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal13 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)10, direction12);
    org.junit.Assert.assertTrue("'" + direction4 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction4.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction12 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction12.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test176() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test176"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)1, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i7 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i7, sidetriple_i8, sidetriple_side9, loggerWrapper10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy12 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy13 = null;
    hu.bme.mit.swsv.ris.common.Direction direction14 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy13, direction14, sidetriple_neighborTSMInfo15, loggerWrapper16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo18 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper19 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl20 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy12, direction14, sidetriple_neighborTSMInfo18, loggerWrapper19);
    signalMapperImpl11.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl20);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i23 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i24 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side25 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper26 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl27 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)1, sidetriple_i23, sidetriple_i24, sidetriple_side25, loggerWrapper26);
    safetyLogicImpl20.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl27);
    safetyLogicImpl20.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl20);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMStatus> sidetriple_neighborTSMStatus31 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl5.sendStatus(sidetriple_neighborTSMStatus31);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction14 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction14.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test177() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test177"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy4 = null;
    hu.bme.mit.swsv.ris.common.Direction direction5 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy4, direction5, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction5, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal12 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(97, direction5);
    hu.bme.mit.swsv.ris.common.Direction direction13 = turnoutDirectionSignal12.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction13, sidetriple_neighborTSMInfo14, loggerWrapper15);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo17 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper18 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl19 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction13, sidetriple_neighborTSMInfo17, loggerWrapper18);
    safetyLogicImpl19.disconnect();
    safetyLogicImpl19.disconnect();
    org.junit.Assert.assertTrue("'" + direction5 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction5.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction13 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction13.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test178() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test178"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i9 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i9, sidetriple_i10, sidetriple_side11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.Direction direction16 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo17 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper18 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl19 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction16, sidetriple_neighborTSMInfo17, loggerWrapper18);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy14, direction16, sidetriple_neighborTSMInfo20, loggerWrapper21);
    signalMapperImpl13.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy25 = null;
    hu.bme.mit.swsv.ris.common.Direction direction26 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo27 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper28 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl29 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy25, direction26, sidetriple_neighborTSMInfo27, loggerWrapper28);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl29);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i32 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i33 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side34 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper35 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl36 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i32, sidetriple_i33, sidetriple_side34, loggerWrapper35);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient37 = null;
    signalMapperImpl36.setMqClient(mQClient37);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i40 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i41 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side42 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper43 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl44 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i40, sidetriple_i41, sidetriple_side42, loggerWrapper43);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy45 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy46 = null;
    hu.bme.mit.swsv.ris.common.Direction direction47 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo48 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper49 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl50 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy46, direction47, sidetriple_neighborTSMInfo48, loggerWrapper49);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo51 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper52 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl53 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy45, direction47, sidetriple_neighborTSMInfo51, loggerWrapper52);
    signalMapperImpl44.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl53);
    signalMapperImpl36.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl53);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy56 = null;
    hu.bme.mit.swsv.ris.common.Direction direction57 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo58 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper59 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl60 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy56, direction57, sidetriple_neighborTSMInfo58, loggerWrapper59);
    signalMapperImpl36.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl60);
    safetyLogicImpl29.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl36);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i64 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i65 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side66 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper67 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl68 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i64, sidetriple_i65, sidetriple_side66, loggerWrapper67);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy69 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy70 = null;
    hu.bme.mit.swsv.ris.common.Direction direction71 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo72 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper73 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl74 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy70, direction71, sidetriple_neighborTSMInfo72, loggerWrapper73);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo75 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper76 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl77 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy69, direction71, sidetriple_neighborTSMInfo75, loggerWrapper76);
    signalMapperImpl68.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl77);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient79 = null;
    signalMapperImpl68.setMqClient(mQClient79);
    safetyLogicImpl29.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl68);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy82 = null;
    hu.bme.mit.swsv.ris.common.Direction direction84 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal85 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)10, direction84);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo86 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper87 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl88 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy82, direction84, sidetriple_neighborTSMInfo86, loggerWrapper87);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl29.turnoutDirectionChanged(direction84);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction16 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction16.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction26 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction26.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction47 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction47.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction57 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction57.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction71 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction71.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction84 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction84.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test179() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test179"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy4 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy5 = null;
    hu.bme.mit.swsv.ris.common.Direction direction6 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo7 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper8 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl9 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy5, direction6, sidetriple_neighborTSMInfo7, loggerWrapper8);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo10 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper11 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl12 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy4, direction6, sidetriple_neighborTSMInfo10, loggerWrapper11);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal13 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction6);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal14 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)100, direction6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction6, sidetriple_neighborTSMInfo15, loggerWrapper16);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal18 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(short)0, direction6);
    java.lang.String str19 = turnoutDirectionSignal18.toString();
    hu.bme.mit.swsv.ris.common.Direction direction20 = turnoutDirectionSignal18.getTurnoutDirection();
    java.lang.String str21 = turnoutDirectionSignal18.toString();
    org.junit.Assert.assertTrue("'" + direction6 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction6.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "TurnoutDirectionSignal(sender: 0, direction: DIVERGENT)"+ "'", str19.equals("TurnoutDirectionSignal(sender: 0, direction: DIVERGENT)"));
    org.junit.Assert.assertTrue("'" + direction20 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction20.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "TurnoutDirectionSignal(sender: 0, direction: DIVERGENT)"+ "'", str21.equals("TurnoutDirectionSignal(sender: 0, direction: DIVERGENT)"));

  }

  @Test
  public void test180() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test180"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)97, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy9 = null;
    hu.bme.mit.swsv.ris.common.Direction direction10 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy9, direction10, sidetriple_neighborTSMInfo11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy8, direction10, sidetriple_neighborTSMInfo14, loggerWrapper15);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal17 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo18 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper19 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl20 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction10, sidetriple_neighborTSMInfo18, loggerWrapper19);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl20);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i23 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i24 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side25 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper26 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl27 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i23, sidetriple_i24, sidetriple_side25, loggerWrapper26);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient28 = null;
    signalMapperImpl27.setMqClient(mQClient28);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy30 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy32 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy33 = null;
    hu.bme.mit.swsv.ris.common.Direction direction34 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo35 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper36 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl37 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy33, direction34, sidetriple_neighborTSMInfo35, loggerWrapper36);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo38 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper39 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl40 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy32, direction34, sidetriple_neighborTSMInfo38, loggerWrapper39);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal41 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction34);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo42 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper43 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl44 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy30, direction34, sidetriple_neighborTSMInfo42, loggerWrapper43);
    safetyLogicImpl44.disconnect();
    signalMapperImpl27.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl44);
    safetyLogicImpl20.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl27);
    org.junit.Assert.assertTrue("'" + direction10 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction10.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction34 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction34.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test181() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test181"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i9 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i9, sidetriple_i10, sidetriple_side11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.Direction direction16 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo17 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper18 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl19 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction16, sidetriple_neighborTSMInfo17, loggerWrapper18);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy14, direction16, sidetriple_neighborTSMInfo20, loggerWrapper21);
    signalMapperImpl13.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy25 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy26 = null;
    hu.bme.mit.swsv.ris.common.Direction direction27 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo28 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper29 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl30 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy26, direction27, sidetriple_neighborTSMInfo28, loggerWrapper29);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo31 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper32 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl33 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy25, direction27, sidetriple_neighborTSMInfo31, loggerWrapper32);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i35 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i36 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side37 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper38 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl39 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i35, sidetriple_i36, sidetriple_side37, loggerWrapper38);
    safetyLogicImpl33.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl39);
    safetyLogicImpl22.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl39);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy42 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy44 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy45 = null;
    hu.bme.mit.swsv.ris.common.Direction direction46 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo47 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper48 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl49 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy45, direction46, sidetriple_neighborTSMInfo47, loggerWrapper48);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo50 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper51 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl52 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy44, direction46, sidetriple_neighborTSMInfo50, loggerWrapper51);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal53 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(97, direction46);
    hu.bme.mit.swsv.ris.common.Direction direction54 = turnoutDirectionSignal53.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo55 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper56 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl57 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy42, direction54, sidetriple_neighborTSMInfo55, loggerWrapper56);
    signalMapperImpl39.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl57);
    safetyLogicImpl57.disconnect();
    org.junit.Assert.assertTrue("'" + direction16 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction16.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction27 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction27.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction46 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction46.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction54 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction54.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test182() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test182"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy5 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.Direction direction7 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction7, sidetriple_neighborTSMInfo8, loggerWrapper9);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy5, direction7, sidetriple_neighborTSMInfo11, loggerWrapper12);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal14 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction7);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal15 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)100, direction7);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo16 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper17 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl18 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction7, sidetriple_neighborTSMInfo16, loggerWrapper17);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal19 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(short)0, direction7);
    hu.bme.mit.swsv.ris.common.Direction direction20 = turnoutDirectionSignal19.getTurnoutDirection();
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal21 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(short)100, direction20);
    hu.bme.mit.swsv.ris.common.Direction direction22 = turnoutDirectionSignal21.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.Direction direction23 = turnoutDirectionSignal21.getTurnoutDirection();
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction20 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction20.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction22 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction22.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction23 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction23.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test183() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test183"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)10, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy9 = null;
    hu.bme.mit.swsv.ris.common.Direction direction10 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy9, direction10, sidetriple_neighborTSMInfo11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy8, direction10, sidetriple_neighborTSMInfo14, loggerWrapper15);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i19 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i18, sidetriple_i19, sidetriple_side20, loggerWrapper21);
    safetyLogicImpl16.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy24 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy26 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy27 = null;
    hu.bme.mit.swsv.ris.common.Direction direction28 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo29 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper30 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl31 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy27, direction28, sidetriple_neighborTSMInfo29, loggerWrapper30);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo32 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper33 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl34 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy26, direction28, sidetriple_neighborTSMInfo32, loggerWrapper33);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal35 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction28);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo36 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper37 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl38 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy24, direction28, sidetriple_neighborTSMInfo36, loggerWrapper37);
    safetyLogicImpl38.disconnect();
    signalMapperImpl22.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl38);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i42 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i43 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side44 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper45 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl46 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i42, sidetriple_i43, sidetriple_side44, loggerWrapper45);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient47 = null;
    signalMapperImpl46.setMqClient(mQClient47);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy49 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy51 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy52 = null;
    hu.bme.mit.swsv.ris.common.Direction direction53 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo54 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper55 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl56 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy52, direction53, sidetriple_neighborTSMInfo54, loggerWrapper55);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo57 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper58 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl59 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy51, direction53, sidetriple_neighborTSMInfo57, loggerWrapper58);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal60 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction53);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo61 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper62 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl63 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy49, direction53, sidetriple_neighborTSMInfo61, loggerWrapper62);
    safetyLogicImpl63.disconnect();
    signalMapperImpl46.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl63);
    safetyLogicImpl38.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl46);
    safetyLogicImpl38.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl38);
    org.junit.Assert.assertTrue("'" + direction10 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction10.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction28 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction28.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction53 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction53.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test184() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test184"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i9 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i9, sidetriple_i10, sidetriple_side11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.Direction direction16 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo17 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper18 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl19 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction16, sidetriple_neighborTSMInfo17, loggerWrapper18);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy14, direction16, sidetriple_neighborTSMInfo20, loggerWrapper21);
    signalMapperImpl13.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy26 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy27 = null;
    hu.bme.mit.swsv.ris.common.Direction direction28 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo29 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper30 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl31 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy27, direction28, sidetriple_neighborTSMInfo29, loggerWrapper30);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo32 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper33 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl34 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy26, direction28, sidetriple_neighborTSMInfo32, loggerWrapper33);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal35 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)'4', direction28);
    hu.bme.mit.swsv.ris.common.Direction direction36 = turnoutDirectionSignal35.getTurnoutDirection();
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl22.turnoutDirectionChanged(direction36);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction16 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction16.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction28 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction28.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction36 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction36.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test185() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test185"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i9 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i9, sidetriple_i10, sidetriple_side11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.Direction direction16 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo17 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper18 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl19 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction16, sidetriple_neighborTSMInfo17, loggerWrapper18);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy14, direction16, sidetriple_neighborTSMInfo20, loggerWrapper21);
    signalMapperImpl13.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient25 = null;
    signalMapperImpl5.setMqClient(mQClient25);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient27 = null;
    signalMapperImpl5.setMqClient(mQClient27);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i30 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i31 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side32 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper33 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl34 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)1, sidetriple_i30, sidetriple_i31, sidetriple_side32, loggerWrapper33);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy35 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy36 = null;
    hu.bme.mit.swsv.ris.common.Direction direction37 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo38 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper39 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl40 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy36, direction37, sidetriple_neighborTSMInfo38, loggerWrapper39);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo41 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper42 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl43 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy35, direction37, sidetriple_neighborTSMInfo41, loggerWrapper42);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i45 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i46 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side47 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper48 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl49 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i45, sidetriple_i46, sidetriple_side47, loggerWrapper48);
    safetyLogicImpl43.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl49);
    safetyLogicImpl43.disconnect();
    safetyLogicImpl43.disconnect();
    signalMapperImpl34.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl43);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl43);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i56 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i57 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side58 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper59 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl60 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i56, sidetriple_i57, sidetriple_side58, loggerWrapper59);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient61 = null;
    signalMapperImpl60.setMqClient(mQClient61);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy63 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy64 = null;
    hu.bme.mit.swsv.ris.common.Direction direction65 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo66 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper67 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl68 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy64, direction65, sidetriple_neighborTSMInfo66, loggerWrapper67);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo69 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper70 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl71 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy63, direction65, sidetriple_neighborTSMInfo69, loggerWrapper70);
    signalMapperImpl60.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl71);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient73 = null;
    signalMapperImpl60.setMqClient(mQClient73);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy75 = null;
    hu.bme.mit.swsv.ris.common.Direction direction76 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo77 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper78 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl79 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy75, direction76, sidetriple_neighborTSMInfo77, loggerWrapper78);
    signalMapperImpl60.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl79);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient81 = null;
    signalMapperImpl60.setMqClient(mQClient81);
    safetyLogicImpl43.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl60);
    hu.bme.mit.swsv.ris.tsm.SignalMapper signalMapper84 = null;
    safetyLogicImpl43.setSignalMapper(signalMapper84);
    org.junit.Assert.assertTrue("'" + direction16 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction16.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction37 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction37.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction65 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction65.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction76 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction76.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test186() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test186"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.Direction direction2 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal3 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(short)100, direction2);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo4 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper5 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl6 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction2, sidetriple_neighborTSMInfo4, loggerWrapper5);
    org.junit.Assert.assertTrue("'" + direction2 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction2.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test187() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test187"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i9 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i9, sidetriple_i10, sidetriple_side11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.Direction direction16 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo17 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper18 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl19 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction16, sidetriple_neighborTSMInfo17, loggerWrapper18);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy14, direction16, sidetriple_neighborTSMInfo20, loggerWrapper21);
    signalMapperImpl13.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy25 = null;
    hu.bme.mit.swsv.ris.common.Direction direction26 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo27 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper28 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl29 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy25, direction26, sidetriple_neighborTSMInfo27, loggerWrapper28);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl29);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy31 = null;
    hu.bme.mit.swsv.ris.common.Direction direction32 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo33 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper34 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl35 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy31, direction32, sidetriple_neighborTSMInfo33, loggerWrapper34);
    hu.bme.mit.swsv.ris.tsm.SignalMapper signalMapper36 = null;
    safetyLogicImpl35.setSignalMapper(signalMapper36);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl35);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMStatus> sidetriple_neighborTSMStatus39 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl5.sendStatus(sidetriple_neighborTSMStatus39);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction16 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction16.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction26 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction26.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction32 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction32.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test188() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test188"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i9 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i9, sidetriple_i10, sidetriple_side11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.Direction direction16 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo17 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper18 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl19 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction16, sidetriple_neighborTSMInfo17, loggerWrapper18);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy14, direction16, sidetriple_neighborTSMInfo20, loggerWrapper21);
    signalMapperImpl13.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy25 = null;
    hu.bme.mit.swsv.ris.common.Direction direction26 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo27 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper28 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl29 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy25, direction26, sidetriple_neighborTSMInfo27, loggerWrapper28);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl29);
    safetyLogicImpl29.disconnect();
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy32 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy33 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy34 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy35 = null;
    hu.bme.mit.swsv.ris.common.Direction direction36 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo37 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper38 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl39 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy35, direction36, sidetriple_neighborTSMInfo37, loggerWrapper38);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo40 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper41 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl42 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy34, direction36, sidetriple_neighborTSMInfo40, loggerWrapper41);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo43 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper44 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl45 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy33, direction36, sidetriple_neighborTSMInfo43, loggerWrapper44);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo46 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper47 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl48 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy32, direction36, sidetriple_neighborTSMInfo46, loggerWrapper47);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl29.turnoutDirectionChanged(direction36);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction16 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction16.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction26 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction26.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction36 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction36.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test189() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test189"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)1, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy7 = null;
    hu.bme.mit.swsv.ris.common.Direction direction8 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy7, direction8, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction8, sidetriple_neighborTSMInfo12, loggerWrapper13);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i16 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i17 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side18 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper19 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl20 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i16, sidetriple_i17, sidetriple_side18, loggerWrapper19);
    safetyLogicImpl14.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl20);
    safetyLogicImpl14.disconnect();
    safetyLogicImpl14.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl14);
    hu.bme.mit.swsv.ris.tsm.SignalMapper signalMapper25 = null;
    safetyLogicImpl14.setSignalMapper(signalMapper25);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy27 = null;
    hu.bme.mit.swsv.ris.common.Direction direction29 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal30 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)10, direction29);
    java.lang.String str31 = turnoutDirectionSignal30.toString();
    hu.bme.mit.swsv.ris.common.Direction direction32 = turnoutDirectionSignal30.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.Direction direction33 = turnoutDirectionSignal30.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo34 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper35 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl36 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy27, direction33, sidetriple_neighborTSMInfo34, loggerWrapper35);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl14.turnoutDirectionChanged(direction33);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction8 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction8.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction29 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction29.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"+ "'", str31.equals("TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"));
    org.junit.Assert.assertTrue("'" + direction32 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction32.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction33 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction33.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test190() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test190"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy4 = null;
    hu.bme.mit.swsv.ris.common.Direction direction5 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy4, direction5, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction5, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal12 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction5);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal13 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)100, direction5);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction5, sidetriple_neighborTSMInfo14, loggerWrapper15);
    safetyLogicImpl16.disconnect();
    safetyLogicImpl16.disconnect();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus23 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.Side side24 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal25 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(10, (int)(short)1, neighborTSMStatus23, side24);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus26 = heartBeatSignal25.getStatus();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus31 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.Side side32 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal33 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(10, (int)(short)1, neighborTSMStatus31, side32);
    hu.bme.mit.swsv.ris.common.Side side34 = hu.bme.mit.swsv.ris.common.Side.FACING;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal35 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)100, 97, neighborTSMStatus31, side34);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal36 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(byte)10, 97, neighborTSMStatus26, side34);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy41 = hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal42 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy41);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal43 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(short)0, sectionOccupancy41);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal44 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)0, sectionOccupancy41);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy45 = sectionOccupancySignal44.getSectionOccupancy();
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal46 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal(97, sectionOccupancy45);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl16.sectionOccupancyChanged(side34, sectionOccupancy45);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction5 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction5.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus23 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus23.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side24 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side24.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus26 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus26.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus31 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus31.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side32 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side32.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side34 + "' != '" + hu.bme.mit.swsv.ris.common.Side.FACING + "'", side34.equals(hu.bme.mit.swsv.ris.common.Side.FACING));
    org.junit.Assert.assertTrue("'" + sectionOccupancy41 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy41.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));
    org.junit.Assert.assertTrue("'" + sectionOccupancy45 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy45.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));

  }

  @Test
  public void test191() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test191"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)35, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i7 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)1, sidetriple_i7, sidetriple_i8, sidetriple_side9, loggerWrapper10);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient12 = null;
    signalMapperImpl11.setMqClient(mQClient12);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient14 = null;
    signalMapperImpl11.setMqClient(mQClient14);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i17 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side19 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper20 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl21 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i17, sidetriple_i18, sidetriple_side19, loggerWrapper20);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient22 = null;
    signalMapperImpl21.setMqClient(mQClient22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy24 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy26 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy27 = null;
    hu.bme.mit.swsv.ris.common.Direction direction28 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo29 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper30 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl31 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy27, direction28, sidetriple_neighborTSMInfo29, loggerWrapper30);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo32 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper33 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl34 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy26, direction28, sidetriple_neighborTSMInfo32, loggerWrapper33);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal35 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction28);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo36 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper37 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl38 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy24, direction28, sidetriple_neighborTSMInfo36, loggerWrapper37);
    safetyLogicImpl38.disconnect();
    signalMapperImpl21.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl38);
    signalMapperImpl11.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl38);
    safetyLogicImpl38.disconnect();
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i44 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i45 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side46 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper47 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl48 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)(-1), sidetriple_i44, sidetriple_i45, sidetriple_side46, loggerWrapper47);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient49 = null;
    signalMapperImpl48.setMqClient(mQClient49);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i52 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i53 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side54 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper55 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl56 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i52, sidetriple_i53, sidetriple_side54, loggerWrapper55);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient57 = null;
    signalMapperImpl56.setMqClient(mQClient57);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy59 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy60 = null;
    hu.bme.mit.swsv.ris.common.Direction direction61 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo62 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper63 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl64 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy60, direction61, sidetriple_neighborTSMInfo62, loggerWrapper63);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo65 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper66 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl67 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy59, direction61, sidetriple_neighborTSMInfo65, loggerWrapper66);
    signalMapperImpl56.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl67);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient69 = null;
    signalMapperImpl56.setMqClient(mQClient69);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy71 = null;
    hu.bme.mit.swsv.ris.common.Direction direction72 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo73 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper74 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl75 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy71, direction72, sidetriple_neighborTSMInfo73, loggerWrapper74);
    signalMapperImpl56.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl75);
    signalMapperImpl48.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl75);
    safetyLogicImpl38.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl48);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl38);
    org.junit.Assert.assertTrue("'" + direction28 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction28.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction61 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction61.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction72 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction72.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test192() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test192"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i9 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i9, sidetriple_i10, sidetriple_side11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.Direction direction16 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo17 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper18 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl19 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction16, sidetriple_neighborTSMInfo17, loggerWrapper18);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy14, direction16, sidetriple_neighborTSMInfo20, loggerWrapper21);
    signalMapperImpl13.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient25 = null;
    signalMapperImpl5.setMqClient(mQClient25);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient27 = null;
    signalMapperImpl5.setMqClient(mQClient27);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i30 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i31 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side32 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper33 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl34 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)1, sidetriple_i30, sidetriple_i31, sidetriple_side32, loggerWrapper33);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy35 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy36 = null;
    hu.bme.mit.swsv.ris.common.Direction direction37 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo38 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper39 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl40 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy36, direction37, sidetriple_neighborTSMInfo38, loggerWrapper39);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo41 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper42 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl43 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy35, direction37, sidetriple_neighborTSMInfo41, loggerWrapper42);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i45 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i46 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side47 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper48 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl49 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i45, sidetriple_i46, sidetriple_side47, loggerWrapper48);
    safetyLogicImpl43.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl49);
    safetyLogicImpl43.disconnect();
    safetyLogicImpl43.disconnect();
    signalMapperImpl34.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl43);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl43);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i56 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i57 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side58 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper59 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl60 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i56, sidetriple_i57, sidetriple_side58, loggerWrapper59);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient61 = null;
    signalMapperImpl60.setMqClient(mQClient61);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy63 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy64 = null;
    hu.bme.mit.swsv.ris.common.Direction direction65 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo66 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper67 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl68 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy64, direction65, sidetriple_neighborTSMInfo66, loggerWrapper67);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo69 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper70 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl71 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy63, direction65, sidetriple_neighborTSMInfo69, loggerWrapper70);
    signalMapperImpl60.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl71);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient73 = null;
    signalMapperImpl60.setMqClient(mQClient73);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy75 = null;
    hu.bme.mit.swsv.ris.common.Direction direction76 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo77 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper78 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl79 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy75, direction76, sidetriple_neighborTSMInfo77, loggerWrapper78);
    signalMapperImpl60.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl79);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient81 = null;
    signalMapperImpl60.setMqClient(mQClient81);
    safetyLogicImpl43.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl60);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient84 = null;
    signalMapperImpl60.setMqClient(mQClient84);
    org.junit.Assert.assertTrue("'" + direction16 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction16.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction37 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction37.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction65 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction65.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction76 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction76.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test193() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test193"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.Direction direction7 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction7, sidetriple_neighborTSMInfo8, loggerWrapper9);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl10);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i13 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i13, sidetriple_i14, sidetriple_side15, loggerWrapper16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy19 = null;
    hu.bme.mit.swsv.ris.common.Direction direction20 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy19, direction20, sidetriple_neighborTSMInfo21, loggerWrapper22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo24 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper25 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl26 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy18, direction20, sidetriple_neighborTSMInfo24, loggerWrapper25);
    signalMapperImpl17.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    safetyLogicImpl26.disconnect();
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i31 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i32 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side33 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper34 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl35 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)97, sidetriple_i31, sidetriple_i32, sidetriple_side33, loggerWrapper34);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient36 = null;
    signalMapperImpl35.setMqClient(mQClient36);
    safetyLogicImpl26.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl35);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i40 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i41 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side42 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper43 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl44 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)97, sidetriple_i40, sidetriple_i41, sidetriple_side42, loggerWrapper43);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy45 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy47 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy48 = null;
    hu.bme.mit.swsv.ris.common.Direction direction49 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo50 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper51 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl52 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy48, direction49, sidetriple_neighborTSMInfo50, loggerWrapper51);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo53 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper54 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl55 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy47, direction49, sidetriple_neighborTSMInfo53, loggerWrapper54);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal56 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction49);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo57 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper58 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl59 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy45, direction49, sidetriple_neighborTSMInfo57, loggerWrapper58);
    signalMapperImpl44.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl59);
    safetyLogicImpl26.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl44);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMStatus> sidetriple_neighborTSMStatus62 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl44.sendStatus(sidetriple_neighborTSMStatus62);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction20 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction20.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction49 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction49.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test194() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test194"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.Direction direction2 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction2, sidetriple_neighborTSMInfo3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction2, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i11 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)(-1), sidetriple_i10, sidetriple_i11, sidetriple_side12, loggerWrapper13);
    safetyLogicImpl8.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl14);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient16 = null;
    signalMapperImpl14.setMqClient(mQClient16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionControl> sidetriple_sectionControl18 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl14.sendControl(sidetriple_sectionControl18);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction2 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction2.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test195() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test195"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i9 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i9, sidetriple_i10, sidetriple_side11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.Direction direction16 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo17 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper18 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl19 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction16, sidetriple_neighborTSMInfo17, loggerWrapper18);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy14, direction16, sidetriple_neighborTSMInfo20, loggerWrapper21);
    signalMapperImpl13.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy25 = null;
    hu.bme.mit.swsv.ris.common.Direction direction26 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo27 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper28 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl29 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy25, direction26, sidetriple_neighborTSMInfo27, loggerWrapper28);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl29);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient31 = null;
    signalMapperImpl5.setMqClient(mQClient31);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy33 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy34 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy35 = null;
    hu.bme.mit.swsv.ris.common.Direction direction36 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo37 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper38 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl39 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy35, direction36, sidetriple_neighborTSMInfo37, loggerWrapper38);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo40 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper41 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl42 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy34, direction36, sidetriple_neighborTSMInfo40, loggerWrapper41);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo43 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper44 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl45 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy33, direction36, sidetriple_neighborTSMInfo43, loggerWrapper44);
    safetyLogicImpl45.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl45);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i49 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i50 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side51 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper52 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl53 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i49, sidetriple_i50, sidetriple_side51, loggerWrapper52);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy54 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy55 = null;
    hu.bme.mit.swsv.ris.common.Direction direction56 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo57 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper58 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl59 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy55, direction56, sidetriple_neighborTSMInfo57, loggerWrapper58);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo60 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper61 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl62 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy54, direction56, sidetriple_neighborTSMInfo60, loggerWrapper61);
    signalMapperImpl53.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl62);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i65 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i66 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side67 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper68 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl69 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)1, sidetriple_i65, sidetriple_i66, sidetriple_side67, loggerWrapper68);
    safetyLogicImpl62.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl69);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl62);
    org.junit.Assert.assertTrue("'" + direction16 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction16.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction26 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction26.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction36 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction36.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction56 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction56.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test196() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test196"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.Direction direction4 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo5 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper6 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl7 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction4, sidetriple_neighborTSMInfo5, loggerWrapper6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction4, sidetriple_neighborTSMInfo8, loggerWrapper9);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal11 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction4, sidetriple_neighborTSMInfo12, loggerWrapper13);
    safetyLogicImpl14.disconnect();
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy17 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy20 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy21 = null;
    hu.bme.mit.swsv.ris.common.Direction direction22 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo23 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper24 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl25 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy21, direction22, sidetriple_neighborTSMInfo23, loggerWrapper24);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo26 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper27 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl28 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy20, direction22, sidetriple_neighborTSMInfo26, loggerWrapper27);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal29 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction22);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal30 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)100, direction22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo31 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper32 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl33 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy17, direction22, sidetriple_neighborTSMInfo31, loggerWrapper32);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal34 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(short)0, direction22);
    java.lang.String str35 = turnoutDirectionSignal34.toString();
    hu.bme.mit.swsv.ris.common.Direction direction36 = turnoutDirectionSignal34.getTurnoutDirection();
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl14.turnoutDirectionChanged(direction36);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction4 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction4.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction22 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction22.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "TurnoutDirectionSignal(sender: 0, direction: DIVERGENT)"+ "'", str35.equals("TurnoutDirectionSignal(sender: 0, direction: DIVERGENT)"));
    org.junit.Assert.assertTrue("'" + direction36 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction36.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test197() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test197"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.Direction direction1 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo2 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper3 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl4 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction1, sidetriple_neighborTSMInfo2, loggerWrapper3);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus7 = null;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus10 = null;
    hu.bme.mit.swsv.ris.common.Side side11 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal12 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus10, side11);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal13 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(byte)100, (int)(byte)-1, neighborTSMStatus7, side11);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus14 = heartBeatSignal13.getStatus();
    hu.bme.mit.swsv.ris.common.Side side15 = heartBeatSignal13.getSenderSide();
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy21 = hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal22 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy21);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal23 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(short)100, sectionOccupancy21);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal24 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy21);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy25 = sectionOccupancySignal24.getSectionOccupancy();
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal26 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal(100, sectionOccupancy25);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal27 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)100, sectionOccupancy25);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl4.sectionOccupancyChanged(side15, sectionOccupancy25);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction1 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction1.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side11 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side11.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(neighborTSMStatus14);
    org.junit.Assert.assertTrue("'" + side15 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side15.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy21 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy21.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));
    org.junit.Assert.assertTrue("'" + sectionOccupancy25 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy25.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));

  }

  @Test
  public void test198() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test198"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.Direction direction4 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo5 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper6 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl7 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction4, sidetriple_neighborTSMInfo5, loggerWrapper6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction4, sidetriple_neighborTSMInfo8, loggerWrapper9);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction4, sidetriple_neighborTSMInfo11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction4, sidetriple_neighborTSMInfo14, loggerWrapper15);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i19 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i18, sidetriple_i19, sidetriple_side20, loggerWrapper21);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy23 = null;
    hu.bme.mit.swsv.ris.common.Direction direction24 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo25 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper26 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl27 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy23, direction24, sidetriple_neighborTSMInfo25, loggerWrapper26);
    signalMapperImpl22.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl27);
    safetyLogicImpl16.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl22);
    org.junit.Assert.assertTrue("'" + direction4 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction4.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction24 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction24.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test199() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test199"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i9 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i9, sidetriple_i10, sidetriple_side11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.Direction direction16 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo17 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper18 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl19 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction16, sidetriple_neighborTSMInfo17, loggerWrapper18);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy14, direction16, sidetriple_neighborTSMInfo20, loggerWrapper21);
    signalMapperImpl13.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy25 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy26 = null;
    hu.bme.mit.swsv.ris.common.Direction direction27 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo28 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper29 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl30 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy26, direction27, sidetriple_neighborTSMInfo28, loggerWrapper29);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo31 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper32 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl33 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy25, direction27, sidetriple_neighborTSMInfo31, loggerWrapper32);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i35 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i36 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side37 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper38 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl39 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i35, sidetriple_i36, sidetriple_side37, loggerWrapper38);
    safetyLogicImpl33.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl39);
    safetyLogicImpl22.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl39);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy42 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy44 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy45 = null;
    hu.bme.mit.swsv.ris.common.Direction direction46 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo47 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper48 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl49 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy45, direction46, sidetriple_neighborTSMInfo47, loggerWrapper48);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo50 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper51 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl52 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy44, direction46, sidetriple_neighborTSMInfo50, loggerWrapper51);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal53 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(97, direction46);
    hu.bme.mit.swsv.ris.common.Direction direction54 = turnoutDirectionSignal53.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo55 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper56 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl57 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy42, direction54, sidetriple_neighborTSMInfo55, loggerWrapper56);
    signalMapperImpl39.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl57);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient59 = null;
    signalMapperImpl39.setMqClient(mQClient59);
    org.junit.Assert.assertTrue("'" + direction16 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction16.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction27 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction27.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction46 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction46.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction54 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction54.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test200() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test200"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.Direction direction6 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal7 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)10, direction6);
    java.lang.String str8 = turnoutDirectionSignal7.toString();
    java.lang.String str9 = turnoutDirectionSignal7.toString();
    java.lang.Integer i10 = turnoutDirectionSignal7.getSenderId();
    hu.bme.mit.swsv.ris.common.Direction direction11 = turnoutDirectionSignal7.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.Direction direction12 = turnoutDirectionSignal7.getTurnoutDirection();
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal13 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)0, direction12);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal14 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)1, direction12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction12, sidetriple_neighborTSMInfo15, loggerWrapper16);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal18 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(short)1, direction12);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal19 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)'#', direction12);
    org.junit.Assert.assertTrue("'" + direction6 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction6.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"+ "'", str8.equals("TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"+ "'", str9.equals("TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i10 + "' != '" + 10+ "'", i10.equals(10));
    org.junit.Assert.assertTrue("'" + direction11 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction11.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction12 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction12.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test201() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test201"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy7 = null;
    hu.bme.mit.swsv.ris.common.Direction direction8 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy7, direction8, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction8, sidetriple_neighborTSMInfo12, loggerWrapper13);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl14);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i17 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side19 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper20 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl21 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i17, sidetriple_i18, sidetriple_side19, loggerWrapper20);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient22 = null;
    signalMapperImpl21.setMqClient(mQClient22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy24 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy25 = null;
    hu.bme.mit.swsv.ris.common.Direction direction26 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo27 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper28 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl29 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy25, direction26, sidetriple_neighborTSMInfo27, loggerWrapper28);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo30 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper31 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl32 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy24, direction26, sidetriple_neighborTSMInfo30, loggerWrapper31);
    signalMapperImpl21.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl32);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient34 = null;
    signalMapperImpl21.setMqClient(mQClient34);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy36 = null;
    hu.bme.mit.swsv.ris.common.Direction direction37 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo38 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper39 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl40 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy36, direction37, sidetriple_neighborTSMInfo38, loggerWrapper39);
    signalMapperImpl21.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl40);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy42 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy43 = null;
    hu.bme.mit.swsv.ris.common.Direction direction44 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo45 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper46 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl47 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy43, direction44, sidetriple_neighborTSMInfo45, loggerWrapper46);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo48 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper49 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl50 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy42, direction44, sidetriple_neighborTSMInfo48, loggerWrapper49);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i52 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i53 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side54 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper55 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl56 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)(-1), sidetriple_i52, sidetriple_i53, sidetriple_side54, loggerWrapper55);
    safetyLogicImpl50.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl56);
    safetyLogicImpl40.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl56);
    hu.bme.mit.swsv.ris.tsm.SafetyLogic safetyLogic59 = null;
    signalMapperImpl56.setSafetyLogic(safetyLogic59);
    safetyLogicImpl14.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl56);
    org.junit.Assert.assertTrue("'" + direction8 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction8.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction26 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction26.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction37 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction37.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction44 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction44.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test202() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test202"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy4 = null;
    hu.bme.mit.swsv.ris.common.Direction direction5 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy4, direction5, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction5, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction5, sidetriple_neighborTSMInfo12, loggerWrapper13);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction5, sidetriple_neighborTSMInfo15, loggerWrapper16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo18 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper19 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl20 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction5, sidetriple_neighborTSMInfo18, loggerWrapper19);
    org.junit.Assert.assertTrue("'" + direction5 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction5.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test203() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test203"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)97, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient8 = null;
    signalMapperImpl5.setMqClient(mQClient8);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient10 = null;
    signalMapperImpl5.setMqClient(mQClient10);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i13 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)1, sidetriple_i13, sidetriple_i14, sidetriple_side15, loggerWrapper16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy19 = null;
    hu.bme.mit.swsv.ris.common.Direction direction20 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy19, direction20, sidetriple_neighborTSMInfo21, loggerWrapper22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo24 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper25 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl26 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy18, direction20, sidetriple_neighborTSMInfo24, loggerWrapper25);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i28 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i29 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side30 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper31 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl32 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i28, sidetriple_i29, sidetriple_side30, loggerWrapper31);
    safetyLogicImpl26.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl32);
    safetyLogicImpl26.disconnect();
    safetyLogicImpl26.disconnect();
    signalMapperImpl17.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    hu.bme.mit.swsv.ris.tsm.SignalMapper signalMapper37 = null;
    safetyLogicImpl26.setSignalMapper(signalMapper37);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    org.junit.Assert.assertTrue("'" + direction20 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction20.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test204() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test204"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy9 = null;
    hu.bme.mit.swsv.ris.common.Direction direction10 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy9, direction10, sidetriple_neighborTSMInfo11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy8, direction10, sidetriple_neighborTSMInfo14, loggerWrapper15);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl16);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient18 = null;
    signalMapperImpl5.setMqClient(mQClient18);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy20 = null;
    hu.bme.mit.swsv.ris.common.Direction direction21 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo22 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper23 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl24 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy20, direction21, sidetriple_neighborTSMInfo22, loggerWrapper23);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl24);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i27 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i28 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side29 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper30 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl31 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i27, sidetriple_i28, sidetriple_side29, loggerWrapper30);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient32 = null;
    signalMapperImpl31.setMqClient(mQClient32);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy34 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy35 = null;
    hu.bme.mit.swsv.ris.common.Direction direction36 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo37 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper38 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl39 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy35, direction36, sidetriple_neighborTSMInfo37, loggerWrapper38);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo40 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper41 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl42 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy34, direction36, sidetriple_neighborTSMInfo40, loggerWrapper41);
    signalMapperImpl31.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl42);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient44 = null;
    signalMapperImpl31.setMqClient(mQClient44);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient46 = null;
    signalMapperImpl31.setMqClient(mQClient46);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i49 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i50 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side51 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper52 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl53 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i49, sidetriple_i50, sidetriple_side51, loggerWrapper52);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient54 = null;
    signalMapperImpl53.setMqClient(mQClient54);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i57 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i58 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side59 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper60 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl61 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i57, sidetriple_i58, sidetriple_side59, loggerWrapper60);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy62 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy63 = null;
    hu.bme.mit.swsv.ris.common.Direction direction64 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo65 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper66 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl67 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy63, direction64, sidetriple_neighborTSMInfo65, loggerWrapper66);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo68 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper69 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl70 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy62, direction64, sidetriple_neighborTSMInfo68, loggerWrapper69);
    signalMapperImpl61.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl70);
    signalMapperImpl53.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl70);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy73 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy74 = null;
    hu.bme.mit.swsv.ris.common.Direction direction75 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo76 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper77 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl78 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy74, direction75, sidetriple_neighborTSMInfo76, loggerWrapper77);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo79 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper80 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl81 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy73, direction75, sidetriple_neighborTSMInfo79, loggerWrapper80);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i83 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i84 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side85 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper86 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl87 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i83, sidetriple_i84, sidetriple_side85, loggerWrapper86);
    safetyLogicImpl81.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl87);
    safetyLogicImpl70.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl87);
    signalMapperImpl31.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl70);
    safetyLogicImpl24.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl31);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient92 = null;
    signalMapperImpl31.setMqClient(mQClient92);
    org.junit.Assert.assertTrue("'" + direction10 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction10.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction21 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction21.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction36 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction36.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction64 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction64.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction75 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction75.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test205() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test205"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.Direction direction4 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo5 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper6 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl7 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction4, sidetriple_neighborTSMInfo5, loggerWrapper6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction4, sidetriple_neighborTSMInfo8, loggerWrapper9);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal11 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction4, sidetriple_neighborTSMInfo12, loggerWrapper13);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy16 = null;
    hu.bme.mit.swsv.ris.common.Direction direction17 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo18 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper19 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl20 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy16, direction17, sidetriple_neighborTSMInfo18, loggerWrapper19);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction17, sidetriple_neighborTSMInfo21, loggerWrapper22);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i25 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i26 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side27 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper28 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl29 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i25, sidetriple_i26, sidetriple_side27, loggerWrapper28);
    safetyLogicImpl23.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl29);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy31 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy33 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy34 = null;
    hu.bme.mit.swsv.ris.common.Direction direction35 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo36 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper37 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl38 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy34, direction35, sidetriple_neighborTSMInfo36, loggerWrapper37);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo39 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper40 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl41 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy33, direction35, sidetriple_neighborTSMInfo39, loggerWrapper40);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal42 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction35);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo43 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper44 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl45 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy31, direction35, sidetriple_neighborTSMInfo43, loggerWrapper44);
    safetyLogicImpl45.disconnect();
    signalMapperImpl29.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl45);
    safetyLogicImpl14.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl29);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient49 = null;
    signalMapperImpl29.setMqClient(mQClient49);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient51 = null;
    signalMapperImpl29.setMqClient(mQClient51);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy53 = null;
    hu.bme.mit.swsv.ris.common.Direction direction54 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo55 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper56 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl57 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy53, direction54, sidetriple_neighborTSMInfo55, loggerWrapper56);
    hu.bme.mit.swsv.ris.tsm.SignalMapper signalMapper58 = null;
    safetyLogicImpl57.setSignalMapper(signalMapper58);
    signalMapperImpl29.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl57);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient61 = null;
    signalMapperImpl29.setMqClient(mQClient61);
    org.junit.Assert.assertTrue("'" + direction4 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction4.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction17 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction17.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction35 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction35.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction54 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction54.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test206() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test206"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.Direction direction3 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo4 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper5 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl6 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction3, sidetriple_neighborTSMInfo4, loggerWrapper5);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal7 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(1, direction3);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal8 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(100, direction3);
    hu.bme.mit.swsv.ris.common.Direction direction9 = turnoutDirectionSignal8.getTurnoutDirection();
    org.junit.Assert.assertTrue("'" + direction3 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction3.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction9 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction9.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test207() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test207"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy8 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy11 = null;
    hu.bme.mit.swsv.ris.common.Direction direction12 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo13 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper14 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl15 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy11, direction12, sidetriple_neighborTSMInfo13, loggerWrapper14);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo16 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper17 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl18 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy10, direction12, sidetriple_neighborTSMInfo16, loggerWrapper17);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal19 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy8, direction12, sidetriple_neighborTSMInfo20, loggerWrapper21);
    safetyLogicImpl22.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i26 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i27 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side28 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper29 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl30 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)10, sidetriple_i26, sidetriple_i27, sidetriple_side28, loggerWrapper29);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy31 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy34 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy35 = null;
    hu.bme.mit.swsv.ris.common.Direction direction36 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo37 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper38 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl39 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy35, direction36, sidetriple_neighborTSMInfo37, loggerWrapper38);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo40 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper41 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl42 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy34, direction36, sidetriple_neighborTSMInfo40, loggerWrapper41);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal43 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction36);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal44 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)100, direction36);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo45 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper46 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl47 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy31, direction36, sidetriple_neighborTSMInfo45, loggerWrapper46);
    safetyLogicImpl47.disconnect();
    signalMapperImpl30.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl47);
    safetyLogicImpl22.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl30);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMStatus> sidetriple_neighborTSMStatus51 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl30.sendStatus(sidetriple_neighborTSMStatus51);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction12 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction12.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction36 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction36.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test208() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test208"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.Direction direction7 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction7, sidetriple_neighborTSMInfo8, loggerWrapper9);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl10);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i13 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i13, sidetriple_i14, sidetriple_side15, loggerWrapper16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy19 = null;
    hu.bme.mit.swsv.ris.common.Direction direction20 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy19, direction20, sidetriple_neighborTSMInfo21, loggerWrapper22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo24 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper25 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl26 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy18, direction20, sidetriple_neighborTSMInfo24, loggerWrapper25);
    signalMapperImpl17.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    safetyLogicImpl26.disconnect();
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i31 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i32 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side33 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper34 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl35 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i31, sidetriple_i32, sidetriple_side33, loggerWrapper34);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient36 = null;
    signalMapperImpl35.setMqClient(mQClient36);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i39 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i40 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side41 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper42 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl43 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i39, sidetriple_i40, sidetriple_side41, loggerWrapper42);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy44 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy45 = null;
    hu.bme.mit.swsv.ris.common.Direction direction46 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo47 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper48 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl49 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy45, direction46, sidetriple_neighborTSMInfo47, loggerWrapper48);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo50 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper51 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl52 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy44, direction46, sidetriple_neighborTSMInfo50, loggerWrapper51);
    signalMapperImpl43.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl52);
    signalMapperImpl35.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl52);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy55 = null;
    hu.bme.mit.swsv.ris.common.Direction direction56 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo57 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper58 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl59 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy55, direction56, sidetriple_neighborTSMInfo57, loggerWrapper58);
    signalMapperImpl35.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl59);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy61 = null;
    hu.bme.mit.swsv.ris.common.Direction direction62 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo63 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper64 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl65 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy61, direction62, sidetriple_neighborTSMInfo63, loggerWrapper64);
    hu.bme.mit.swsv.ris.tsm.SignalMapper signalMapper66 = null;
    safetyLogicImpl65.setSignalMapper(signalMapper66);
    signalMapperImpl35.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl65);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient69 = null;
    signalMapperImpl35.setMqClient(mQClient69);
    safetyLogicImpl26.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl35);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMStatus> sidetriple_neighborTSMStatus72 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl35.sendStatus(sidetriple_neighborTSMStatus72);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction20 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction20.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction46 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction46.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction56 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction56.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction62 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction62.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test209() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test209"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.Direction direction4 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal5 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)10, direction4);
    java.lang.String str6 = turnoutDirectionSignal5.toString();
    hu.bme.mit.swsv.ris.common.Direction direction7 = turnoutDirectionSignal5.getTurnoutDirection();
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal8 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(short)-1, direction7);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal9 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(97, direction7);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo10 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper11 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl12 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction7, sidetriple_neighborTSMInfo10, loggerWrapper11);
    org.junit.Assert.assertTrue("'" + direction4 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction4.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"+ "'", str6.equals("TurnoutDirectionSignal(sender: 10, direction: DIVERGENT)"));
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test210() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test210"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.Direction direction7 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction7, sidetriple_neighborTSMInfo8, loggerWrapper9);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl10);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i13 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i13, sidetriple_i14, sidetriple_side15, loggerWrapper16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy19 = null;
    hu.bme.mit.swsv.ris.common.Direction direction20 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy19, direction20, sidetriple_neighborTSMInfo21, loggerWrapper22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo24 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper25 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl26 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy18, direction20, sidetriple_neighborTSMInfo24, loggerWrapper25);
    signalMapperImpl17.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i30 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i31 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side32 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper33 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl34 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i30, sidetriple_i31, sidetriple_side32, loggerWrapper33);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient35 = null;
    signalMapperImpl34.setMqClient(mQClient35);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy37 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy38 = null;
    hu.bme.mit.swsv.ris.common.Direction direction39 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo40 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper41 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl42 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy38, direction39, sidetriple_neighborTSMInfo40, loggerWrapper41);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo43 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper44 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl45 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy37, direction39, sidetriple_neighborTSMInfo43, loggerWrapper44);
    signalMapperImpl34.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl45);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy47 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy48 = null;
    hu.bme.mit.swsv.ris.common.Direction direction49 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo50 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper51 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl52 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy48, direction49, sidetriple_neighborTSMInfo50, loggerWrapper51);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo53 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper54 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl55 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy47, direction49, sidetriple_neighborTSMInfo53, loggerWrapper54);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i57 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i58 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side59 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper60 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl61 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i57, sidetriple_i58, sidetriple_side59, loggerWrapper60);
    safetyLogicImpl55.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl61);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy63 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy65 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy66 = null;
    hu.bme.mit.swsv.ris.common.Direction direction67 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo68 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper69 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl70 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy66, direction67, sidetriple_neighborTSMInfo68, loggerWrapper69);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo71 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper72 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl73 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy65, direction67, sidetriple_neighborTSMInfo71, loggerWrapper72);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal74 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction67);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo75 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper76 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl77 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy63, direction67, sidetriple_neighborTSMInfo75, loggerWrapper76);
    safetyLogicImpl77.disconnect();
    signalMapperImpl61.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl77);
    safetyLogicImpl45.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl61);
    safetyLogicImpl26.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl61);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient82 = null;
    signalMapperImpl61.setMqClient(mQClient82);
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction20 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction20.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction39 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction39.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction49 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction49.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction67 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction67.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test211() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test211"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.Direction direction7 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction7, sidetriple_neighborTSMInfo8, loggerWrapper9);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl10);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus14 = null;
    hu.bme.mit.swsv.ris.common.Side side15 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal16 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus14, side15);
    hu.bme.mit.swsv.ris.common.Side side17 = heartBeatSignal16.getSenderSide();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus18 = heartBeatSignal16.getStatus();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus19 = heartBeatSignal16.getStatus();
    java.util.Date date20 = heartBeatSignal16.getTimestamp();
    java.util.Date date21 = heartBeatSignal16.getTimestamp();
    hu.bme.mit.swsv.ris.common.Side side22 = heartBeatSignal16.getSenderSide();
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy27 = hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal28 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy27);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal29 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(short)0, sectionOccupancy27);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal30 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)0, sectionOccupancy27);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy31 = sectionOccupancySignal30.getSectionOccupancy();
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal32 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal(97, sectionOccupancy31);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl10.sectionOccupancyChanged(side22, sectionOccupancy31);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + side15 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side15.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side17 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side17.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(neighborTSMStatus18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(neighborTSMStatus19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date21);
    org.junit.Assert.assertTrue("'" + side22 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side22.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy27 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy27.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));
    org.junit.Assert.assertTrue("'" + sectionOccupancy31 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy31.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));

  }

  @Test
  public void test212() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test212"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.Direction direction1 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo2 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper3 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl4 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction1, sidetriple_neighborTSMInfo2, loggerWrapper3);
    hu.bme.mit.swsv.ris.tsm.SignalMapper signalMapper5 = null;
    safetyLogicImpl4.setSignalMapper(signalMapper5);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus11 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus16 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.Side side17 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal18 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(10, (int)(short)1, neighborTSMStatus16, side17);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus19 = heartBeatSignal18.getStatus();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus24 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.Side side25 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal26 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(10, (int)(short)1, neighborTSMStatus24, side25);
    hu.bme.mit.swsv.ris.common.Side side27 = hu.bme.mit.swsv.ris.common.Side.FACING;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal28 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)100, 97, neighborTSMStatus24, side27);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal29 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(byte)10, 97, neighborTSMStatus19, side27);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal30 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)'4', (int)'4', neighborTSMStatus11, side27);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus33 = null;
    hu.bme.mit.swsv.ris.common.Side side34 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal35 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)0, (int)(byte)100, neighborTSMStatus33, side34);
    java.lang.String str36 = heartBeatSignal35.toString();
    hu.bme.mit.swsv.ris.common.Side side37 = heartBeatSignal35.getSenderSide();
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal38 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)0, (int)'#', neighborTSMStatus11, side37);
    java.util.Date date39 = null;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus44 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus47 = null;
    hu.bme.mit.swsv.ris.common.Side side48 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal49 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus47, side48);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal50 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, (int)(short)100, neighborTSMStatus44, side48);
    java.lang.Integer i51 = heartBeatSignal50.getTargetId();
    java.lang.String str52 = heartBeatSignal50.toString();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus53 = heartBeatSignal50.getStatus();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus60 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus63 = null;
    hu.bme.mit.swsv.ris.common.Side side64 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal65 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus63, side64);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal66 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, (int)(short)100, neighborTSMStatus60, side64);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus69 = null;
    hu.bme.mit.swsv.ris.common.Side side70 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal71 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus69, side70);
    hu.bme.mit.swsv.ris.common.Side side72 = heartBeatSignal71.getSenderSide();
    java.lang.Integer i73 = heartBeatSignal71.getTargetId();
    java.lang.Integer i74 = heartBeatSignal71.getSenderId();
    java.lang.String str75 = heartBeatSignal71.toString();
    hu.bme.mit.swsv.ris.common.Side side76 = heartBeatSignal71.getSenderSide();
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal77 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)0, (int)(short)0, neighborTSMStatus60, side76);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus78 = heartBeatSignal77.getStatus();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus81 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus84 = null;
    hu.bme.mit.swsv.ris.common.Side side85 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal86 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus84, side85);
    hu.bme.mit.swsv.ris.common.Side side87 = heartBeatSignal86.getSenderSide();
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal88 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)' ', (int)(byte)0, neighborTSMStatus81, side87);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal89 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(0, (int)(byte)1, neighborTSMStatus78, side87);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal90 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(100, (int)(short)0, neighborTSMStatus53, side87);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl4.neighborStatusChanged(side37, date39, neighborTSMStatus53);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction1 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction1.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus11 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus11.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus16 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus16.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side17 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side17.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus19 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus19.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus24 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus24.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side25 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side25.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side27 + "' != '" + hu.bme.mit.swsv.ris.common.Side.FACING + "'", side27.equals(hu.bme.mit.swsv.ris.common.Side.FACING));
    org.junit.Assert.assertTrue("'" + side34 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side34.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "HeartBeatSignal(sender: 0 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:53 CET 2016)"+ "'", str36.equals("HeartBeatSignal(sender: 0 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:53 CET 2016)"));
    org.junit.Assert.assertTrue("'" + side37 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side37.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus44 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus44.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side48 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side48.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i51 + "' != '" + 100+ "'", i51.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str52 + "' != '" + "HeartBeatSignal(sender: 10 (STRAIGHT), target: 100, status: DENIED, timestamp: Thu Dec 01 10:44:53 CET 2016)"+ "'", str52.equals("HeartBeatSignal(sender: 10 (STRAIGHT), target: 100, status: DENIED, timestamp: Thu Dec 01 10:44:53 CET 2016)"));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus53 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus53.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus60 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus60.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side64 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side64.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side70 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side70.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side72 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side72.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i73 + "' != '" + 100+ "'", i73.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + i74 + "' != '" + (-1)+ "'", i74.equals((-1)));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str75 + "' != '" + "HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:53 CET 2016)"+ "'", str75.equals("HeartBeatSignal(sender: -1 (STRAIGHT), target: 100, status: null, timestamp: Thu Dec 01 10:44:53 CET 2016)"));
    org.junit.Assert.assertTrue("'" + side76 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side76.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus78 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus78.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus81 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED + "'", neighborTSMStatus81.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED));
    org.junit.Assert.assertTrue("'" + side85 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side85.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side87 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side87.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));

  }

  @Test
  public void test213() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test213"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy5 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.Direction direction7 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction7, sidetriple_neighborTSMInfo8, loggerWrapper9);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy5, direction7, sidetriple_neighborTSMInfo11, loggerWrapper12);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal14 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction7);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal15 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)100, direction7);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo16 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper17 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl18 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction7, sidetriple_neighborTSMInfo16, loggerWrapper17);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal19 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(short)0, direction7);
    hu.bme.mit.swsv.ris.common.Direction direction20 = turnoutDirectionSignal19.getTurnoutDirection();
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal21 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(short)-1, direction20);
    hu.bme.mit.swsv.ris.common.Direction direction22 = turnoutDirectionSignal21.getTurnoutDirection();
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction20 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction20.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction22 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction22.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test214() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test214"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy4 = null;
    hu.bme.mit.swsv.ris.common.Direction direction5 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy4, direction5, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo9 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper10 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl11 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction5, sidetriple_neighborTSMInfo9, loggerWrapper10);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal12 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction5);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal13 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)-1, direction5);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal14 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)10, direction5);
    hu.bme.mit.swsv.ris.common.Direction direction15 = turnoutDirectionSignal14.getTurnoutDirection();
    org.junit.Assert.assertTrue("'" + direction5 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction5.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction15 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction15.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test215() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test215"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy1 = null;
    hu.bme.mit.swsv.ris.common.Direction direction2 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy1, direction2, sidetriple_neighborTSMInfo3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo6 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper7 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl8 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction2, sidetriple_neighborTSMInfo6, loggerWrapper7);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i11 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side12 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper13 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl14 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i10, sidetriple_i11, sidetriple_side12, loggerWrapper13);
    safetyLogicImpl8.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl14);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i17 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side19 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper20 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl21 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i17, sidetriple_i18, sidetriple_side19, loggerWrapper20);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy22 = null;
    hu.bme.mit.swsv.ris.common.Direction direction23 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo24 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper25 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl26 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy22, direction23, sidetriple_neighborTSMInfo24, loggerWrapper25);
    signalMapperImpl21.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i29 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i30 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side31 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper32 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl33 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i29, sidetriple_i30, sidetriple_side31, loggerWrapper32);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy34 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy35 = null;
    hu.bme.mit.swsv.ris.common.Direction direction36 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo37 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper38 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl39 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy35, direction36, sidetriple_neighborTSMInfo37, loggerWrapper38);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo40 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper41 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl42 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy34, direction36, sidetriple_neighborTSMInfo40, loggerWrapper41);
    signalMapperImpl33.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl42);
    signalMapperImpl21.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl42);
    safetyLogicImpl42.disconnect();
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i47 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i48 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side49 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper50 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl51 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i47, sidetriple_i48, sidetriple_side49, loggerWrapper50);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient52 = null;
    signalMapperImpl51.setMqClient(mQClient52);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i55 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i56 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side57 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper58 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl59 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i55, sidetriple_i56, sidetriple_side57, loggerWrapper58);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy60 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy61 = null;
    hu.bme.mit.swsv.ris.common.Direction direction62 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo63 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper64 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl65 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy61, direction62, sidetriple_neighborTSMInfo63, loggerWrapper64);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo66 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper67 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl68 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy60, direction62, sidetriple_neighborTSMInfo66, loggerWrapper67);
    signalMapperImpl59.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl68);
    signalMapperImpl51.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl68);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy71 = null;
    hu.bme.mit.swsv.ris.common.Direction direction72 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo73 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper74 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl75 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy71, direction72, sidetriple_neighborTSMInfo73, loggerWrapper74);
    signalMapperImpl51.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl75);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy77 = null;
    hu.bme.mit.swsv.ris.common.Direction direction78 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo79 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper80 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl81 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy77, direction78, sidetriple_neighborTSMInfo79, loggerWrapper80);
    hu.bme.mit.swsv.ris.tsm.SignalMapper signalMapper82 = null;
    safetyLogicImpl81.setSignalMapper(signalMapper82);
    signalMapperImpl51.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl81);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient85 = null;
    signalMapperImpl51.setMqClient(mQClient85);
    safetyLogicImpl42.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl51);
    safetyLogicImpl8.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl51);
    org.junit.Assert.assertTrue("'" + direction2 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction2.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction23 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction23.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction36 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction36.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction62 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction62.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction72 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction72.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction78 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction78.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test216() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test216"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy4 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy5 = null;
    hu.bme.mit.swsv.ris.common.Direction direction6 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo7 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper8 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl9 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy5, direction6, sidetriple_neighborTSMInfo7, loggerWrapper8);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo10 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper11 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl12 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy4, direction6, sidetriple_neighborTSMInfo10, loggerWrapper11);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal13 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo14 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper15 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl16 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction6, sidetriple_neighborTSMInfo14, loggerWrapper15);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal17 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)10, direction6);
    hu.bme.mit.swsv.ris.common.Direction direction18 = turnoutDirectionSignal17.getTurnoutDirection();
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal19 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(97, direction18);
    org.junit.Assert.assertTrue("'" + direction6 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction6.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction18 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction18.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test217() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test217"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.Direction direction1 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo2 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper3 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl4 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction1, sidetriple_neighborTSMInfo2, loggerWrapper3);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus7 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus10 = null;
    hu.bme.mit.swsv.ris.common.Side side11 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal12 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus10, side11);
    hu.bme.mit.swsv.ris.common.Side side13 = heartBeatSignal12.getSenderSide();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus14 = heartBeatSignal12.getStatus();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus15 = heartBeatSignal12.getStatus();
    java.util.Date date16 = heartBeatSignal12.getTimestamp();
    java.util.Date date17 = heartBeatSignal12.getTimestamp();
    hu.bme.mit.swsv.ris.common.Side side18 = heartBeatSignal12.getSenderSide();
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal19 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, 0, neighborTSMStatus7, side18);
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy23 = hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE;
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal24 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(byte)10, sectionOccupancy23);
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal25 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal((int)(short)100, sectionOccupancy23);
    java.lang.String str26 = sectionOccupancySignal25.toString();
    hu.bme.mit.swsv.ris.common.SectionOccupancy sectionOccupancy27 = sectionOccupancySignal25.getSectionOccupancy();
    hu.bme.mit.swsv.ris.signals.SectionOccupancySignal sectionOccupancySignal28 = new hu.bme.mit.swsv.ris.signals.SectionOccupancySignal(100, sectionOccupancy27);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl4.sectionOccupancyChanged(side18, sectionOccupancy27);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction1 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction1.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus7 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED + "'", neighborTSMStatus7.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED));
    org.junit.Assert.assertTrue("'" + side11 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side11.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side13 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side13.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(neighborTSMStatus14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(neighborTSMStatus15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date17);
    org.junit.Assert.assertTrue("'" + side18 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side18.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + sectionOccupancy23 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy23.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "SectionOccupancySignal(sender: 100, occupancy: FREE)"+ "'", str26.equals("SectionOccupancySignal(sender: 100, occupancy: FREE)"));
    org.junit.Assert.assertTrue("'" + sectionOccupancy27 + "' != '" + hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE + "'", sectionOccupancy27.equals(hu.bme.mit.swsv.ris.common.SectionOccupancy.FREE));

  }

  @Test
  public void test218() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test218"); }


    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy0 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy3 = null;
    hu.bme.mit.swsv.ris.common.Direction direction4 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo5 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper6 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl7 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy3, direction4, sidetriple_neighborTSMInfo5, loggerWrapper6);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy2, direction4, sidetriple_neighborTSMInfo8, loggerWrapper9);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal11 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(97, direction4);
    hu.bme.mit.swsv.ris.common.Direction direction12 = turnoutDirectionSignal11.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo13 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper14 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl15 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy0, direction12, sidetriple_neighborTSMInfo13, loggerWrapper14);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i17 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side19 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper20 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl21 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)(-1), sidetriple_i17, sidetriple_i18, sidetriple_side19, loggerWrapper20);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient22 = null;
    signalMapperImpl21.setMqClient(mQClient22);
    safetyLogicImpl15.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl21);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient25 = null;
    signalMapperImpl21.setMqClient(mQClient25);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy27 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy28 = null;
    hu.bme.mit.swsv.ris.common.Direction direction29 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo30 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper31 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl32 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy28, direction29, sidetriple_neighborTSMInfo30, loggerWrapper31);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo33 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper34 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl35 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy27, direction29, sidetriple_neighborTSMInfo33, loggerWrapper34);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i37 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i38 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side39 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper40 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl41 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i37, sidetriple_i38, sidetriple_side39, loggerWrapper40);
    safetyLogicImpl35.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl41);
    signalMapperImpl21.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl35);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient44 = null;
    signalMapperImpl21.setMqClient(mQClient44);
    org.junit.Assert.assertTrue("'" + direction4 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction4.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction12 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction12.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction29 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction29.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test219() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test219"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i9 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i9, sidetriple_i10, sidetriple_side11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.Direction direction16 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo17 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper18 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl19 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction16, sidetriple_neighborTSMInfo17, loggerWrapper18);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy14, direction16, sidetriple_neighborTSMInfo20, loggerWrapper21);
    signalMapperImpl13.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy25 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy26 = null;
    hu.bme.mit.swsv.ris.common.Direction direction27 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo28 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper29 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl30 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy26, direction27, sidetriple_neighborTSMInfo28, loggerWrapper29);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo31 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper32 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl33 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy25, direction27, sidetriple_neighborTSMInfo31, loggerWrapper32);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i35 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i36 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side37 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper38 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl39 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i35, sidetriple_i36, sidetriple_side37, loggerWrapper38);
    safetyLogicImpl33.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl39);
    safetyLogicImpl22.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl39);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus46 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.Side side47 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal48 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(10, (int)(short)1, neighborTSMStatus46, side47);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus53 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.Side side54 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal55 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal(10, (int)(short)1, neighborTSMStatus53, side54);
    hu.bme.mit.swsv.ris.common.Side side56 = hu.bme.mit.swsv.ris.common.Side.FACING;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal57 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)100, 97, neighborTSMStatus53, side56);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal58 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)'4', (int)'#', neighborTSMStatus46, side56);
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus61 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus64 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus67 = null;
    hu.bme.mit.swsv.ris.common.Side side68 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal69 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus67, side68);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal70 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, (int)(short)100, neighborTSMStatus64, side68);
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal71 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)'#', 10, neighborTSMStatus61, side68);
    hu.bme.mit.swsv.ris.common.Side side72 = heartBeatSignal71.getSenderSide();
    java.lang.String str73 = heartBeatSignal71.toString();
    java.util.Date date74 = heartBeatSignal71.getTimestamp();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus77 = hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED;
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus80 = null;
    hu.bme.mit.swsv.ris.common.Side side81 = hu.bme.mit.swsv.ris.common.Side.STRAIGHT;
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal82 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((-1), 100, neighborTSMStatus80, side81);
    hu.bme.mit.swsv.ris.common.Side side83 = heartBeatSignal82.getSenderSide();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus84 = heartBeatSignal82.getStatus();
    hu.bme.mit.swsv.ris.common.NeighborTSMStatus neighborTSMStatus85 = heartBeatSignal82.getStatus();
    java.util.Date date86 = heartBeatSignal82.getTimestamp();
    java.util.Date date87 = heartBeatSignal82.getTimestamp();
    hu.bme.mit.swsv.ris.common.Side side88 = heartBeatSignal82.getSenderSide();
    hu.bme.mit.swsv.ris.signals.HeartBeatSignal heartBeatSignal89 = new hu.bme.mit.swsv.ris.signals.HeartBeatSignal((int)(short)10, 0, neighborTSMStatus77, side88);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl22.neighborStatusChanged(side56, date74, neighborTSMStatus77);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction16 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction16.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction27 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction27.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus46 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus46.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side47 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side47.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus53 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus53.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side54 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side54.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side56 + "' != '" + hu.bme.mit.swsv.ris.common.Side.FACING + "'", side56.equals(hu.bme.mit.swsv.ris.common.Side.FACING));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus61 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED + "'", neighborTSMStatus61.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED));
    org.junit.Assert.assertTrue("'" + neighborTSMStatus64 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED + "'", neighborTSMStatus64.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.DENIED));
    org.junit.Assert.assertTrue("'" + side68 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side68.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side72 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side72.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str73 + "' != '" + "HeartBeatSignal(sender: 35 (STRAIGHT), target: 10, status: ALLOWED, timestamp: Thu Dec 01 10:44:54 CET 2016)"+ "'", str73.equals("HeartBeatSignal(sender: 35 (STRAIGHT), target: 10, status: ALLOWED, timestamp: Thu Dec 01 10:44:54 CET 2016)"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date74);
    org.junit.Assert.assertTrue("'" + neighborTSMStatus77 + "' != '" + hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED + "'", neighborTSMStatus77.equals(hu.bme.mit.swsv.ris.common.NeighborTSMStatus.ALLOWED));
    org.junit.Assert.assertTrue("'" + side81 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side81.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    org.junit.Assert.assertTrue("'" + side83 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side83.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(neighborTSMStatus84);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(neighborTSMStatus85);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date86);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(date87);
    org.junit.Assert.assertTrue("'" + side88 + "' != '" + hu.bme.mit.swsv.ris.common.Side.STRAIGHT + "'", side88.equals(hu.bme.mit.swsv.ris.common.Side.STRAIGHT));

  }

  @Test
  public void test220() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test220"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.Direction direction7 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction7, sidetriple_neighborTSMInfo8, loggerWrapper9);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl10);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient12 = null;
    signalMapperImpl5.setMqClient(mQClient12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMStatus> sidetriple_neighborTSMStatus14 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl5.sendStatus(sidetriple_neighborTSMStatus14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test221() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test221"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.Direction direction7 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction7, sidetriple_neighborTSMInfo8, loggerWrapper9);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl10);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy12 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy13 = null;
    hu.bme.mit.swsv.ris.common.Direction direction14 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy13, direction14, sidetriple_neighborTSMInfo15, loggerWrapper16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo18 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper19 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl20 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy12, direction14, sidetriple_neighborTSMInfo18, loggerWrapper19);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i22 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i23 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side24 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper25 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl26 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i22, sidetriple_i23, sidetriple_side24, loggerWrapper25);
    safetyLogicImpl20.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl26);
    safetyLogicImpl20.disconnect();
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl20);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionControl> sidetriple_sectionControl30 = null;
    // The following exception was thrown during execution in test generation
    try {
    signalMapperImpl5.sendControl(sidetriple_sectionControl30);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction14 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction14.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test222() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test222"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient6 = null;
    signalMapperImpl5.setMqClient(mQClient6);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i9 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i10 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side11 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper12 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl13 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i9, sidetriple_i10, sidetriple_side11, loggerWrapper12);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy15 = null;
    hu.bme.mit.swsv.ris.common.Direction direction16 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo17 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper18 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl19 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy15, direction16, sidetriple_neighborTSMInfo17, loggerWrapper18);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo20 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper21 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl22 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy14, direction16, sidetriple_neighborTSMInfo20, loggerWrapper21);
    signalMapperImpl13.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl22);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient25 = null;
    signalMapperImpl5.setMqClient(mQClient25);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy27 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy29 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy30 = null;
    hu.bme.mit.swsv.ris.common.Direction direction31 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo32 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper33 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl34 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy30, direction31, sidetriple_neighborTSMInfo32, loggerWrapper33);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo35 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper36 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl37 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy29, direction31, sidetriple_neighborTSMInfo35, loggerWrapper36);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal38 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(97, direction31);
    hu.bme.mit.swsv.ris.common.Direction direction39 = turnoutDirectionSignal38.getTurnoutDirection();
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo40 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper41 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl42 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy27, direction39, sidetriple_neighborTSMInfo40, loggerWrapper41);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl42);
    org.junit.Assert.assertTrue("'" + direction16 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction16.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction31 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction31.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction39 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction39.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test223() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test223"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.Direction direction7 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction7, sidetriple_neighborTSMInfo8, loggerWrapper9);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl10);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i13 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i13, sidetriple_i14, sidetriple_side15, loggerWrapper16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy19 = null;
    hu.bme.mit.swsv.ris.common.Direction direction20 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy19, direction20, sidetriple_neighborTSMInfo21, loggerWrapper22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo24 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper25 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl26 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy18, direction20, sidetriple_neighborTSMInfo24, loggerWrapper25);
    signalMapperImpl17.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    safetyLogicImpl26.disconnect();
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i31 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i32 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side33 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper34 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl35 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i31, sidetriple_i32, sidetriple_side33, loggerWrapper34);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient36 = null;
    signalMapperImpl35.setMqClient(mQClient36);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i39 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i40 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side41 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper42 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl43 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i39, sidetriple_i40, sidetriple_side41, loggerWrapper42);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy44 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy45 = null;
    hu.bme.mit.swsv.ris.common.Direction direction46 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo47 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper48 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl49 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy45, direction46, sidetriple_neighborTSMInfo47, loggerWrapper48);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo50 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper51 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl52 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy44, direction46, sidetriple_neighborTSMInfo50, loggerWrapper51);
    signalMapperImpl43.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl52);
    signalMapperImpl35.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl52);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy55 = null;
    hu.bme.mit.swsv.ris.common.Direction direction56 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo57 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper58 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl59 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy55, direction56, sidetriple_neighborTSMInfo57, loggerWrapper58);
    signalMapperImpl35.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl59);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy61 = null;
    hu.bme.mit.swsv.ris.common.Direction direction62 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo63 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper64 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl65 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy61, direction62, sidetriple_neighborTSMInfo63, loggerWrapper64);
    hu.bme.mit.swsv.ris.tsm.SignalMapper signalMapper66 = null;
    safetyLogicImpl65.setSignalMapper(signalMapper66);
    signalMapperImpl35.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl65);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient69 = null;
    signalMapperImpl35.setMqClient(mQClient69);
    safetyLogicImpl26.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl35);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy74 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy75 = null;
    hu.bme.mit.swsv.ris.common.Direction direction76 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo77 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper78 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl79 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy75, direction76, sidetriple_neighborTSMInfo77, loggerWrapper78);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo80 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper81 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl82 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy74, direction76, sidetriple_neighborTSMInfo80, loggerWrapper81);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal83 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal(0, direction76);
    hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal turnoutDirectionSignal84 = new hu.bme.mit.swsv.ris.signals.TurnoutDirectionSignal((int)(byte)100, direction76);
    // The following exception was thrown during execution in test generation
    try {
    safetyLogicImpl26.turnoutDirectionChanged(direction76);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction20 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction20.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction46 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction46.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction56 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction56.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction62 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction62.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction76 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction76.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

  @Test
  public void test224() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test224"); }


    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i1 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i2 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side3 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper4 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl5 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i1, sidetriple_i2, sidetriple_side3, loggerWrapper4);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy6 = null;
    hu.bme.mit.swsv.ris.common.Direction direction7 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo8 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper9 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl10 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy6, direction7, sidetriple_neighborTSMInfo8, loggerWrapper9);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl10);
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i13 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i14 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side15 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper16 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl17 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)0, sidetriple_i13, sidetriple_i14, sidetriple_side15, loggerWrapper16);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy18 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.SectionOccupancy> sidetriple_sectionOccupancy19 = null;
    hu.bme.mit.swsv.ris.common.Direction direction20 = hu.bme.mit.swsv.ris.common.Direction.DIVERGENT;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo21 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper22 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl23 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy19, direction20, sidetriple_neighborTSMInfo21, loggerWrapper22);
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.NeighborTSMInfo> sidetriple_neighborTSMInfo24 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper25 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl safetyLogicImpl26 = new hu.bme.mit.swsv.ris.tsm.impl.SafetyLogicImpl(sidetriple_sectionOccupancy18, direction20, sidetriple_neighborTSMInfo24, loggerWrapper25);
    signalMapperImpl17.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    signalMapperImpl5.setSafetyLogic((hu.bme.mit.swsv.ris.tsm.SafetyLogic)safetyLogicImpl26);
    safetyLogicImpl26.disconnect();
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i31 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<java.lang.Integer> sidetriple_i32 = null;
    hu.bme.mit.swsv.ris.common.SideTriple<hu.bme.mit.swsv.ris.common.Side> sidetriple_side33 = null;
    hu.bme.mit.swsv.ris.common.logging.LoggerWrapper loggerWrapper34 = null;
    hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl signalMapperImpl35 = new hu.bme.mit.swsv.ris.tsm.impl.SignalMapperImpl((java.lang.Integer)97, sidetriple_i31, sidetriple_i32, sidetriple_side33, loggerWrapper34);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient36 = null;
    signalMapperImpl35.setMqClient(mQClient36);
    safetyLogicImpl26.setSignalMapper((hu.bme.mit.swsv.ris.tsm.SignalMapper)signalMapperImpl35);
    hu.bme.mit.swsv.ris.tsm.MQClient mQClient39 = null;
    signalMapperImpl35.setMqClient(mQClient39);
    org.junit.Assert.assertTrue("'" + direction7 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction7.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));
    org.junit.Assert.assertTrue("'" + direction20 + "' != '" + hu.bme.mit.swsv.ris.common.Direction.DIVERGENT + "'", direction20.equals(hu.bme.mit.swsv.ris.common.Direction.DIVERGENT));

  }

}
